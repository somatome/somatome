<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stack Overflow まとめ</title>
  
  
  <link href="/somatome/atom.xml" rel="self"/>
  
  <link href="http://localhost:4000/"/>
  <updated>2017-09-29T01:22:07.822Z</updated>
  <id>http://localhost:4000/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScriptの配列から特定の要素を削除するにはどうすればいいの？ [Javascript]</title>
    <link href="http://localhost:4000/2017/09/29/how-do-i-remove-a-particular-element-from-an-array-in-javascript/"/>
    <id>http://localhost:4000/2017/09/29/how-do-i-remove-a-particular-element-from-an-array-in-javascript/</id>
    <published>2017-09-28T23:38:53.000Z</published>
    <updated>2017-09-29T01:22:07.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>整数の配列があって、要素を追加するために<code>.push()</code>メソッドを使用してるとする。</p><p>ここで、配列から特定の要素を削除する簡単な方法ってある？ <code>array.remove(int);</code>みたいな感じの。</p><p>ただし、JavaScript <em>のみ</em> を使用するとして。フレームワークは使えないんだ。</p><p><div style="text-align: right"> By  <a href="/users/364969/walker">Walker</a> | 質問日時： 2011年4月23日 22:17 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>まず、削除したい要素の <code>index</code>を見つけよう：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> array = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>];</div><div class="line"><span class="keyword">var</span> index = array.indexOf(<span class="number">5</span>);</div></pre></td></tr></table></figure><p><strong>注</strong>：<a href="http://kangax.github.io/compat-table/es5/#test-Array.prototype.indexOf" target="_blank" rel="external">indexOfのブラウザサポート</a>は限られてる。Internet Explorer 7および8ではサポートされてないよ。</p><p>次に、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice" target="_blank" rel="external"><code>splice</code></a>で削除する：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (index &amp;gt; <span class="number">-1</span>) &#123;</div><div class="line">    array.splice(index, <span class="number">1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>splice</code>の2番目のパラメータは削除する要素の数。<code>splice</code>は配列の場所を変えて、削除された要素を含む新しい配列を返す。</p><hr><p>サポートされていないブラウザで <code>indexOf</code>が必要な場合は、以下の<code>polyfill</code>を試してみて。詳しくは<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Polyfill" target="_blank" rel="external"><strong><em>ここの<code>polyfill</code></em></strong></a>を参照。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.indexOf || (<span class="built_in">Array</span>.prototype.indexOf = <span class="function"><span class="keyword">function</span>(<span class="params">d, e</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> a;</div><div class="line">    <span class="keyword">if</span> (<span class="literal">null</span> == <span class="keyword">this</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">'"これ" はNULLまたは定義されていない'</span>);</div><div class="line">    <span class="keyword">var</span> c = <span class="built_in">Object</span>(<span class="keyword">this</span>),</div><div class="line">        b = c.length &amp;gt;&amp;gt;&amp;gt; <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> === b) <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    a = +e || <span class="number">0</span>;</div><div class="line">    <span class="literal">Infinity</span> === <span class="built_in">Math</span>.abs(a) &amp;amp;&amp;amp; (a = <span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span> (a &amp;gt;= b) <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    <span class="keyword">for</span> (a = <span class="built_in">Math</span>.max(<span class="number">0</span> &amp;lt;= a ? a : b - <span class="built_in">Math</span>.abs(a), <span class="number">0</span>); a &amp;lt; b;) &#123;</div><div class="line">        <span class="keyword">if</span> (a <span class="keyword">in</span> c &amp;amp;&amp;amp; c[a] === d) <span class="keyword">return</span> a;</div><div class="line">        a++</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">-1</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/613430/tom-wadley">Tom Wadley</a> | 回答日時： 2011年4月23日 22:23 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p><code>array.remove(int)</code>がどのように動作することを期待しているのか分からないけど、あなたが欲しいかもと思う答えは3つの可能性があるかな：</p><p>インデックスi配列の要素を削除するには：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">array.splice(i, <span class="number">1</span>);</div></pre></td></tr></table></figure><p>値 <code>number</code>を持つすべての要素を配列から削除する場合は、次のようにする。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = array.length - <span class="number">1</span>; i &amp;gt;= <span class="number">0</span>; i--) &#123;</div><div class="line">    <span class="keyword">if</span>(array[i] === number) &#123;</div><div class="line">       array.splice(i, <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>インデックスのある要素<code>i</code>削除したくて、でも他の要素のインデックスを変更したくないのなら、</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">delete</span> array[i];</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/546661/peter-olson">Peter Olson</a> | 回答日時： 2011年4月23日 22:20 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/5767325/how-do-i-remove-a-particular-element-from-an-array-in-javascript" target="_blank" rel="external">How do I remove a particular element from an array in JavaScript?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;整数の配列があって、要素を追加するために&lt;code&gt;.push()&lt;/code&gt;メソッドを使用してるとする。&lt;/p&gt;
&lt;p&gt;ここで、配列から特定の要素を削除する簡単な方法ってある？ &lt;code&gt;array.remove(int);&lt;/code&gt;みたいな感じの。&lt;/p&gt;
&lt;p&gt;ただし、JavaScript &lt;em&gt;のみ&lt;/em&gt; を使用するとして。フレームワークは使えないんだ。&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/364969/walker&quot;&gt;Walker&lt;/a&gt; | 質問日時： 2011年4月23日 22:17 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://localhost:4000/tags/javascript/"/>
    
      <category term="arrays" scheme="http://localhost:4000/tags/arrays/"/>
    
  </entry>
  
  <entry>
    <title>JSONでコメントって使用できる？ [JSON]</title>
    <link href="http://localhost:4000/2017/09/29/can-comments-be-used-in-json/"/>
    <id>http://localhost:4000/2017/09/29/can-comments-be-used-in-json/</id>
    <published>2017-09-28T23:20:46.000Z</published>
    <updated>2017-09-29T01:23:37.828Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>JSONファイル内でコメントって使用できる？もしそうなら、どうやるの？</p><p><div style="text-align: right"> By  <a href="/users/4105/michael-gundlach">Michael Gundlach</a> | 質問日時： 2008年10月28日 20:39 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>できるとは思わないなー。JSONはすべてデータである必要があるから、コメントを追加するとそれもデータになるよ。</p><p>JSONデータを使用するアプリケーションでは無視される（例えば）”_comment” という指定のデータ要素を持つことができると思うけど。</p><p>JSONを生成/受信するプロセスの中にコメントを入れておいたほうがいいんじゃないかな。だってそのプロセスはJSONデータが何かを（少なくともJSONの構造については）事前に知っているはずなので。</p><p>でも、もしどうしてもって言うのなら：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">   <span class="attr">"_comment"</span>: <span class="string">"コメントはここに.."</span>,</div><div class="line">   <span class="attr">"glossary"</span>: &#123;</div><div class="line">      <span class="attr">"title"</span>: <span class="string">"example glossary"</span>,</div><div class="line">      <span class="attr">"GlossDiv"</span>: &#123;</div><div class="line">         <span class="attr">"title"</span>: <span class="string">"S"</span>,</div><div class="line">         <span class="attr">"GlossList"</span>: &#123;</div><div class="line">            <span class="attr">"GlossEntry"</span>: &#123;</div><div class="line">               <span class="attr">"ID"</span>: <span class="string">"SGML"</span>,</div><div class="line">               <span class="attr">"SortAs"</span>: <span class="string">"SGML"</span>,</div><div class="line">               <span class="attr">"GlossTerm"</span>: <span class="string">"Standard Generalized Markup Language"</span>,</div><div class="line">               <span class="attr">"Acronym"</span>: <span class="string">"SGML"</span>,</div><div class="line">               <span class="attr">"Abbrev"</span>: <span class="string">"ISO 8879:1986"</span>,</div><div class="line">               <span class="attr">"GlossDef"</span>: &#123;</div><div class="line">                  <span class="attr">"para"</span>: <span class="string">"A meta-markup language, used to create markup languages such as DocBook."</span>,</div><div class="line">                  <span class="attr">"GlossSeeAlso"</span>: [<span class="string">"GML"</span>, <span class="string">"XML"</span>]</div><div class="line">               &#125;,</div><div class="line">               <span class="attr">"GlossSee"</span>: <span class="string">"markup"</span></div><div class="line">            &#125;</div><div class="line">         &#125;</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/27580/eli">Eli</a> | 回答日時： 2008年10月28日 21:01 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p><strong>ダメ</strong>。 <code>// ...</code>とか <code>/ * ... * /</code>の形式のコメントはJSONには無いよ。以下を参照：</p><ul><li><a href="http://www.json.org" target="_blank" rel="external">http://www.json.org</a></li><li><a href="http://www.ietf.org/rfc/rfc4627.txt" target="_blank" rel="external">RFC 4627</a>：JavaScript Object Notation(JSON)の<code>application/json</code>メディアタイプ</li><li><a href="http://www.ietf.org/rfc/rfc7159.txt" target="_blank" rel="external">RFC 7159</a>JavaScript Object Notation(JSON)データ交換フォーマット - 廃止：4627,7158</li></ul><p><div style="text-align: right"> By  <a href="/users/240733/stakx">stakx</a> | 回答日時： 2010年11月15日 9:32 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>コメントは設計上JSONから削除されたよ。</p><blockquote><p>私はJSONからコメントを削除しました。なぜなら、構文解析ディレクティブを保持するのにJSONのコメントを使用してる人を見たことがあるから。このやり方は相互運用性を破壊してしまう。 私は、コメントが無いことによって落胆する人々がいることも知ってるけど、でもコメントはあるべきじゃない。</p><p>JSONを使用したconfigurationファイルがあるとする（そしてそれに注釈を付けたい）。好きなコメントをすべて挿入したらいい。でもその後JSONパーサに渡す前にJSMinでパイプ処理してください。</p></blockquote><p>出典：<a href="https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr" target="_blank" rel="external">G +でのDouglas Crockfordの公式声明</a></p><p><div style="text-align: right"> By  <a href="/users/572370/artur-czajka">Artur Czajka</a> | 回答日時： 2012年6月11日 8:52 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/244777/can-comments-be-used-in-json" target="_blank" rel="external">Can comments be used in JSON?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;JSONファイル内でコメントって使用できる？もしそうなら、どうやるの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/4105/michael-gundlach&quot;&gt;Michael Gundlach&lt;/a&gt; | 質問日時： 2008年10月28日 20:39 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="json" scheme="http://localhost:4000/tags/json/"/>
    
      <category term="comments" scheme="http://localhost:4000/tags/comments/"/>
    
  </entry>
  
  <entry>
    <title>Gitリポジトリを以前のコミットに戻すには？ [Git]</title>
    <link href="http://localhost:4000/2017/09/28/how-to-revert-git-repository-to-a-previous-commit/"/>
    <id>http://localhost:4000/2017/09/28/how-to-revert-git-repository-to-a-previous-commit/</id>
    <published>2017-09-28T20:17:49.000Z</published>
    <updated>2017-09-28T23:15:08.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>現在の状態から、あるコミットの時点でのスナップショットに戻すのってどうやればいいの？<br><code>git log</code>をすると、こんなのが出力されるんだけど：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">log</span></div><div class="line">commit a867b4af366350be2e7c21b8de9cc6504678a61b`</div><div class="line">Author: Me &lt;me@me.com&gt;</div><div class="line">Date:   Thu 11月 4 18:59:41 2010 -0400</div><div class="line"></div><div class="line">なんとかかんとか...</div><div class="line"></div><div class="line">commit 25eee4caef46ae64aa08e8ab3f988bc917ee1ce4</div><div class="line">Author: Me &lt;me@me.com&gt;</div><div class="line">Date:   Thu 11月 4 05:13:39 2010 -0400</div><div class="line"></div><div class="line">なんとかかんとかかんとか...</div><div class="line"></div><div class="line">commit 0766c053c0ea2035e90f504928f8df3c9363b8bd</div><div class="line">Author: Me &lt;me@me.com&gt;</div><div class="line">Date:   Thu 11月 4 00:55:06 2010 -0400</div><div class="line"></div><div class="line">さらになんとかかんとか...</div><div class="line"></div><div class="line">commit 0d1d7fc32e5a947fbd92ee598033d85bfc445a50</div><div class="line">Author: Me &lt;me@me.com&gt;</div><div class="line">Date:   Wed 11月 3 23:56:08 2010 -0400</div><div class="line"></div><div class="line">そう、もっともっとなんとかかんとか...</div></pre></td></tr></table></figure></p><p>どうやってここから11月3日、つまりコミット0d1d7fc…に戻せばいいの？</p><p><div style="text-align: right"> By  <a href="/users/111174/crazy-serb">Crazy Serb</a> | 質問日時： 2010年11月6日 16:58 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>これは”元に戻す”がどういう意味かによるかな。</p><h2 id="一時的に別のコミットに切り替える"><a href="#一時的に別のコミットに切り替える" class="headerlink" title="一時的に別のコミットに切り替える"></a>一時的に別のコミットに切り替える</h2><p>もし一時的にそれに戻して、なんか作業して、また元に戻ってきたいのなら、望みのコミットをチェックアウトすればいい：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># これはHEADを切り離す、つまり、ブランチをチェックアウトしないままにする：</span></div><div class="line">git checkout 0d1d7fc32</div></pre></td></tr></table></figure><p>または、そこに戻してる間にコミットしたい場合は、そこにいる間に新しいブランチを作るべき：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b old-state 0d1d7fc32</div></pre></td></tr></table></figure><p>元の場所に戻るには、もう一度あなたがいた支店をチェックしてください。 (If<br>ブランチを切り替えるときはいつものように変更を加えました。<br>必要に応じてそれらと一緒に。あなたはそれらを捨てるようにリセットすることができます。あなたは隠れて、<br>チェックアウトして、あなたと一緒に連れていってください。それらをブランチにコミットすることができます<br>そこに支店が必要な場合はそこに。)</p><p>##非公開のコミットをハード削除する</p><p>一方で、あなたが本当にやったことすべてを取り除きたいのであれば<br>それ以来、2つの可能性があります。 1つ、あなたが<br>これらのコミットは、単にリセットします：</p><pre><code>＃これにより、ローカルの変更はすべて破棄されます。＃コミットしたくない作業が残っている場合は、実行しないでください。git reset --hard 0d1d7fc32＃あるいは、保存する作業がある場合：git stashgit reset --hard 0d1d7fc32git stash pop＃これは変更を保存し、リセット後にそのパッチを再適用します。＃マージの競合が発生する可能性があります。＃あなたがリセットしたコミットから変更されました。</code></pre><p>面倒なことがあれば、あなたはすでにローカルの変更を投げ捨てましたが、<br>もう一度リセットすることで、以前の場所に戻ってください。</p><p>##新しいコミットでコミットされたコミットを元に戻す</p><p>一方、あなたが作品を発表した場合、おそらく<br>ブランチをリセットすると、効果的に履歴を書き換えられるからです。その場合、<br>あなたは確かにコミットを元に戻すことができます。 Gitを使うと、元に戻すことは非常に特殊です<br>意味：逆パッチでコミットを作成して取り消します。このようにして<br>履歴を書き換えないでください。</p><pre><code>＃これは3つの別々の復帰コミットを作成します：git revert a867b4af 25eee4ca 0766c053＃それはまた範囲を取る。これは最後の2つのコミットを元に戻します：git revert HEAD〜2..HEAD＃同様に、コミットハッシュを使用して一連のコミットを元に戻すことができます。git revert a867b4af..0766c053＃マージコミットを元に戻すgit revert -m 1 &lt;merge_commit_sha&gt;＃ちょうど1つを得るには、 `rebase -i`を使って後でそれらを押しつぶすことができます＃または、手動で行うこともできます(リポジトリのトップレベルでこれを行うことを忘れないでください)＃HEADを変更せずに、あなたのインデックスと作業ツリーを目的の状態にする：git checkout 0d1d7fc32。＃次にコミットします。あなたがやったことを説明する良いメッセージを書いてくださいgit commit</code></pre><p><a href="http://schacon.github.com/git/git-revert.html" target="_blank" rel="external"><code>git-revert</code>マンページ</a><br>実際にはその説明で多くのことをカバーしています。もう一つの役に立つリンクは[this<br>git-scm.comブログ投稿でgit-revertについて議論する(http：// git-<br>scm.com/blog/2010/03/02/undoing-merges.html)。</p><p>あなたが結局元に戻したくないと決めたら、元に戻すことができます<br>(ここで説明したように)、または元に戻す前にリセットすることができます(前の<br>セクション)。</p><p>この回答は、この場合に役立ちます：<br><a href="https://stackoverflow.com/questions/34519665/how-to-move-head-forward-checkout-revet-reflog-reset/34519716＃34519716" target="_blank" rel="external">HEADを元の場所に戻す方法は？ (分離された<br>head)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># This will destroy any local modifications.</div><div class="line"># Don&apos;t do it if you have uncommitted work you want to keep.</div><div class="line">git reset --hard 0d1d7fc32</div><div class="line"></div><div class="line"># Alternatively, if there&apos;s work to keep:</div><div class="line">git stash</div><div class="line">git reset --hard 0d1d7fc32</div><div class="line">git stash pop</div><div class="line"># This saves the modifications, then reapplies that patch after resetting.</div><div class="line"># You could get merge conflicts, if you&apos;ve modified things which were</div><div class="line"># changed since the commit you reset to.</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># This will create three separate revert commits:</div><div class="line">git revert a867b4af 25eee4ca 0766c053</div><div class="line"></div><div class="line"># It also takes ranges. This will revert the last two commits:</div><div class="line">git revert HEAD~2..HEAD</div><div class="line"></div><div class="line">#Similarly, you can revert a range of commits using commit hashes:</div><div class="line">git revert a867b4af..0766c053</div><div class="line"></div><div class="line"># Reverting a merge commit</div><div class="line">git revert -m 1 &lt;merge_commit_sha&gt;</div><div class="line"></div><div class="line"># To get just one, you could use `rebase -i` to squash them afterwards</div><div class="line"># Or, you could do it manually (be sure to do this at top level of the repo)</div><div class="line"># get your index and work tree into the desired state, without changing HEAD:</div><div class="line">git checkout 0d1d7fc32 .</div><div class="line"></div><div class="line"># Then commit. Be sure and write a good message describing what you just did</div><div class="line">git commit</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/119963/jefromi">Jefromi</a> | 回答日時： Nov 6 2010 at 17:04 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><h3 id="作業コピーを最新のコミットに戻す"><a href="#作業コピーを最新のコミットに戻す" class="headerlink" title="作業コピーを最新のコミットに戻す"></a>作業コピーを最新のコミットに戻す</h3><p>以前のコミットに戻し、変更を無視するには：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git reset --hard HEAD</div></pre></td></tr></table></figure><p>HEADは現在のブランチの最後のコミットね。</p><h3 id="作業コピーを古いコミットに戻す"><a href="#作業コピーを古いコミットに戻す" class="headerlink" title="作業コピーを古いコミットに戻す"></a>作業コピーを古いコミットに戻す</h3><p>直近のコミットよりも古いコミットに戻すには：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># インデックスを以前のコミットにリセットする。 '56e05fced'は適宜書き換えて</span></div><div class="line">git reset 56e05fced</div><div class="line"></div><div class="line"><span class="comment"># ポインタを前のHEADに戻す</span></div><div class="line">git reset --soft HEAD@&#123;1&#125;</div><div class="line"></div><div class="line">git commit -m <span class="string">"56e05fcedに戻す"</span></div><div class="line"></div><div class="line"><span class="comment"># 新しいコミットを反映するように作業コピーを更新する</span></div><div class="line">git reset --hard</div></pre></td></tr></table></figure><p>元ネタは同じような質問のページ: <a href="https://stackoverflow.com/questions/1895059/revert-to-a-commit-by-a-sha-hash-in-git" target="_blank" rel="external">SHAハッシュで以前のコミットに戻る方法？</a></p><p><div style="text-align: right"> By  <a href="/users/1276506/boulder-ruby">boulder_ruby</a> | 回答日時： Aug 21 ‘12 at 6:19 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>複雑でヤバい答えがたくさんあるけど、実際は簡単：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git revert --no-commit 0766c053..HEAD</div><div class="line">git commit</div></pre></td></tr></table></figure><p>これは、HEADからコミットハッシュに戻ってすべてを元に戻すよ。つまり、すべてのコミットがその状態に戻ったかのように作業ツリー内のそのコミット状態を再び作成してる。。それから現在のツリーをコミットすると、「元に戻した」コミットと本質的に同等の新しいコミットをするよ。</p><p>(<code>--no-commit</code>フラグは、すべてのコミットを一度に元に戻す - そうじゃければ範囲内の各コミットのコメントを入れるように促される、これはコミット履歴を不要な新しいコミットのゴミで汚しちゃうけど)</p><p>重要なのは、これは以前の状態にロールバックする<strong>安全かつ簡単な方法</strong>だってこと。履歴は壊されることなく、すでに公開されているコミットに使用することができる。</p><p><div style="text-align: right"> By  <a href="/users/165673/yarin">Yarin</a> | 回答日時： Feb 12 ‘14 at 4:18 </div><br></p><hr><hr><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><p>僕にとっては（たぶん他の人にも）、一番いいのはGitリセットオプションだよ：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git reset --hard &lt;commidId&gt; &amp;amp;&amp;amp; git clean -f</div></pre></td></tr></table></figure><p>これは僕にとって最高の選択肢だった！シンプルで、速く、効果的！</p><hr><p><strong>注意：</strong> でも古いコミットのコピーを持っている他の人とブランチを共有している場合は、この方法は使わないこと！</p><p>あと、あんまりヤバくない方法がお好みの時は、</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clean -i</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/1606432/pogrindis">Pogrindis</a> | 回答日時： Oct 22 ‘13 at 11:53 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/4114095/how-to-revert-git-repository-to-a-previous-commit" target="_blank" rel="external">How to revert Git repository to a previous commit?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;現在の状態から、あるコミットの時点でのスナップショットに戻すのってどうやればいいの？&lt;br&gt;&lt;code&gt;git log&lt;/code&gt;をすると、こんなのが出力されるんだけど：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;commit a867b4af366350be2e7c21b8de9cc6504678a61b`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Author: Me &amp;lt;me@me.com&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date:   Thu 11月 4 18:59:41 2010 -0400&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;なんとかかんとか...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;commit 25eee4caef46ae64aa08e8ab3f988bc917ee1ce4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Author: Me &amp;lt;me@me.com&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date:   Thu 11月 4 05:13:39 2010 -0400&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;なんとかかんとかかんとか...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;commit 0766c053c0ea2035e90f504928f8df3c9363b8bd&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Author: Me &amp;lt;me@me.com&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date:   Thu 11月 4 00:55:06 2010 -0400&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;さらになんとかかんとか...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;commit 0d1d7fc32e5a947fbd92ee598033d85bfc445a50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Author: Me &amp;lt;me@me.com&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date:   Wed 11月 3 23:56:08 2010 -0400&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;そう、もっともっとなんとかかんとか...&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;どうやってここから11月3日、つまりコミット0d1d7fc…に戻せばいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/111174/crazy-serb&quot;&gt;Crazy Serb&lt;/a&gt; | 質問日時： 2010年11月6日 16:58 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://localhost:4000/tags/git/"/>
    
      <category term="git-checkout" scheme="http://localhost:4000/tags/git-checkout/"/>
    
      <category term="git-reset" scheme="http://localhost:4000/tags/git-reset/"/>
    
      <category term="git-revert" scheme="http://localhost:4000/tags/git-revert/"/>
    
  </entry>
  
  <entry>
    <title>ローカルGitブランチの名前を変更するにはどうすればいい？ [Git]</title>
    <link href="http://localhost:4000/2017/09/26/how-do-i-rename-a-local-git-branch/"/>
    <id>http://localhost:4000/2017/09/26/how-do-i-rename-a-local-git-branch/</id>
    <published>2017-09-26T10:40:46.000Z</published>
    <updated>2017-09-26T10:56:29.115Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><em><a href="https://stackoverflow.com/questions/1526794/rename-master-branch-for-both-local-and-remote-git-repositories?answertab=votes#tab-top" target="_blank" rel="external">ローカルとリモートの両方のGitリポジトリのMaster branchの名前を変更する</a></em>に書いてあるように、リモートブランチの名前は変更したくないんだけど。</p><p>リモートブランチにプッシュされていないローカルブランチの名前を変更するにはどうしたらいいの？</p><p><div style="text-align: right"> By  <a href="/users/338204/forrest">Forrest</a> | 質問日時： Jul 6 ‘11 at 3:20 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>あるブランチを指定してそのブランチの名前を変更する場合は、次のようにやればいいよ。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch -m &lt;oldname&gt; &lt;newname&gt;</div></pre></td></tr></table></figure><p>今使ってるブランチの名前を変更するには、次のように</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch -m &lt;newname&gt;</div></pre></td></tr></table></figure><p>これを覚えておくには、 <code>-m</code>は”move”(または<code>mv</code>)、つまりファイル名の変更だ、って覚えておくといいかも。</p><p><div style="text-align: right"> By  <a href="/users/394487/siride">siride</a> | 回答日時： Jul 6 ‘11 at 3:21 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch -m old_branch_name new_branch_name</div></pre></td></tr></table></figure><p>このコマンドで名前を変えられるけど、この名前を変更したブランチを使う時は注意。なぜなら、これはまだ古い上流ブランチを参照してるから（もしそれが存在するのであれば）。</p><p>ローカルブランチを(例えば)<code>new_branch_name</code>に名前を変更した後、変更をマスターにプッシュしたい場合は：</p><p><code>git push origin new_branch_name：master</code>(この変更はマスターブランチに行くけど、君のローカルブランチ名は<code>new_branch_name</code>だよ)</p><p>詳細については、「<a href="http://madhan-tech-updates.blogspot.in/2013/01/how-to-rename-your-local-branch-name-in.html" target="_blank" rel="external">ローカルGitブランチ名の名前を変更する方法</a>」を参照。</p><p><div style="text-align: right"> By  <a href="/users/1996609/madhan-ayyasamy">Madhan Ayyasamy</a> | 回答日時： Jan 21 ‘13 at 9:49 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>ブランチの名前を変更する手順は次のとおり。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1. 名前を変更する必要があるブランチに移動</div><div class="line">2. git branch -m &lt;new_name&gt;</div><div class="line">3. git push origin :&lt;old_name&gt;</div><div class="line">4. git push origin &lt;new_name&gt;:refs/heads/&lt;new_name&gt;</div></pre></td></tr></table></figure><p><strong> 追記(2017/01/12)：</strong>コマンド <code>git status</code>を実行して、新しく作成したブランチが、古いものじゃなくそれ自身（新しいもの）を指していることを確認すること。まだ古いブランチへの参照してる場合は、以下のように上流でのを設定を解除する必要があるよ。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch --<span class="built_in">unset</span>-upstream</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/1719752/milind-anantwar">Milind Anantwar</a> | 回答日時： Apr 15 ‘15 at 12:50 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/6591213/how-do-i-rename-a-local-git-branch" target="_blank" rel="external">How do I rename a local Git branch?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1526794/rename-master-branch-for-both-local-and-remote-git-repositories?answertab=votes#tab-top&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ローカルとリモートの両方のGitリポジトリのMaster branchの名前を変更する&lt;/a&gt;&lt;/em&gt;に書いてあるように、リモートブランチの名前は変更したくないんだけど。&lt;/p&gt;
&lt;p&gt;リモートブランチにプッシュされていないローカルブランチの名前を変更するにはどうしたらいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/338204/forrest&quot;&gt;Forrest&lt;/a&gt; | 質問日時： Jul 6 ‘11 at 3:20 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://localhost:4000/tags/git/"/>
    
      <category term="git-branch" scheme="http://localhost:4000/tags/git-branch/"/>
    
  </entry>
  
  <entry>
    <title>Python forループのインデックスへのアクセス方法 [Python]</title>
    <link href="http://localhost:4000/2017/09/25/accessing-the-index-in-python-for-loops/"/>
    <id>http://localhost:4000/2017/09/25/accessing-the-index-in-python-for-loops/</id>
    <published>2017-09-25T14:24:08.000Z</published>
    <updated>2017-09-25T18:43:37.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>例えばこんなリストがあったとき、このリストのインデックスにアクセスするにはどうしたらいいの？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ints = [<span class="number">8</span>, <span class="number">23</span>, <span class="number">45</span>, <span class="number">12</span>, <span class="number">78</span>]</div></pre></td></tr></table></figure><p>これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？</p><p><div style="text-align: right"> By  <a href="/users/51816/joan-venge">Joan Venge</a> | 質問日時： Feb 6 ‘09 at 22:47 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>インデックス変数とかの追加の状態変数を使用するのはあんまりPythonっぽく無いんだ(CとかPHPなどの言語だと普通だけど)。</p><p>より良い方法は組み込み関数を使うこと：<br><a href="https://docs.python.org/3/library/functions.html#enumerate" title="enumerate" target="_blank" rel="external"><code>enumerate()</code>]</a>、Python2と3の両方で利用できるよ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> idx, val <span class="keyword">in</span> enumerate(ints):</div><div class="line">    print(idx, val)</div></pre></td></tr></table></figure><p>詳しく知りたければ<a href="https://www.python.org/dev/peps/pep-0279/" target="_blank" rel="external">PEP 279</a>を参照してみて。</p><p><div style="text-align: right"> By  <a href="/users/19082/mike-hordecki">Mike Hordecki</a> | 回答日時： Feb 6 ‘09 at 22:52 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><blockquote><h3 id="これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？"><a href="#これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？" class="headerlink" title="これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？"></a>これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？</h3></blockquote><p><code>enumerate</code>を使おう：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(items):</div><div class="line">    print(index, item)</div></pre></td></tr></table></figure><p>あとインデックスはゼロから始まるので、これで0〜4になることに注意。もし、あんたがカウントをしたいっていうのなら、こんな感じに説明するかな。</p><h2 id="慣習的じゃないやり方"><a href="#慣習的じゃないやり方" class="headerlink" title="慣習的じゃないやり方"></a>慣習的じゃないやり方</h2><p>君が求めているのは、以下のPythonicなやり方だろ。これはほとんどの低レベル言語のプログラマーはこのアルゴリズムを使うと思う：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">index = <span class="number">0</span>            <span class="comment"># Pythonのインデックスはゼロから始まる</span></div><div class="line"><span class="keyword">for</span> item <span class="keyword">in</span> items:   <span class="comment"># Pythonのforループは "for each"ループ</span></div><div class="line">    print(index, item)</div><div class="line">    index += <span class="number">1</span></div></pre></td></tr></table></figure><p>それかfor-eachループを持たない言語だと：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">index = <span class="number">0</span></div><div class="line"><span class="keyword">while</span> index &amp;lt; len(items):</div><div class="line">    print(index, items[index])</div><div class="line">    index += <span class="number">1</span></div></pre></td></tr></table></figure><p>それか、ときどきより一般的に(慣習的じゃない)やり方：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> index <span class="keyword">in</span> range(len(items)):</div><div class="line">    print(index, items[index])</div></pre></td></tr></table></figure><h2 id="列挙関数enumerateを使う"><a href="#列挙関数enumerateを使う" class="headerlink" title="列挙関数enumerateを使う"></a>列挙関数<code>enumerate</code>を使う</h2><p>Pythonの<a href="https://docs.python.org/2/library/functions.html#enumerate" target="_blank" rel="external"><code>enumerate</code>関数</a>は、インデックスのための計算処理を隠して、変数をカプセル化することで視覚的にごちゃごちゃしたのを減らす効果がある。こんな感じ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(items, start=<span class="number">0</span>):   <span class="comment"># default is zero</span></div><div class="line">    print(index, item)</div></pre></td></tr></table></figure><p>このコードサンプルは、Pythonの慣習的な書き方と、そうじゃない書き方の違いを表すかなり<a href="http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html#index-item-2-enumerate" target="_blank" rel="external">典型的な</a>例。慣用的なコードは洗練されている(でもそんな複雑じゃない)Python。<br>この慣用コードは、言語の設計者が意図した書き方、つまり、通常このコードはあんまり読みやすくないけど、より効率的。</p><h2 id="カウントする"><a href="#カウントする" class="headerlink" title="カウントする"></a>カウントする</h2><p>たとえインデックスが必要じゃなくても、iterationsのカウントが１から始まって、最後は自分のカウントする数になってほしい(時にはあった方がいい)時がある。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> count, item <span class="keyword">in</span> enumerate(items, start=<span class="number">1</span>):   <span class="comment"># default is zero</span></div><div class="line">    print(item)</div><div class="line"></div><div class="line">print(<span class="string">'there were &#123;0&#125; items printed'</span>.format(count))</div></pre></td></tr></table></figure><p>カウントする、っていうのは君が求めているもの以上のもの(インデックスだけじゃなくて)だとおもうけど、念のため。</p><hr><h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><ul><li>Pythonのインデックスはゼロから始まる</li><li>反復処理中にこれらのインデックスを反復可能コードから取得するには、列挙関数を使用します</li><li>列挙型を慣用的な方法で(タプルのアンパックと一緒に)使用すると、読みやすくメンテナンス可能なコードが作れる。</li></ul><p>だから、こうすべき：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(items, start=<span class="number">0</span>):   <span class="comment"># Pythonのインデックスはゼロから始まる</span></div><div class="line">    print(index, item)</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/541136/aaron-hall">Aaron Hall</a><span class="mod-flair" title="moderator">♦</span> | 回答日時： Jan 21 ‘15 at 17:11 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p><code>0</code>以外の<code>1</code>から始めるのはかなり簡単：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> index <span class="keyword">in</span> enumerate(iterable, start=<span class="number">1</span>):</div><div class="line">   <span class="keyword">print</span> index</div></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>インデックスはここでは<code>タプル　(idx、item)</code>だよ。ちょっとややこしいかもだけど。</p><p><div style="text-align: right"> By  <a href="/users/570826/clayton">Clayton</a> | 回答日時： May 27 ‘14 at 10:04 </div><br></p><hr><hr><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(ints)):</div><div class="line">   <span class="keyword">print</span> i, ints[i]</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/42136/david-hanak">David Hanak</a> | 回答日時： Feb 6 ‘09 at 22:49 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/522563/accessing-the-index-in-python-for-loops" target="_blank" rel="external">Accessing the index in Python ‘for’ loops</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;例えばこんなリストがあったとき、このリストのインデックスにアクセスするにはどうしたらいいの？&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ints = [&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;78&lt;/span&gt;]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/51816/joan-venge&quot;&gt;Joan Venge&lt;/a&gt; | 質問日時： Feb 6 ‘09 at 22:47 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://localhost:4000/tags/python/"/>
    
      <category term="loops" scheme="http://localhost:4000/tags/loops/"/>
    
      <category term="list" scheme="http://localhost:4000/tags/list/"/>
    
  </entry>
  
  <entry>
    <title>append vs. extend [Python]</title>
    <link href="http://localhost:4000/2017/09/25/append-vs-extend/"/>
    <id>http://localhost:4000/2017/09/25/append-vs-extend/</id>
    <published>2017-09-25T14:23:42.000Z</published>
    <updated>2017-09-25T15:02:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>リストメソッドの <code>append()</code>と <code>extend()</code>の違いって何？</p><p><div style="text-align: right"> By  <a href="/users/15055/claudiu">Claudiu</a> | 質問日時： Oct 31 ‘08 at 5:55 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p><a href="https://docs.python.org/2/library/array.html?#array.array.append" target="_blank" rel="external"><code>append</code></a>：最後にオブジェクトを追加する</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">x.append([<span class="number">4</span>, <span class="number">5</span>])</div><div class="line"><span class="keyword">print</span> (x)</div></pre></td></tr></table></figure><p>は以下を出力</p><p><code>[1、2、3、[4、5]]</code></p><hr><p><a href="https://docs.python.org/2/library/array.html?#array.array.extend" target="_blank" rel="external"><code>extend</code></a>：<br>iterableから要素を追加してリストを拡張</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">x.extend([<span class="number">4</span>, <span class="number">5</span>])</div><div class="line"><span class="keyword">print</span> (x)</div></pre></td></tr></table></figure><p>は以下を出力</p><p><code>[1、2、3、4、5]</code></p><p><div style="text-align: right"> By  <a href="/users/4172/kender">kender</a> | 回答日時： Oct 31 ‘08 at 6:02 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p><code>append</code>は要素をリストに追加する、<code>extend</code>は最初のリストを別のリスト(かリストじゃない別の繰り返し可能なiterable)に連結させる</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>li = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li</div><div class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li.append(<span class="string">"new"</span>)               </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li</div><div class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>, <span class="string">'new'</span>]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li.insert(<span class="number">2</span>, <span class="string">"new"</span>)            </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li</div><div class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'new'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>, <span class="string">'new'</span>]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li.extend([<span class="string">"two"</span>, <span class="string">"elements"</span>]) </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li</div><div class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'new'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>, <span class="string">'new'</span>, <span class="string">'two'</span>, <span class="string">'elements'</span>]</div></pre></td></tr></table></figure><p><a href="http://www.diveintopython.net/native_data_types/lists.html#d0e5887" target="_blank" rel="external">Dive into<br>Python</a>より</p><p><div style="text-align: right"> By  <a href="/users/1057/harley-holcombe">Harley Holcombe</a> | 回答日時： Oct 31 ‘08 at 5:57 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>この文脈だと、文字列も繰り返し可能ってことを覚えておくといいかな</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">2</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a</div><div class="line">[<span class="number">1</span>, <span class="number">2</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a.extend(<span class="string">'hey'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a</div><div class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="string">'h'</span>, <span class="string">'e'</span>, <span class="string">'y'</span>]</div></pre></td></tr></table></figure><p><div style="text-align: right"> By          tatsujin | 回答日時： Nov 4 ‘08 at 15:19 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/252703/append-vs-extend" target="_blank" rel="external">append vs. extend</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;リストメソッドの &lt;code&gt;append()&lt;/code&gt;と &lt;code&gt;extend()&lt;/code&gt;の違いって何？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/15055/claudiu&quot;&gt;Claudiu&lt;/a&gt; | 質問日時： Oct 31 ‘08 at 5:55 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://localhost:4000/tags/python/"/>
    
      <category term="list" scheme="http://localhost:4000/tags/list/"/>
    
      <category term="data-structures" scheme="http://localhost:4000/tags/data-structures/"/>
    
      <category term="append" scheme="http://localhost:4000/tags/append/"/>
    
      <category term="extend" scheme="http://localhost:4000/tags/extend/"/>
    
  </entry>
  
  <entry>
    <title>リストが空であるかどうかをチェックする最良の方法って？ [Python]</title>
    <link href="http://localhost:4000/2017/09/25/best-way-to-check-if-a-list-is-empty/"/>
    <id>http://localhost:4000/2017/09/25/best-way-to-check-if-a-list-is-empty/</id>
    <published>2017-09-25T14:23:37.000Z</published>
    <updated>2017-09-26T03:16:50.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>例えばこんなのがあった時、<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a = []</div></pre></td></tr></table></figure></p><p>どうやってこの変数がカラだってチェックすればいいの？</p><p><div style="text-align: right"> By  <a href="/users/4872/ray-vega">Ray Vega</a> | 質問日時： Sep 10 ‘08 at 6:20 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="keyword">not</span> a:</div><div class="line">  print(<span class="string">"リストは空"</span>)</div></pre></td></tr></table></figure><p>空リストの暗黙的なブーリアン性を使うのってとってもPythonic。</p><p><div style="text-align: right"> By  <a href="/users/429/patrick">Patrick</a> | 回答日時： Sep 10 ‘08 at 6:28 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>それをするためのPythonicな方法は、<a href="https://www.python.org/dev/peps/pep-0008" target="_blank" rel="external">PEP 8スタイルガイド</a>にあるよ：</p><blockquote><p>シーケンス(文字列、リスト、タプル)の場合、空のシーケンスはfalseだってことを使う：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;b&gt;Yes:&lt;/b&gt; if not seq:</div><div class="line">     <span class="keyword">if</span> seq:</div><div class="line"></div><div class="line">&lt;b&gt;No:&lt;/b&gt;  if len(seq):</div><div class="line">     <span class="keyword">if</span> <span class="keyword">not</span> len(seq):</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/1057/harley-holcombe">Harley Holcombe</a> | 回答日時： Sep 10 ‘08 at 10:33 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>明示的なやり方が好きかな：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> len(li) == <span class="number">0</span>:</div><div class="line">    print(<span class="string">'the list is empty'</span>)</div></pre></td></tr></table></figure><p>この方法だと、<code>li</code>がシーケンス(リスト)で、サイズを調べたいことが100％明確だし。。ここでの問題は <code>if not li:...</code>は、<code>li</code>はブール変数かも、っていう間違った印象を与えかねないこと。</p><p><div style="text-align: right"> By  <a href="/users/232485/jabba">Jabba</a> | 回答日時： Sep 5 ‘11 at 0:30 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/53513/best-way-to-check-if-a-list-is-empty" target="_blank" rel="external">Best way to check if a list is empty</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;例えばこんなのがあった時、&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;a = []&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;どうやってこの変数がカラだってチェックすればいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/4872/ray-vega&quot;&gt;Ray Vega&lt;/a&gt; | 質問日時： Sep 10 ‘08 at 6:20 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://localhost:4000/tags/python/"/>
    
      <category term="list" scheme="http://localhost:4000/tags/list/"/>
    
  </entry>
  
  <entry>
    <title>Pythonで外部コマンドを呼び出す [Python]</title>
    <link href="http://localhost:4000/2017/09/25/calling-an-external-command-in-python/"/>
    <id>http://localhost:4000/2017/09/25/calling-an-external-command-in-python/</id>
    <published>2017-09-25T14:23:15.000Z</published>
    <updated>2017-09-25T15:41:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>Pythonスクリプトから外部コマンド(UNIXシェルとかWindowsのコマンドプロンプトで入力したみたいに)ってどうやって呼び出せるの？</p><p><div style="text-align: right"> By  <a href="/users/17085/freshwower">freshWoWer</a> | 質問日時： Sep 18 ‘08 at 1:35 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>標準ライブラリの<a href="https://docs.python.org/2/library/subprocess.html" target="_blank" rel="external">subprocess モジュール</a>を参照：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> call</div><div class="line">call([<span class="string">"ls"</span>, <span class="string">"-l"</span>])</div></pre></td></tr></table></figure><p><strong>subprocess</strong>は<strong>system</strong>と比較して、より柔軟性があることが利点。<br>（stdout、stderr、 “実際の”ステータスコード、より良いエラー処理、等…)。</p><p><a href="https://docs.python.org/library/os.html#os.system" target="_blank" rel="external">公式ドキュメント</a>も<br><strong>subprocess</strong>モジュールを代替のos.system()として推奨してる。</p><blockquote><p><strong>subprocess</strong>モジュールは、新しいプロセスを産み出して、その結果を処理するため強力な機能を提供する。このモジュールを使用することは、この関数<a href="https://docs.python.org/library/os.html#os.system" target="_blank" rel="external"><code>os.system()</code></a>]を使うのより望ましい。</p></blockquote><p><strong>subprocess</strong>ドキュメントの「<a href="https://docs.python.org/2/library/subprocess.html#replacing-older-functions-with-the-subprocess-module" target="_blank" rel="external">古い関数をsubprocessモジュールで置き換える</a>の部分はいろいろ役に立つレシピがあるかも。</p><p><strong>subprocess</strong>モジュールの公式文書は：</p><ul><li><a href="https://docs.python.org/2/library/subprocess.html#module-subprocess" target="_blank" rel="external">Python 2  - subprocess</a></li><li><a href="https://docs.python.org/3/library/subprocess.html#module-subprocess" target="_blank" rel="external">Python 3  - subprocess</a></li></ul><p><div style="text-align: right"> By  <a href="/users/11465/david-cournapeau">David Cournapeau</a> | 回答日時： Sep 18 ‘08 at 1:39 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>僕なら普通こう書く、</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> subprocess</div><div class="line"></div><div class="line">p = subprocess.Popen(<span class="string">'ls'</span>, shell=<span class="keyword">True</span>, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)</div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> p.stdout.readlines():</div><div class="line">    <span class="keyword">print</span> line,</div><div class="line">retval = p.wait()</div></pre></td></tr></table></figure><p>パイプ内の <code>stdout</code>データは自由に使える。実際には、<br>それらのパラメータ(<code>stdout =</code>、 <code>stderr =</code>)は省略できるけど。その場合は<code>os.system()</code>のように振る舞う。</p><p><div style="text-align: right"> By  <a href="/users/9188/emmeff">EmmEff</a> | 回答日時： Sep 18 ‘08 at 18:20 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/89228/calling-an-external-command-in-python" target="_blank" rel="external">Calling an external command in Python</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;Pythonスクリプトから外部コマンド(UNIXシェルとかWindowsのコマンドプロンプトで入力したみたいに)ってどうやって呼び出せるの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/17085/freshwower&quot;&gt;freshWoWer&lt;/a&gt; | 質問日時： Sep 18 ‘08 at 1:35 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://localhost:4000/tags/python/"/>
    
      <category term="shell" scheme="http://localhost:4000/tags/shell/"/>
    
      <category term="command" scheme="http://localhost:4000/tags/command/"/>
    
      <category term="subprocess" scheme="http://localhost:4000/tags/subprocess/"/>
    
      <category term="external" scheme="http://localhost:4000/tags/external/"/>
    
  </entry>
  
  <entry>
    <title>jQueryで要素が非表示になっているかどうかを確認するのってどうすればいい？？</title>
    <link href="http://localhost:4000/2017/09/25/how-do-i-check-if-an-element-is-hidden-in-jquery/"/>
    <id>http://localhost:4000/2017/09/25/how-do-i-check-if-an-element-is-hidden-in-jquery/</id>
    <published>2017-09-25T05:10:14.000Z</published>
    <updated>2017-09-25T05:30:11.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><code>.hide()</code>、 <code>.show()</code>、 <code>.toggle()</code>関数を使えば要素の可視性を切り替えることができるけど、要素が表示されているか隠れているかはどうやってテストすればいいの？</p><p><div style="text-align: right"> By  <a href="/users/21709/philip-morton">Philip Morton</a> | 質問日時： Oct 7 ‘08 at 13:03 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>１つの要素についての質問だから、このコードがいいかな</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(element).is(<span class="string">":visible"</span>);</div></pre></td></tr></table></figure><p>[下の人の提案]と同じだけど、１つの要素についてのもの;そしてこれは<a href="https://stackoverflow.com/a/4685330/49942" target="_blank" rel="external">jQueryのFAQで推奨されてるアルゴリズムとおんなじ</a></p><p><div style="text-align: right"> By  <a href="/users/25449/tsvetomir-tsonev">Tsvetomir Tsonev</a> | 回答日時： Oct 7 ‘08 at 13:30 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p><a href="http://docs.jquery.com/Selectors/hidden" target="_blank" rel="external"><code>hidden</code></a>セレクタが使えるよ：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//非表示になってるのすべての要素とマッチする</span></div><div class="line">$(<span class="string">'element:hidden'</span>)</div></pre></td></tr></table></figure><p>それか、<a href="http://docs.jquery.com/Selectors/visible" target="_blank" rel="external"><code>visible</code></a>セレクタ：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Matches all elements that are visible</span></div><div class="line"><span class="comment">//表示されているすべての要素とマッチ。</span></div><div class="line">$(<span class="string">'element:visible'</span>)</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/18846/twernt">twernt</a> | 回答日時： Oct 7 ‘08 at 13:16 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ( $(element).css(<span class="string">'display'</span>) == <span class="string">'none'</span> )&#123;</div><div class="line">    <span class="comment">// element is hidden</span></div><div class="line">　　<span class="comment">// 要素は隠されてる</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>関数はvisibility属性では機能しないけど。</p><p><div style="text-align: right"> By  <a href="/users/24789/mote">Mote</a> | 回答日時： Oct 7 ‘08 at 13:09 </div><br></p><hr><hr><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><p>どの答えも、僕が質問だと思ってた（そして僕が探していたもの）のと違う答えしてる、つまり_「<code>visibility: hidden</code>を持つアイテムをどうやって扱うの？っていう質問。<br><code>:visible</code>も<code>:hidden</code>もここでは使えない、というのはどちらもドキュメントごとの表示を探してるから。僕がわかる限り、CSSの可視性を処理するセレクタってないよね。僕の解決方法を書いてみる(標準のjQueryセレクタでは、もっといい書き方があるかもだけど)。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".item"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> ($(<span class="keyword">this</span>).css(<span class="string">"visibility"</span>) == <span class="string">"hidden"</span>) &#123;</div><div class="line"><span class="comment">//非可視状態を処理する</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="comment">//可視状態を処理する</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/570371/aaronlile">aaronLile</a> | 回答日時： Mar 24 ‘11 at 18:44 </div><br></p><hr><hr><h2 id="回答5"><a href="#回答5" class="headerlink" title="回答5:"></a>回答5:</h2><p><em> <a href="http://learn.jquery.com/using-jquery-core/faq/how-do-i-determine-the-state-of-a-toggled-element/" target="_blank" rel="external">どうやってトグルする要素の状態調べるの？</a></em>より</p><hr><p>要素が折りたたまれているかどうかは、<code>:visible</code>と<code>:hidden</code>セレクタ:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> isVisible = $(<span class="string">'#myDiv'</span>).is(<span class="string">':visible'</span>);</div><div class="line"><span class="keyword">var</span> isHidden = $(<span class="string">'#myDiv'</span>).is(<span class="string">':hidden'</span>);</div></pre></td></tr></table></figure><p>可視状態に基づいて要素に何かするのであれば、セレクタ式に <code>:visible</code>や<code>:hidden</code>を含める。例えば：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myDiv:visible'</span>).animate(&#123;<span class="attr">left</span>: <span class="string">'+=200px'</span>&#125;, <span class="string">'slow'</span>);</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/574889/user574889">user574889</a> | 回答日時： Jan 13 ‘11 at 21:13 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/178325/how-do-i-check-if-an-element-is-hidden-in-jquery" target="_blank" rel="external">How do I check if an element is hidden in jQuery?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;code&gt;.hide()&lt;/code&gt;、 &lt;code&gt;.show()&lt;/code&gt;、 &lt;code&gt;.toggle()&lt;/code&gt;関数を使えば要素の可視性を切り替えることができるけど、要素が表示されているか隠れているかはどうやってテストすればいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/21709/philip-morton&quot;&gt;Philip Morton&lt;/a&gt; | 質問日時： Oct 7 ‘08 at 13:03 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://localhost:4000/tags/javascript/"/>
    
      <category term="jquery" scheme="http://localhost:4000/tags/jquery/"/>
    
      <category term="dom" scheme="http://localhost:4000/tags/dom/"/>
    
      <category term="visibility" scheme="http://localhost:4000/tags/visibility/"/>
    
  </entry>
  
  <entry>
    <title>JavaScriptである文字列に別な文字列（substring）が含まれているかどうかをチェックする方法って？</title>
    <link href="http://localhost:4000/2017/09/25/how-to-check-whether-a-string-contains-a-substring-in-javascript/"/>
    <id>http://localhost:4000/2017/09/25/how-to-check-whether-a-string-contains-a-substring-in-javascript/</id>
    <published>2017-09-24T23:46:44.000Z</published>
    <updated>2017-09-25T00:02:24.529Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><code>String.contains()</code>メソッドだと思ったんだけど、ちょっと違うみたい。これをチェックするいい方法ってあるかな？</p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>考えられる方法としてはこんな感じ：</p><ol><li><strong>indexOf</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    substring = <span class="string">"oo"</span>;</div><div class="line">string.indexOf(substring) !== <span class="number">-1</span>;</div></pre></td></tr></table></figure></li></ol><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf" target="_blank" rel="external"><code>String.prototype.indexOf</code></a>は、ある文字列の中にある他の文字列の位置を返す。見つからなければ <code>-1</code>を返す。</p><ol><li><strong>(ES6) includes</strong>  - <a href="https://stackoverflow.com/a/14193950/2689455" target="_blank" rel="external">この回答</a>、または<a href="https://stackoverflow.com/a/2385801/2689455" target="_blank" rel="external">この回答</a>を参照</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    substring = <span class="string">"oo"</span>;</div><div class="line">string.includes(substring);</div></pre></td></tr></table></figure><ol><li><strong>search</strong> - <a href="https://stackoverflow.com/a/2385801/2689455" target="_blank" rel="external">この回答参照</a></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    expr = <span class="regexp">/oo/</span>;</div><div class="line">string.search(expr);</div></pre></td></tr></table></figure><ol><li><strong>lodash includes</strong> - <a href="https://stackoverflow.com/a/20575032/2689455" target="_blank" rel="external">この回答参照</a></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    substring = <span class="string">"oo"</span>;</div><div class="line">_.includes(string, substring);</div></pre></td></tr></table></figure><ol><li><strong>RegExp</strong>  -  <a href="https://stackoverflow.com/a/1789980/2689455" target="_blank" rel="external">この回答参照</a></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    expr = <span class="regexp">/oo/</span>;  <span class="comment">// no quotes here</span></div><div class="line">expr.test(string);</div></pre></td></tr></table></figure><ol><li><strong>Match</strong>   -  <a href="https://stackoverflow.com/a/12652006/2689455" target="_blank" rel="external">この回答参照</a></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    expr = <span class="regexp">/oo/</span>;</div><div class="line">string.match(expr);</div></pre></td></tr></table></figure><hr><p>パフォーマンステスト(<a href="http://jsben.ch/#/RVYk7" target="_blank" rel="external">http://jsben.ch/#/RVYk7</a>)の結果によればでは、indexOfが最速みたいなので、スピードが重要なポイントになる場合は、最良の選択かも。</p><p><div style="text-align: right"> By  <a href="/users/92315/fabien-m%c3%a9nager">Fabien Ménager</a> | 回答日時： Nov 24 ‘09 at 13:05 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>こうやればStringに <code>contains</code>メソッドを簡単に追加できるよ：</p><p>function(it){このthis.indexOfを返します！ }; }<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.contains = <span class="function"><span class="keyword">function</span>(<span class="params">it</span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">this</span>.indexOf(it) != <span class="number">-1</span>; &#125;;</div></pre></td></tr></table></figure></p><p>_Note：これを使うのはいろいろ議論の別れるところだけど、自分自身の判断で使用して。</p><p>これ以外だと：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">String</span>.prototype.contains === <span class="string">'undefined'</span>) &#123; <span class="built_in">String</span>.prototype.contains = <span class="function"><span class="keyword">function</span>(<span class="params">it</span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">this</span>.indexOf(it) != <span class="number">-1</span>; &#125;; &#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/7012/avi-flax">Avi Flax</a> | 回答日時： Dec 30 ‘09 at 4:23 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>JavaScriptが大文字と小文字を区別するのに気をつけて。きみのコードだと、</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">indexof()</div></pre></td></tr></table></figure><p>でも実際には</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">indexOf()</div></pre></td></tr></table></figure><p>これを修正し、うまくいくか確認してみて：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (test.indexOf(<span class="string">"title"</span>) !=<span class="number">-1</span>) &#123;</div><div class="line">    alert(elm);</div><div class="line">    foundLinks++;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/14514/victor">Victor</a> | 回答日時： Nov 24 ‘09 at 14:17 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/1789945/how-to-check-whether-a-string-contains-a-substring-in-javascript" target="_blank" rel="external">How to check whether a string contains a substring in JavaScript?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;code&gt;String.contains()&lt;/code&gt;メソッドだと思ったんだけど、ちょっと違うみたい。これをチェックするいい方法ってあるかな？&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://localhost:4000/tags/javascript/"/>
    
      <category term="string" scheme="http://localhost:4000/tags/string/"/>
    
      <category term="substring" scheme="http://localhost:4000/tags/substring/"/>
    
      <category term="contains" scheme="http://localhost:4000/tags/contains/"/>
    
      <category term="string-matching" scheme="http://localhost:4000/tags/string-matching/"/>
    
  </entry>
  
  <entry>
    <title>ローカルとリモートの両方でGitブランチを削除するには？</title>
    <link href="http://localhost:4000/2017/09/25/how-do-i-delete-a-git-branch-both-locally-and-remotely/"/>
    <id>http://localhost:4000/2017/09/25/how-do-i-delete-a-git-branch-both-locally-and-remotely/</id>
    <published>2017-09-24T23:05:54.000Z</published>
    <updated>2017-09-24T23:33:09.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>ローカルと、Github上のフォークした自分のリモートプロジェクトのブランチを削除したいんだけど。</p><p>リモートのブランチを削除するためにこれまで試みた方法（失敗した）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ git branch -d remotes/origin/bugfix</div><div class="line">error: branch <span class="string">'remotes/origin/bugfix'</span> not found.</div><div class="line"></div><div class="line">$ git branch -d origin/bugfix</div><div class="line">error: branch <span class="string">'origin/bugfix'</span> not found.</div><div class="line"></div><div class="line">$ git branch -rd origin/bugfix</div><div class="line">Deleted remote branch origin/bugfix (was 2a14ef7).</div><div class="line"></div><div class="line">$ git push</div><div class="line">Everything up-to-date</div><div class="line"></div><div class="line">$ git pull</div><div class="line">From github.com:gituser/gitproject</div><div class="line">* [new branch] bugfix -&amp;gt; origin/bugfix</div><div class="line">Already up-to-date.</div></pre></td></tr></table></figure><p><code>remotes/origin/bugfix</code>ブランチをローカルとリモート両方で削除するにはほか何をしたらいいの？</p><p><div style="text-align: right"> By  <a href="/users/95592/matthew-rankin">Matthew Rankin</a> | 質問日時： Jan 5 ‘10 at 1:12 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><h2 id="要旨"><a href="#要旨" class="headerlink" title="要旨"></a>要旨</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git push -d origin &lt;ブランチ名&gt;</div><div class="line">$ gitブランチ-d &lt;ブランチ名&gt;</div></pre></td></tr></table></figure><h2 id="ローカルブランチを削除"><a href="#ローカルブランチを削除" class="headerlink" title="ローカルブランチを削除"></a>ローカルブランチを削除</h2><p><em>local</em>ブランチを削除するには、次のいずれかを使う。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git branch -d ブランチ名</div><div class="line">$ git branch -D ブランチ名</div></pre></td></tr></table></figure><p><strong>注意：</strong> <code>-d</code>オプションは、<code>--delete</code>のエイリアス。このオプションは、ブランチが既に上流ブランチに完全にマージされている場合にのみ削除するよ。あと<code>--D</code>を使うこともでるけど、これは<code>--delete --force</code>のエイリアスで、「merged statusに関係なく」ブランチを削除するよ。 [出典： <code>man git-branch</code>]</p><h2 id="リモートブランチを削除する-2017年9月8日更新"><a href="#リモートブランチを削除する-2017年9月8日更新" class="headerlink" title="リモートブランチを削除する[2017年9月8日更新]"></a>リモートブランチを削除する[2017年9月8日更新]</h2><p><a href="https://github.com/gitster/git/blob/master/Documentation/RelNotes/1.7.0.txt" target="_blank" rel="external">Git v1.7.0</a>では、<strong> <em> remote </em> </strong>ブランチを削除するには</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin --delete &lt;ブランチ名&gt;</div></pre></td></tr></table></figure><p>こっちの方が覚えやすいかも</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin :&lt;ブランチ名&gt;</div></pre></td></tr></table></figure><p>これは<a href="https://github.com/gitster/git/blob/master/Documentation/RelNotes/1.5.0.txt" target="_blank" rel="external">Git v1.5.0</a>以降で、「リモートブランチやタグを削除するために」追加されたやつ。</p><p><a href="https://github.com/git/git/blob/master/Documentation/RelNotes/2.8.0.txt" target="_blank" rel="external">Git v2.8.0</a>以降では、<code>git push</code>の際、<code>--delete</code>のエイリアスとして<code>--d</code>オプションつけて使うこともできるよ。</p><p>だから、インストールしたGitのバージョンによって、より簡単なシンタックスか難しいシンタックスになるかは変わってくる。</p><p><div style="text-align: right"> By  <a href="/users/95592/matthew-rankin">Matthew Rankin</a> | 回答日時： Jan 5 ‘10 at 1:13 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>上のの答えは<em>remote</em>ブランチを削除するのにベストだと思うし、この説明してくれてありがとうって思うけど、この2つのコマンドを簡単な区別するをするために書くと、</p><p><strong> <em>ローカルブランチ</em> </strong>を削除するには：</p><p><code>git branch -d {th​​e_local_branch}</code>(マージされた状態をチェックせずに強制的に削除する場合は<code>-D</code>を使用）</p><p><strong> <em>リモートブランチ</em> </strong>をサーバーから削除するには：</p><p><code>git push origin --delete {the_remote_branch}</code></p><p>参考：<a href="https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote" target="_blank" rel="external">https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote</a></p><p><div style="text-align: right"> By  <a href="/users/385559/eric-brotto">Eric Brotto</a> | 回答日時： Jun 12 ‘12 at 14:51 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>リモートブランチを削除するには、次のコマンドを使用してもいいかも。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push --delete origin serverfix</div></pre></td></tr></table></figure><p>以下でも同じ</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin：serverfix</div></pre></td></tr></table></figure><p>こっちのほうが覚えやすいかな？</p><p><div style="text-align: right"> By  <a href="/users/447884/pagetribe">pagetribe</a> | 回答日時： Oct 27 ‘11 at 22:22 </div><br></p><hr><hr><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><p>ブランチを削除する場合は、最初に削除するブランチ以外のブランチをチェックアウトする</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout &lt;削除する以外のブランチ&gt;</div></pre></td></tr></table></figure><p>ローカルブランチの削除：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch -D &lt;削除するブランチ&gt;</div></pre></td></tr></table></figure><p>リモートブランチの削除：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin --delete &lt;削除するブランチ&gt;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/1351195/praveen-hiremath">Praveen Hiremath</a> | 回答日時： Oct 7 ‘14 at 13:52 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-both-locally-and-remotely" target="_blank" rel="external">How do I delete a Git branch both locally and remotely?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;ローカルと、Github上のフォークした自分のリモートプロジェクトのブランチを削除したいんだけど。&lt;/p&gt;
&lt;p&gt;リモートのブランチを削除するためにこれまで試みた方法（失敗した）：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git branch -d remotes/origin/bugfix&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error: branch &lt;span class=&quot;string&quot;&gt;&#39;remotes/origin/bugfix&#39;&lt;/span&gt; not found.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git branch -d origin/bugfix&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error: branch &lt;span class=&quot;string&quot;&gt;&#39;origin/bugfix&#39;&lt;/span&gt; not found.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git branch -rd origin/bugfix&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Deleted remote branch origin/bugfix (was 2a14ef7).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git push&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Everything up-to-date&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git pull&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;From github.com:gituser/gitproject&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* [new branch] bugfix -&amp;amp;gt; origin/bugfix&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Already up-to-date.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;remotes/origin/bugfix&lt;/code&gt;ブランチをローカルとリモート両方で削除するにはほか何をしたらいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/95592/matthew-rankin&quot;&gt;Matthew Rankin&lt;/a&gt; | 質問日時： Jan 5 ‘10 at 1:12 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://localhost:4000/tags/git/"/>
    
      <category term="git-branch" scheme="http://localhost:4000/tags/git-branch/"/>
    
      <category term="git-remote" scheme="http://localhost:4000/tags/git-remote/"/>
    
  </entry>
  
  <entry>
    <title>Gitの最後のコミットを元に戻す方法ってどうやるの？</title>
    <link href="http://localhost:4000/2017/09/24/how-to-undo-the-last-commits-in-git/"/>
    <id>http://localhost:4000/2017/09/24/how-to-undo-the-last-commits-in-git/</id>
    <published>2017-09-24T22:42:48.000Z</published>
    <updated>2017-09-24T23:12:07.371Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>間違ったファイルを<a href="https://git-scm.com" target="_blank" rel="external">Git</a>にコミットしたんだけど、まだサーバーへはプッシュしていないんだ。</p><p>このコミットを元に戻すにはどうすればいいですか？</p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><h3 id="コミットとやり直しを元に戻す"><a href="#コミットとやり直しを元に戻す" class="headerlink" title="コミットとやり直しを元に戻す"></a>コミットとやり直しを元に戻す</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git commit -m <span class="string">"クソ間違えた内容"</span>  　　　　　　　             (1)</div><div class="line">$ git reset HEAD~                                           (2)</div><div class="line">&lt;&lt;必要に応じてファイルを編集する&gt;&gt;                             (3)</div><div class="line">$ git add ...                                               (4)</div><div class="line">$ git commit -c ORIG_HEAD                                   (5)</div></pre></td></tr></table></figure><ol><li>これを元に戻したい</li><li>これによって、作業ツリー(ディスク上のファイルの状態)は変更されませんが、コミットが取り消され、コミットされていない変更が残される(<code>git status</code>では” Changes not staged for commit”になってるのでコミットする前に再度追加する必要あり)。以前のコミットにもっと多くの変更を<em>add</em>したい場合や、コミットメッセージ（注）を変更したい場合は <code>git reset HEAD〜</code>のように <code>git reset --soft HEAD〜</code>を使うことができる。</li><li>作業ツリーファイルを修正。</li><li>新しいコミットに含めるものを <code>git add</code>する。</li><li>変更をコミットし、古いコミット・メッセージを再使用する。 <code>reset</code> は古いヘッドを <code>.git/ORIG_HEAD</code> にコピーする。 <code>-c ORIG_HEAD</code> で <code>commit&#39; を実行するとエディタが開く。エディタは最初は古いコミットのログメッセージを含み、編集することができる。メッセージを編集する必要がない場合は、</code>-C` オプションが使えるよ。</li></ol><hr><p><strong>注：</strong> <em>commitメッセージ</em>で間違えただけなら、以前のコミットにリセットする必要はないことに注意。この場合、 (それまでの変更を戻すために)<code>git reset</code>すればいい。そして<a href="https://stackoverflow.com/q/179123/1146608" target="_blank" rel="external"><code>git commit--amend</code></a>すると、<br>最後のコミットメッセージを含んだデフォルトのエディタが開くはず。</p><p>ただし、新しい変更をインデックスに追加した場合は、<code>commit --amend</code>は前のコミットにそれらを追加するよ。</p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>適宜ファイルを追加/削除する：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git rm classdir</div><div class="line">git add sourcedir</div></pre></td></tr></table></figure><p>それからコミットを修正：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit --amend</div></pre></td></tr></table></figure><p>以前の誤ったコミットは、新しいインデックス状態を反映するために編集されるよ。<br>言い換えれば、それは最初から間違いを犯さなかったようなかんじに。</p><p>まだプッシュしていない場合にのみこれを行うべきであることに注意。プッシュしちゃったなら、普通に修正をコミットする必要がある。</p><p><div style="text-align: right"> By  <a href="/users/36723/bdonlan">bdonlan</a> | 回答日時： May 29 ‘09 at 18:16 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/927358/how-to-undo-the-last-commits-in-git" target="_blank" rel="external">How to undo the last commits in Git?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;間違ったファイルを&lt;a href=&quot;https://git-scm.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;にコミットしたんだけど、まだサーバーへはプッシュしていないんだ。&lt;/p&gt;
&lt;p&gt;このコミットを元に戻すにはどうすればいいですか？&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://localhost:4000/tags/git/"/>
    
      <category term="git-reset" scheme="http://localhost:4000/tags/git-reset/"/>
    
      <category term="git-revert" scheme="http://localhost:4000/tags/git-revert/"/>
    
      <category term="git-rebase" scheme="http://localhost:4000/tags/git-rebase/"/>
    
      <category term="git-commit" scheme="http://localhost:4000/tags/git-commit/"/>
    
  </entry>
  
  <entry>
    <title>他のウェブページにリダイレクトする方法ってどうやるの？</title>
    <link href="http://localhost:4000/2017/09/24/how-to-redirect-to-another-webpage/"/>
    <id>http://localhost:4000/2017/09/24/how-to-redirect-to-another-webpage/</id>
    <published>2017-09-24T22:18:43.000Z</published>
    <updated>2017-09-24T22:37:46.547Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>jQueryか純粋なJavaScriptを使って、あるページから別のページにユーザーをリダイレクトする方法ってどうやるの？</p><p><div style="text-align: right"> By  <a href="/users/44984/venkatachalam">venkatachalam</a> | 質問日時： Feb 2 ‘09 at 12:54 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><h2 id="汝、リダイレクトするためだけにjQueryを使うべからず"><a href="#汝、リダイレクトするためだけにjQueryを使うべからず" class="headerlink" title="汝、リダイレクトするためだけにjQueryを使うべからず"></a>汝、リダイレクトするためだけにjQueryを使うべからず</h2><p>jQueryは必要ないよ。<a href="https://developer.mozilla.org/en-US/docs/Web/API/Location/replace" target="_blank" rel="external"><strong> <code>window.location.replace(...)</code> </strong></a>は、HTTPリダイレクトをよくシミュレートできるから。</p><p><code>window.location.replace(...)</code>は <code>window.location.href</code>を使うよりも優れてる、というのは<code>replace()</code>は元のページをセッション履歴に残さないから、ユーザーが終わりのないバック・ボタンの失敗に悩まされることはないよ。</p><blockquote><p>もしリンクをクリックするのをシミュレートしたい場合は、<strong> <code>location.href</code> </strong>を使う<br>HTTPリダイレクトをシミュレートする場合は、<strong> <code>location.replace</code></strong>を使う</p></blockquote><p><strong>例えば：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// HTTPリダイレクトと同様の動作</span></div><div class="line"><span class="built_in">window</span>.location.replace(<span class="string">"http://stackoverflow.com"</span>);</div><div class="line"></div><div class="line"><span class="comment">//リンクをクリックすると同様の動作</span></div><div class="line"><span class="built_in">window</span>.location.href = <span class="string">"http://stackoverflow.com"</span>;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/8985/ryan-mcgeary">Ryan McGeary</a> | 回答日時： Feb 3 ‘09 at 4:24 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><blockquote><p><strong>警告：</strong>この回答は単に解決策の１つとして提供されているに過だけ。これはjQueryが必要なので、明らかに最善の解決策っていうわけじゃない。代わりに、純粋なJavaScriptでやったほうがいいと思う。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(location).attr(<span class="string">'href'</span>, <span class="string">'http://stackoverflow.com'</span>)</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/61337/boris-gu%c3%a9ry">Boris Guéry</a> | 回答日時： Oct 28 ‘09 at 16:35 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><blockquote><p><strong>ページをリダイレクトするための標準的な “素の” JavaScriptでの方法：</strong></p><p><strong> `window.location.href = ‘newPage.html’; </strong></p></blockquote><hr><p><strong>リダイレクト時にHTTP<em>REFERERを</em>失っている_場合は、以下を参考に</strong></p><hr><p>このセクションは <code>HTTP_REFERER</code>を安全なものの1つとして使用する人のためのもの(あんまりいい保護手段じゃないけど)。<a href="http://en.wikipedia.org/wiki/Internet_Explorer_8" target="_blank" rel="external">Internet Explorer 8</a>またはそれ以前のを使用している場合、JavaScriptのページリダイレクションがどうあっても、これらの変数が失われる(location.hrefなど)。</p><blockquote><p>以下では、HTTP_REFERERを失わないようにIE8より以前での実装をやってみる。それ以外の場合は、ほとんどの場合<code>window.location.href</code>でいけるはず。</p></blockquote><p><code>HTTP_REFERER</code>(URLの貼り付け、セッションなど)に対するテストはリクエストがちゃんとしてるか判断するのに手助けに成るはず。<em>(<strong>注：</strong>これらのリファラを回避する/偽装する方法ももちろん存在する)</em></p><hr><p>簡単なクロスブラウザテストソリューション(Internet Explorer 9以降および他のすべてのブラウザでは<code>window.location.href</code>を)</p><p><strong>使用法： <code>redirect(&#39;anotherpage.aspx&#39;);</code> </strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">redirect</span> (<span class="params">url</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> ua        = navigator.userAgent.toLowerCase(),</div><div class="line">        isIE      = ua.indexOf(<span class="string">'msie'</span>) !== <span class="number">-1</span>,</div><div class="line">        version   = <span class="built_in">parseInt</span>(ua.substr(<span class="number">4</span>, <span class="number">2</span>), <span class="number">10</span>);</div><div class="line"></div><div class="line">    <span class="comment">// Internet Explorer 8以下</span></div><div class="line">    <span class="keyword">if</span> (isIE &amp;amp;&amp;amp; version &amp;lt; <span class="number">9</span>) &#123;</div><div class="line">        <span class="keyword">var</span> link = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</div><div class="line">        link.href = url;</div><div class="line">        <span class="built_in">document</span>.body.appendChild(link);</div><div class="line">        link.click();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//他のすべてのブラウザは標準のwindow.location.hrefを使用可(Internet Explorer 8以下のようにHTTP_REFERERを失うことはない)</span></div><div class="line">    <span class="keyword">else</span> &#123; </div><div class="line">        <span class="built_in">window</span>.location.href = url; </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/1492009/mark-pieszak">Mark Pieszak</a> | 回答日時： Jul 27 ‘12 at 14:41 </div><br></p><hr><hr><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><p>これ使いな：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// window.location</span></div><div class="line"><span class="built_in">window</span>.location.replace(<span class="string">'http://www.example.com'</span>)</div><div class="line"><span class="built_in">window</span>.location.assign(<span class="string">'http://www.example.com'</span>)</div><div class="line"><span class="built_in">window</span>.location.href = <span class="string">'http://www.example.com'</span></div><div class="line"><span class="built_in">document</span>.location.href = <span class="string">'/path'</span></div><div class="line"></div><div class="line"><span class="comment">// window.history</span></div><div class="line"><span class="built_in">window</span>.history.back()</div><div class="line"><span class="built_in">window</span>.history.go(<span class="number">-1</span>)</div><div class="line"></div><div class="line"><span class="comment">// window.navigate; ONLY for old versions of Internet Explorer</span></div><div class="line"><span class="built_in">window</span>.navigate(<span class="string">'top.jsp'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// たぶんあんまりよくない</span></div><div class="line">self.location = <span class="string">'http://www.example.com'</span>;</div><div class="line">top.location = <span class="string">'http://www.example.com'</span>;</div><div class="line"></div><div class="line"><span class="comment">// jQuery</span></div><div class="line">$(location).attr(<span class="string">'href'</span>,<span class="string">'http://www.example.com'</span>)</div><div class="line">$(<span class="built_in">window</span>).attr(<span class="string">'location'</span>,<span class="string">'http://www.example.com'</span>)</div><div class="line">$(location).prop(<span class="string">'href'</span>, <span class="string">'http://www.example.com'</span>)</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/3196723/govind-singh">Govind Singh</a> | 回答日時： Jan 28 ‘14 at 4:28 </div><br></p><hr><hr><h2 id="回答5"><a href="#回答5" class="headerlink" title="回答5:"></a>回答5:</h2><p>これならどのブラウザでも動作するよ：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.location.href = <span class="string">'your_url'</span>;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/484764/fred">Fred</a> | 回答日時： Oct 22 ‘10 at 23:45 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/503093/how-to-redirect-to-another-webpage" target="_blank" rel="external">How to redirect to another webpage?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;jQueryか純粋なJavaScriptを使って、あるページから別のページにユーザーをリダイレクトする方法ってどうやるの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/44984/venkatachalam&quot;&gt;venkatachalam&lt;/a&gt; | 質問日時： Feb 2 ‘09 at 12:54 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://localhost:4000/tags/javascript/"/>
    
      <category term="jquery" scheme="http://localhost:4000/tags/jquery/"/>
    
      <category term="redirect" scheme="http://localhost:4000/tags/redirect/"/>
    
  </entry>
  
</feed>
