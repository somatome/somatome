<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stack Overflow まとめ</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://so-matome.net/"/>
  <updated>2017-11-03T22:00:01.843Z</updated>
  <id>https://so-matome.net/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>プログラマーが見るべき20のTEDトーク(12)　ベスト・コンピュータ・インタフェースはたぶん...あなたの手 [Video]</title>
    <link href="https://so-matome.net/2017/11/03/ted-talks-programming-everyone-must-watch-12/"/>
    <id>https://so-matome.net/2017/11/03/ted-talks-programming-everyone-must-watch-12/</id>
    <published>2017-11-03T22:00:01.000Z</published>
    <updated>2017-11-03T22:00:01.843Z</updated>
    
    <content type="html"><![CDATA[<h2 id="James-Patten：ベスト・コンピュータ・インタフェースはたぶん…あなたの手"><a href="#James-Patten：ベスト・コンピュータ・インタフェースはたぶん…あなたの手" class="headerlink" title="James Patten：ベスト・コンピュータ・インタフェースはたぶん…あなたの手"></a>James Patten：ベスト・コンピュータ・インタフェースはたぶん…あなたの手</h2><p><a href="http://www.makeuseof.com/tag/ted-talks-programming/" target="_blank" rel="external">MakeUseOf</a>より、プログラマーが見ておくべきTEDトークが話題になっていたのでご紹介します。内容は、プログラミング方法を学ぶためではなく、プログラマーになる方法を学ぶことにフォーカスが置かれ、考え方を知ることを重視した内容になっています。<br>第12段は「James Patten：ベスト・コンピュータ・インタフェースはたぶん…あなたの手」。以下のように紹介されています：</p><blockquote><p>このTEDトークはちょうど6分で短いものですが、あなたにいろいろ考えさせる内容を含んでいます。 コンピュータの歴史の中で、我々は主にキーボードやマウスでコンピュータとやり取りを行ってきました。 最近では、タッチスクリーンと音声コントロールがあります。でも、将来は？Pattenは、制御はハンドヘルドになると示唆しています。</p></blockquote><iframe width="560" height="315" src="https://www.youtube.com/embed/5WI6ZqCUNk0?cc_load_policy=1&cc_lang_pref=ja" frameborder="0" allowfullscreen></iframe><p>動画は日本語字幕を表示してありますが、TEDトークの日本語訳には意訳している部分もあるため、英語字幕（以下）をフォローするのをお薦めします：</p><a id="more"></a><div id="" style="overflow-y: scroll; height:400px;"><br>A computer is an incredibly powerful means of creative expression, but for the most part, that expression is confined to the screens of our laptops and mobile phones.<br><br>And I&#39;d like to tell you a story about bringing this power of the computer to move things around and interact with us off of the screen and into the physical world in which we live.<br><br>A few years ago, I got a call from a luxury fashion store called Barneys New York, and the next thing I knew, I was designing storefront kinetic sculptures for their window displays.<br><br>This one&#39;s called &quot;The Chase.&quot;<br><br>There are two pairs of shoes, a man&#39;s pair and a woman&#39;s pair, and they play out this slow, tense chase around the window in which the man scoots up behind the woman and gets in her personal space, and then she moves away.<br><br>Each of the shoes has magnets in it, and there are magnets underneath the table that move the shoes around.<br><br>My friend Andy Cavatorta was building a robotic harp for Bjork&#39;s Biophilia tour and I wound up building the electronics and motion control software to make the harps move and play music.<br><br>The harp has four separate pendulums, and each pendulum has 11 strings, so the harp swings on its axis and also rotates in order to play different musical notes, and the harps are all networked together so that they can play the right notes at the right time in the music.<br><br>I built an interactive chemistry exhibit at the Museum of Science and Industry in Chicago, and this exhibit lets people use physical objects to grab chemical elements off of the periodic table and bring them together to cause chemical reactions to happen.<br><br>And the museum noticed that people were spending a lot of time with this exhibit, and a researcher from a science education center in Australia decided to study this exhibit and try to figure out what was going on.<br><br>And she found that the physical objects that people were using were helping people understand how to use the exhibit, and were helping people learn in a social way.<br><br>And when you think about it, this makes a lot of sense, that using specialized physical objects would help people use an interface more easily.<br><br>I mean, our hands and our minds are optimized to think about and interact with tangible objects.<br><br>Think about which you find easier to use, a physical keyboard or an onscreen keyboard like on a phone?<br><br>But the thing that struck me about all of these different projects is that they really had to be built from scratch, down to the level of the electronics and the printed circuit boards and all the mechanisms all the way up to the software.<br><br>I wanted to create something where we could move objects under computer control and create interactions around that idea without having to go through this process of building something from scratch every single time.<br><br>So my first attempt at this was at the MIT Media Lab with Professor Hiroshi Ishii, and we built this array of 512 different electromagnets, and together they were able to move objects around on top of their surface.<br><br>But the problem with this was that these magnets cost over 10,000 dollars.<br><br>Although each one was pretty small, altogether they weighed so much that the table that they were on started to sag.<br><br>So I wanted to build something where you could have this kind of interaction on any tabletop surface.<br><br>So to explore this idea, I built an army of small robots, and each of these robots has what are called omni wheels.<br><br>They&#39;re these special wheels that can move equally easily in all directions, and when you couple these robots with a video projector, you have these physical tools for interacting with digital information.<br><br>So here&#39;s an example of what I mean.<br><br>This is a video editing application where all of the controls for manipulating the video are physical.<br><br>So if we want to tweak the color, we just enter the color mode, and then we get three different dials for tweaking the color, or if we want to adjust the audio, then we get two different dials for that, these physical objects.<br><br>So here the left and right channel stay in sync, but if we want to, we can override that by grabbing both of them at the same time.<br><br>So the idea is that we get the speed and efficiency benefits of using these physical dials together with the flexibility and versatility of a system that&#39;s designed in software.<br><br>And this is a mapping application for disaster response.<br><br>So you have these physical objects that represent police, fire and rescue, and a dispatcher can grab them and place them on the map to tell those units where to go, and then the position of the units on the map gets synced up with the position of those units in the real world.<br><br>This is a video chat application.<br><br>It&#39;s amazing how much emotion you can convey with just a few simple movements of a physical object.<br><br>With this interface, we open up a huge array of possibilities in between traditional board games and arcade games, where the physical possibilities of interaction make so many different styles of play possible.<br><br>But one of the areas that I&#39;m most excited about using this platform for is applying it to problems that are difficult for computers or people to solve alone.<br><br>One example of those is protein folding.<br><br>So here we have an interface where we have physical handles onto a protein, and we can grab those handles and try to move the protein and try to fold it in different ways.<br><br>And if we move it in a way that doesn&#39;t really make sense with the underlying molecular simulation, we get this physical feedback where we can actually feel these physical handles pulling back against us.<br><br>So feeling what&#39;s going on inside a molecular simulation is a whole different level of interaction.<br><br>So we&#39;re just beginning to explore what&#39;s possible when we use software to control the movement of objects in our environment.<br><br>Maybe this is the computer of the future.<br><br>There&#39;s no touchscreen.<br><br>There&#39;s no technology visible at all.<br><br>But when we want to have a video chat or play a game or lay out the slides to our next TED Talk, the objects on the table come alive.<br><br>Thank you.<br><br>(Applause)<br></div> ]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;James-Patten：ベスト・コンピュータ・インタフェースはたぶん…あなたの手&quot;&gt;&lt;a href=&quot;#James-Patten：ベスト・コンピュータ・インタフェースはたぶん…あなたの手&quot; class=&quot;headerlink&quot; title=&quot;James Patten：ベスト・コンピュータ・インタフェースはたぶん…あなたの手&quot;&gt;&lt;/a&gt;James Patten：ベスト・コンピュータ・インタフェースはたぶん…あなたの手&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.makeuseof.com/tag/ted-talks-programming/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MakeUseOf&lt;/a&gt;より、プログラマーが見ておくべきTEDトークが話題になっていたのでご紹介します。内容は、プログラミング方法を学ぶためではなく、プログラマーになる方法を学ぶことにフォーカスが置かれ、考え方を知ることを重視した内容になっています。&lt;br&gt;第12段は「James Patten：ベスト・コンピュータ・インタフェースはたぶん…あなたの手」。以下のように紹介されています：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;このTEDトークはちょうど6分で短いものですが、あなたにいろいろ考えさせる内容を含んでいます。 コンピュータの歴史の中で、我々は主にキーボードやマウスでコンピュータとやり取りを行ってきました。 最近では、タッチスクリーンと音声コントロールがあります。でも、将来は？Pattenは、制御はハンドヘルドになると示唆しています。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/5WI6ZqCUNk0?cc_load_policy=1&amp;cc_lang_pref=ja&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;動画は日本語字幕を表示してありますが、TEDトークの日本語訳には意訳している部分もあるため、英語字幕（以下）をフォローするのをお薦めします：&lt;/p&gt;
    
    </summary>
    
    
      <category term="video" scheme="https://so-matome.net/tags/video/"/>
    
      <category term="english" scheme="https://so-matome.net/tags/english/"/>
    
      <category term="TED" scheme="https://so-matome.net/tags/TED/"/>
    
  </entry>
  
  <entry>
    <title>新しいファイルを作成せずに複数のファイルを1つのファイルオブジェクトに連結する [Python]</title>
    <link href="https://so-matome.net/2017/10/31/concatenate-multiple-files-into-a-single-file-object-without-creating-a-new-file/"/>
    <id>https://so-matome.net/2017/10/31/concatenate-multiple-files-into-a-single-file-object-without-creating-a-new-file/</id>
    <published>2017-10-31T22:00:01.875Z</published>
    <updated>2017-10-31T22:00:01.875Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>この質問は<a href="https://stackoverflow.com/questions/13613336/python-concatenate-text-file" target="_blank" rel="external">Pythonでテキスト・ファイルを連結する</a>に関連してるかも。</p><p>今、[‘file1.txt’, ‘file2.txt’,…]のような<code>file_names</code>のリストがある。</p><p>僕は全部のファイルを行ごとに読んで、単一のファイルオブジェクトにしたいんだけど、でもその過程で新しいファイルを作らずにやることって可能？？</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">with</span> open(file_names, <span class="string">'r'</span>) <span class="keyword">as</span> file_obj:</div><div class="line">   line = file_obj.readline()</div><div class="line">   <span class="keyword">while</span> line:</div><div class="line">       ...</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/3521109/bluprince13" target="_blank" rel="external">bluprince13</a> | 質問日時： 2017年9月15日 10:15 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p><a href="https://docs.python.org/3/library/fileinput.html" target="_blank" rel="external">fileinput</a>モジュールの<a href="https://docs.python.org/3/library/fileinput.html#fileinput.input" target="_blank" rel="external">input</a>を使えばいいよ。<br>これは複数のファイルから読み込むんだけど、文字列があたかも単一のファイルから来てるように見せるんだ (レイジーライン反復)。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> fileinput</div><div class="line"></div><div class="line">files= [<span class="string">'F:/files/a.txt'</span>,<span class="string">'F:/files/c.txt'</span>,<span class="string">'F:/files/c.txt'</span>]</div><div class="line"></div><div class="line">allfiles = fileinput.input(files)</div><div class="line"></div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> allfiles: <span class="comment"># これはすべてのファイルの行をループする</span></div><div class="line">    print(line)</div><div class="line"></div><div class="line"><span class="comment"># またはallfiles.readline()でもいい</span></div></pre></td></tr></table></figure><p>1つの場所にすべてのテキストが必要な場合は <code>StringIO</code>を使えばいいよ</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> io</div><div class="line"></div><div class="line">files= [<span class="string">'F:/files/a.txt'</span>,<span class="string">'F:/files/c.txt'</span>,<span class="string">'F:/files/c.txt'</span>]</div><div class="line"></div><div class="line"></div><div class="line">lines = io.StringIO()   <span class="comment">#すべての行を格納するオブジェクトのようなファイル</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> file_dir <span class="keyword">in</span> files:</div><div class="line">    <span class="keyword">with</span> open(file_dir, <span class="string">'r'</span>) <span class="keyword">as</span> file:</div><div class="line">        lines.write(file.read())</div><div class="line">        lines.write(<span class="string">'\n'</span>)</div><div class="line"></div><div class="line">lines.seek(<span class="number">0</span>)        <span class="comment"># これでオブジェクトのようなファイルのように扱えるようになった</span></div><div class="line">print(lines.read())</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/5798361/anonta" target="_blank" rel="external">Anonta</a> | 回答日時： 2017年9月15日 10:36 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>こんなのはどう？</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_files</span><span class="params">(*filenames)</span>:</span></div><div class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</div><div class="line">        <span class="keyword">with</span> open(filename,<span class="string">'r'</span>) <span class="keyword">as</span> file_obj:</div><div class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> file_obj:</div><div class="line">                <span class="keyword">yield</span> line</div></pre></td></tr></table></figure><p>こんな風に呼び出せる：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> read_files(<span class="string">"f1.txt"</span>, <span class="string">"f2.txt"</span>, <span class="string">"f3.txt"</span>):</div><div class="line">    <span class="comment">#... lineを使って何かする</span></div></pre></td></tr></table></figure><p>それか</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">filenames = [<span class="string">"f1.txt"</span>, <span class="string">"f2.txt"</span>, <span class="string">"f3.txt"</span>]</div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> read_files(*filenames):</div><div class="line">    <span class="comment">#... lineを使って何かする</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/4020610/lohmar-ashar" target="_blank" rel="external">Lohmar ASHAR</a> | 回答日時： 2017年9月15日 10:26 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p><code>multiple_files</code>がすべてのファイル名を含むリストであるとしよう</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">multiple_files = [<span class="string">"file1.txt"</span>, <span class="string">"file2.txt"</span>, <span class="string">"file3.txt"</span>, ...] <span class="comment"># などなど、、、</span></div></pre></td></tr></table></figure><p>すべてを放り込む出力ファイルを開く</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">f = open(<span class="string">"multiple_files.txt"</span>, <span class="string">"w"</span>)</div><div class="line"><span class="keyword">for</span> _file <span class="keyword">in</span> multiple_files:</div><div class="line">    f.write(_file.read())</div></pre></td></tr></table></figure><p>この方法だと、ファイルの各行をいちいち読む必要はないよ。</p><p>上記の方法は簡単だけど、<strong>fileinput</strong> モジュールでも代替できる：</p><p><a href="https://docs.python.org/3/library/fileinput.html#module-fileinput" target="_blank" rel="external"><strong> fileinput docs </strong></a></p><p>fileinputを使用すると、複数のファイルにアクセスして処理することができるよ。</p><p><strong>例</strong>：<br><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">with</span> fileinput.input(files=(<span class="string">'file1.txt'</span>, <span class="string">'file2.txt'</span>)) <span class="keyword">as</span> f:</div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</div><div class="line">        process(line)</div></pre></td></tr></table></figure></p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/3950422/bhansa" target="_blank" rel="external">bhansa</a> | 回答日時： 2017年9月18日 17:19 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/46237182/concatenate-multiple-files-into-a-single-file-object-without-creating-a-new-file" target="_blank" rel="external">Concatenate multiple files into a single file object without creating a new file</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;この質問は&lt;a href=&quot;https://stackoverflow.com/questions/13613336/python-concatenate-text-file&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pythonでテキスト・ファイルを連結する&lt;/a&gt;に関連してるかも。&lt;/p&gt;
&lt;p&gt;今、[‘file1.txt’, ‘file2.txt’,…]のような&lt;code&gt;file_names&lt;/code&gt;のリストがある。&lt;/p&gt;
&lt;p&gt;僕は全部のファイルを行ごとに読んで、単一のファイルオブジェクトにしたいんだけど、でもその過程で新しいファイルを作らずにやることって可能？？&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(file_names, &lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; file_obj:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   line = file_obj.readline()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; line:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       ...&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/3521109/bluprince13&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bluprince13&lt;/a&gt; | 質問日時： 2017年9月15日 10:15 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="datasci" scheme="https://so-matome.net/tags/datasci/"/>
    
      <category term="python" scheme="https://so-matome.net/tags/python/"/>
    
      <category term="file" scheme="https://so-matome.net/tags/file/"/>
    
  </entry>
  
  <entry>
    <title>JavaScriptを使用して現在のURLを取得する方法？ [Javascript]</title>
    <link href="https://so-matome.net/2017/10/31/get-the-current-url-with-javascript/"/>
    <id>https://so-matome.net/2017/10/31/get-the-current-url-with-javascript/</id>
    <published>2017-10-31T22:00:01.000Z</published>
    <updated>2017-10-31T22:00:01.919Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>私がやりたいのは、ウェブサイトのURLを取得することだけ。リンクから取得したURLではなくて。ページをローディングしている際に、僕はウェブサイトの完全な現在のURLを取得して設定する必要があるんだ。</p><p><div style="text-align: right"> By          dougoftheabaci | 質問日時： 2009年6月23日 19:26 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>これを使うのがいいかな：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">window</span>.location.href</div></pre></td></tr></table></figure><p>以下の方法でも動作するけど、Firefoxではバグってる。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">document</span>.URL;</div></pre></td></tr></table></figure><p><strong><a href="https://stackoverflow.com/questions/1034621/get-the-current-url-with-javascript" target="_blank" rel="external">DOMString型のURL、readonly</a>を参照</strong>。</p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/1034621/get-the-current-url-with-javascript" target="_blank" rel="external">Get the current URL with JavaScript?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;私がやりたいのは、ウェブサイトのURLを取得することだけ。リンクから取得したURLではなくて。ページをローディングしている際に、僕はウェブサイトの完全な現在のURLを取得して設定する必要があるんだ。&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By          dougoftheabaci | 質問日時： 2009年6月23日 19:26 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
      <category term="url" scheme="https://so-matome.net/tags/url/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://so-matome.net/2017/10/30/hoge/"/>
    <id>https://so-matome.net/2017/10/30/hoge/</id>
    <published>2017-10-30T22:00:01.910Z</published>
    <updated>2017-10-30T22:00:01.638Z</updated>
    
    <content type="html"><![CDATA[<hr><p>date: 2017-10-30 22:00:01<br>tags:</p><ul><li>datasci</li><li>python</li><li>pandas</li><li>dataframe<br>title: Python pandasで既存のDataFrameに新しい列を追加する [Python]<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2>名前付きの列と、連続数じゃないような列を持つ次のようなインデックス付きDataFrameがある：<figure class="highlight python"><table><tr><td class="code"><pre><div class="line">          a         b         c         d</div><div class="line"><span class="number">2</span>  <span class="number">0.671399</span>  <span class="number">0.101208</span> <span class="number">-0.181532</span>  <span class="number">0.241273</span></div><div class="line"><span class="number">3</span>  <span class="number">0.446172</span> <span class="number">-0.243316</span>  <span class="number">0.051767</span>  <span class="number">1.577318</span></div><div class="line"><span class="number">5</span>  <span class="number">0.614758</span>  <span class="number">0.075793</span> <span class="number">-0.451460</span> <span class="number">-0.012493</span></div></pre></td></tr></table></figure></li></ul><p>既存のデータフレームに新しい列「e」を追加したいんだけど、でもデータフレームは何も変更したくないんだ(つまり、新しい列には常にDataFrameと同じ長さ)。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="number">0</span>   <span class="number">-0.335485</span></div><div class="line"><span class="number">1</span>   <span class="number">-1.166658</span></div><div class="line"><span class="number">2</span>   <span class="number">-0.385571</span></div><div class="line">dtype: float64</div></pre></td></tr></table></figure><p><code>join</code>、<code>append</code>、 <code>merge</code>のいろんなバージョンを試したけど、望んでいた結果は得られず、せいぜいエラーになるだけ。上記の例で「e」列を追加するにはどうしたらいいかな？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1661173/tomasz74" target="_blank" rel="external">tomasz74</a> | 質問日時： 2012年9月23日 19:00 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>元のdf1のインデックスを使用してSeriesを作ればいいよ。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">df1[<span class="string">'e'</span>] = Series(np.random.randn(sLength), index=df1.index)</div></pre></td></tr></table></figure><hr><p><strong>2015年　編集</strong><br>ある人は、上のコードで <code>SettingWithCopyWarning</code>が出るっていってるけど、このコードは現在のパンダバージョン0.16.1でも完璧に動作してるよ。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>sLength = len(df1[<span class="string">'a'</span>])</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>df1</div><div class="line">          a         b         c         d</div><div class="line"><span class="number">6</span> <span class="number">-0.269221</span> <span class="number">-0.026476</span>  <span class="number">0.997517</span>  <span class="number">1.294385</span></div><div class="line"><span class="number">8</span>  <span class="number">0.917438</span>  <span class="number">0.847941</span>  <span class="number">0.034235</span> <span class="number">-0.448948</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>df1[<span class="string">'e'</span>] = p.Series(np.random.randn(sLength), index=df1.index)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>df1</div><div class="line">          a         b         c         d         e</div><div class="line"><span class="number">6</span> <span class="number">-0.269221</span> <span class="number">-0.026476</span>  <span class="number">0.997517</span>  <span class="number">1.294385</span>  <span class="number">1.757167</span></div><div class="line"><span class="number">8</span>  <span class="number">0.917438</span>  <span class="number">0.847941</span>  <span class="number">0.034235</span> <span class="number">-0.448948</span>  <span class="number">2.228131</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>p.version.short_version</div><div class="line"><span class="string">'0.16.1'</span></div></pre></td></tr></table></figure><p><code>SettingWithCopyWarning</code>は、Dataframeのコピーへのおそらく無効な割り当てを通知することを目的としてる。必ずしもそれは君が間違ったやり方をしてるとは限らないよ(それはfalse positive、偽陽性かもしれないので）。でも、0.13.0以降のものではもっと良い方法がいっぱいある、って注意しようとしてるだけ。。なので、警告が表示された場合は、そのアドバイスに従って： <code>.loc[row_index、col_indexer] = value</code>を代わりに使ってみて</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>df1.loc[:,<span class="string">'f'</span>] = p.Series(np.random.randn(sLength), index=df1.index)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>df1</div><div class="line">          a         b         c         d         e         f</div><div class="line"><span class="number">6</span> <span class="number">-0.269221</span> <span class="number">-0.026476</span>  <span class="number">0.997517</span>  <span class="number">1.294385</span>  <span class="number">1.757167</span> <span class="number">-0.050927</span></div><div class="line"><span class="number">8</span>  <span class="number">0.917438</span>  <span class="number">0.847941</span>  <span class="number">0.034235</span> <span class="number">-0.448948</span>  <span class="number">2.228131</span>  <span class="number">0.006109</span></div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure><p><strong>2017年　編集</strong><br>他の人も行ってるけど、現時点でベストな方法は<code>assign</code>を使うことみたい:</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">df1 = df1.assign(e=p.Series(np.random.randn(sLength)).values)</div></pre></td></tr></table></figure><p>実際、これは今のところより効率的な方法だよ。</p><p>　</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/308903/joaquin" target="_blank" rel="external">joaquin</a> | 回答日時： 2012年9月23日 19:24 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>これが、新しい列を追加する簡単な方法だよ！： <code>df [&#39;e&#39;] = e</code></p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1645853/kathirmani-sukumar" target="_blank" rel="external">Kathirmani Sukumar</a> | 回答日時： 2012年12月12日 16:04 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/12555323/adding-new-column-to-existing-dataframe-in-python-pandas" target="_blank" rel="external">Adding new column to existing DataFrame in Python pandas</a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;date: 2017-10-30 22:00:01&lt;br&gt;tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;datasci&lt;/li&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;li&gt;dataframe&lt;br&gt;title: Python pandasで既存のDataFrameに新しい列を追加する [Python]&lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;名前付きの列と、連続数じゃないような列を持つ次のようなインデックス付きDataFrameがある：&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;          a         b         c         d&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.671399&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.101208&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-0.181532&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.241273&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.446172&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-0.243316&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.051767&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.577318&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.614758&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.075793&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-0.451460&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-0.012493&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;既存のデータフレームに新しい列「e」を追加したいんだけど、でもデータフレームは何も変更したくないんだ(つまり、新しい列には常にDataFrameと同じ長さ)。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.335485&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-1.166658&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.385571&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dtype: float64&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;join&lt;/code&gt;、&lt;code&gt;append&lt;/code&gt;、 &lt;code&gt;merge&lt;/code&gt;のいろんなバージョンを試したけど、望んでいた結果は得られず、せいぜいエラーになるだけ。上記の例で「e」列を追加するにはどうしたらいいかな？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/1661173/tomasz74&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tomasz74&lt;/a&gt; | 質問日時： 2012年9月23日 19:00 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>どのようにJavaScriptの文字列のすべての出現を置き換えるには？ [Javascript]</title>
    <link href="https://so-matome.net/2017/10/30/how-to-replace-all-occurrences-of-a-string-in-javascript/"/>
    <id>https://so-matome.net/2017/10/30/how-to-replace-all-occurrences-of-a-string-in-javascript/</id>
    <published>2017-10-30T22:00:01.000Z</published>
    <updated>2017-10-30T22:00:01.710Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>この文字列があるとして：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="string">"Test abc test test abc test test test abc test test abc"</span></div></pre></td></tr></table></figure></p><p>以下をすると：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">str = str.replace(<span class="string">'abc'</span>, <span class="string">''</span>);</div></pre></td></tr></table></figure></p><p>上の文字列で最初の<code>abc</code>だけを取り除いているみたいだけど、どうやったら<strong>すべての</strong><code>abs</code>を置き換えることができる？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/49153/click-upvote" target="_blank" rel="external">Click Upvote</a> | 質問日時： 2009年7月17日 17:53 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>それをするには基本的に2つの方法があるよ。</p><p><strong>注意：</strong> 一般的に、built-inのプロトタイプをJavaScriptで拡張することは一般的に推奨されてないよ。僕は<code>String</code> built-inプロトタイプに対する仮想的な標準メソッドの実装例を見せるために、Stringプロトタイプの拡張例としてこれを書いてる。</p><hr><h3 id="正規表現ベースの実装"><a href="#正規表現ベースの実装" class="headerlink" title="正規表現ベースの実装"></a>正規表現ベースの実装</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.replaceAll = <span class="function"><span class="keyword">function</span>(<span class="params">search, replacement</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> target = <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">return</span> target.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(search, <span class="string">'g'</span>), replacement);</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h3 id="Splitおよびjoinを用いた実装"><a href="#Splitおよびjoinを用いた実装" class="headerlink" title="Splitおよびjoinを用いた実装"></a>Splitおよびjoinを用いた実装</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.replaceAll = <span class="function"><span class="keyword">function</span>(<span class="params">search, replacement</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> target = <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">return</span> target.split(search).join(replacement);</div><div class="line">&#125;;</div></pre></td></tr></table></figure><hr><p>効率の面で正規表現がどのように裏で何をやってるか昔はあまり知らなかったから、僕はsplitとjoinを使った実装を（パフォーマンスを考慮せずに）よく使ってきた。今はどっちがどのぐらい効率がいいかを調べるたいと思った時だけ使うようにしてる。</p><p>僕のChromeのWindows 8マシンでは、正規表現ベースの実装が一番速かった。<strong>splitとjoinの実装ではそれより53％遅くなった</strong>。<br>この2つを実行している<a href="http://jsben.ch/#/LFfWA" target="_blank" rel="external"><strong>ベンチマーク</strong></a>を見てみて。</p><hr><p>注意すべきは、<code>search</code>が<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions＃Using_special_characters" target="_blank" rel="external">通常の特殊文字として予約されている特定の文字式</a>を含む場合、正規表現ベースの実装にはちょっと問題がある。この実装は、呼び出し側がそういう文字列をあらかじめエスケープするか、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/guide/Regular_Expressions＃Using_special_characters" target="_blank" rel="external">正規表現</a>(MDN)テーブル内の文字を含まない文字列だけを渡しますことを前提としてる。</p><p>MDNは、文字列をエスケープするための実装も提供してる。これも <code>RegExp.escape(str)</code>として標準化されてたらよかったけど、まあ、それは<br>実現してない：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">escapeRegExp</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> str.replace(<span class="regexp">/[.*+?^$&#123;&#125;()|[\]\\]/g</span>, <span class="string">"\\$&amp;"</span>); <span class="comment">// $&amp;はマッチした文字列全体を意味します</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>String.prototype.replaceAll</code>の実装の中で<code>escapeRegExp</code>を呼び出すこともできる。でも僕はこれがどのくらいパフォーマンスに影響するか分からない(英数字の文字列のようにエスケープが必要でない文字列に対してすらも）。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1359785/cory-gross" target="_blank" rel="external">Cory Gross</a> | 回答日時： 2013年7月12日 1:46 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">str = str.replace(<span class="regexp">/abc/g</span>, <span class="string">''</span>);</div></pre></td></tr></table></figure><p>それか</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> find = <span class="string">'abc'</span>;</div><div class="line"><span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(find, <span class="string">'g'</span>);</div><div class="line"></div><div class="line">str = str.replace(re, <span class="string">''</span>);</div></pre></td></tr></table></figure><p>さらに単純化すれば、</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">replaceAll</span>(<span class="params">str, find, replace</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> str.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(find, <span class="string">'g'</span>), replace);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong>注意：</strong> 正規表現には特別な(メタ)文字が含まれてる。だから、それらの文字をエスケープすること無しに<code>find</code>関数の引数を盲目的に渡してしまうのは危険だ。これは<a href="https://developer.mozilla.org/en-US/" target="_blank" rel="external">Mozilla Developer Network</a>の<a href="https://stackoverflow.com/questions/1144783/how-to-replace-all-occurrences-of-a-string-in-javascript" target="_blank" rel="external">正規表現に関するJavaScriptガイド</a>でカバーされてる。 そこでは次のユーティリティ関数が例示されてる：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">escapeRegExp</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> str.replace(<span class="regexp">/([.*+?^=!:$&#123;&#125;()|\[\]\/\\])/g</span>, <span class="string">"\\$1"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>だから、<code>replaceAll()</code>関数を上記より安全にするために<code>escapeRegExp</code>もインクルードすると、以下のようになる：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">replaceAll</span>(<span class="params">str, find, replace</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> str.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(escapeRegExp(find), <span class="string">'g'</span>), replace);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/21926/sean-bright" target="_blank" rel="external">Sean Bright</a> | 回答日時： 2009年7月17日 17:54 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/1144783/how-to-replace-all-occurrences-of-a-string-in-javascript" target="_blank" rel="external">How to replace all occurrences of a string in JavaScript?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;この文字列があるとして：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;Test abc test test abc test test test abc test test abc&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以下をすると：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;str = str.replace(&lt;span class=&quot;string&quot;&gt;&#39;abc&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上の文字列で最初の&lt;code&gt;abc&lt;/code&gt;だけを取り除いているみたいだけど、どうやったら&lt;strong&gt;すべての&lt;/strong&gt;&lt;code&gt;abs&lt;/code&gt;を置き換えることができる？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/49153/click-upvote&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Click Upvote&lt;/a&gt; | 質問日時： 2009年7月17日 17:53 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
      <category term="replace" scheme="https://so-matome.net/tags/replace/"/>
    
  </entry>
  
  <entry>
    <title>JavaScriptオブジェクトを正しくクローンするにはどうしたらいい？ [Javascript]</title>
    <link href="https://so-matome.net/2017/10/29/how-do-i-correctly-clone-a-javascript-object/"/>
    <id>https://so-matome.net/2017/10/29/how-do-i-correctly-clone-a-javascript-object/</id>
    <published>2017-10-29T22:00:01.000Z</published>
    <updated>2017-10-29T22:00:01.503Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>オブジェクト<code>x</code>があってそれをオブジェクト<code>y</code>としてコピーしたいんだけど（<code>y</code>への変更が<code>x</code>を変更しないように）。<br>built-inJavaScriptオブジェクトからコピーしたオブジェクトは不要なプロパティが余分に追加されてるのは知ってるんだけど。これは問題じゃないんだ。なぜって僕はリテラルとして構築されたオブジェクトの1つをコピーしているからです。</p><p>JavaScriptオブジェクトを正しくクローンするにはどうすればいいかな？</p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>jQueryを使用すると、<a href="http://api.jquery.com/jQuery.extend" target="_blank" rel="external">extend</a>で<strong>浅い(shallo)コピー</strong>ができる：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> copiedObject = jQuery.extend(&#123;&#125;, originalObject)</div></pre></td></tr></table></figure><p>copyObjectへのその後の変更はoriginalObjectに影響しない。逆もしかり。</p><p>それか<strong>ディープコピーを作成する</strong>には：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> copiedObject = jQuery.extend(<span class="literal">true</span>, &#123;&#125;, originalObject)</div></pre></td></tr></table></figure><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>オブジェクト内で関数を使用しない場合は、非常に簡単なワンライナーが使える：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> cloneOfA = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(a));</div></pre></td></tr></table></figure><p>これは、オブジェクト、配列、文​​字列、ブーリアンと数字を含むどんな種類のオブジェクトに対しても動作する。</p><p>また、<a href="https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/The_structured_clone_algorithm" target="_blank" rel="external">ブラウザの構造化クローンアルゴリズムについてのこの記事</a>を参照。これはワーカーに、またはワーカーからメッセージを投稿するときに使われる。ディープクローニングの関数も含んでる。</p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>ECMAScript 6には、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank" rel="external">Object.assign</a>メソッドが使える。これは、列挙可能なすべてのプロパティの値をあるオブジェクトから別のオブジェクトにコピーする。例えば：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> x = &#123;<span class="attr">myProp</span>: <span class="string">"value"</span>&#125;;</div><div class="line"><span class="keyword">var</span> y = <span class="built_in">Object</span>.assign(&#123;&#125;, x);</div></pre></td></tr></table></figure><p>ただし、ネストされたオブジェクトは引き続き参照としてコピーされることに注意。</p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/728360/how-do-i-correctly-clone-a-javascript-object" target="_blank" rel="external">How do I correctly clone a JavaScript object?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;オブジェクト&lt;code&gt;x&lt;/code&gt;があってそれをオブジェクト&lt;code&gt;y&lt;/code&gt;としてコピーしたいんだけど（&lt;code&gt;y&lt;/code&gt;への変更が&lt;code&gt;x&lt;/code&gt;を変更しないように）。&lt;br&gt;built-inJavaScriptオブジェクトからコピーしたオブジェクトは不要なプロパティが余分に追加されてるのは知ってるんだけど。これは問題じゃないんだ。なぜって僕はリテラルとして構築されたオブジェクトの1つをコピーしているからです。&lt;/p&gt;
&lt;p&gt;JavaScriptオブジェクトを正しくクローンするにはどうすればいいかな？&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Python pandasで既存のDataFrameに新しい列を追加する [Python]</title>
    <link href="https://so-matome.net/2017/10/29/adding-new-column-to-existing-dataframe-in-python-pandas/"/>
    <id>https://so-matome.net/2017/10/29/adding-new-column-to-existing-dataframe-in-python-pandas/</id>
    <published>2017-10-29T22:00:01.000Z</published>
    <updated>2017-10-29T22:00:01.467Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>名前付きの列と、連続数じゃないような列を持つ次のようなインデックス付きDataFrameがある：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">          a         b         c         d</div><div class="line"><span class="number">2</span>  <span class="number">0.671399</span>  <span class="number">0.101208</span> <span class="number">-0.181532</span>  <span class="number">0.241273</span></div><div class="line"><span class="number">3</span>  <span class="number">0.446172</span> <span class="number">-0.243316</span>  <span class="number">0.051767</span>  <span class="number">1.577318</span></div><div class="line"><span class="number">5</span>  <span class="number">0.614758</span>  <span class="number">0.075793</span> <span class="number">-0.451460</span> <span class="number">-0.012493</span></div></pre></td></tr></table></figure><p>既存のデータフレームに新しい列「e」を追加したいんだけど、でもデータフレームは何も変更したくないんだ(つまり、新しい列には常にDataFrameと同じ長さ)。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="number">0</span>   <span class="number">-0.335485</span></div><div class="line"><span class="number">1</span>   <span class="number">-1.166658</span></div><div class="line"><span class="number">2</span>   <span class="number">-0.385571</span></div><div class="line">dtype: float64</div></pre></td></tr></table></figure><p><code>join</code>、<code>append</code>、 <code>merge</code>のいろんなバージョンを試したけど、望んでいた結果は得られず、せいぜいエラーになるだけ。上記の例で「e」列を追加するにはどうしたらいいかな？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1661173/tomasz74" target="_blank" rel="external">tomasz74</a> | 質問日時： 2012年9月23日 19:00 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>元のdf1のインデックスを使用してSeriesを作ればいいよ。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">df1[<span class="string">'e'</span>] = Series(np.random.randn(sLength), index=df1.index)</div></pre></td></tr></table></figure><hr><p><strong>2015年　編集</strong><br>ある人は、上のコードで <code>SettingWithCopyWarning</code>が出るっていってるけど、このコードは現在のパンダバージョン0.16.1でも完璧に動作してるよ。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>sLength = len(df1[<span class="string">'a'</span>])</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>df1</div><div class="line">          a         b         c         d</div><div class="line"><span class="number">6</span> <span class="number">-0.269221</span> <span class="number">-0.026476</span>  <span class="number">0.997517</span>  <span class="number">1.294385</span></div><div class="line"><span class="number">8</span>  <span class="number">0.917438</span>  <span class="number">0.847941</span>  <span class="number">0.034235</span> <span class="number">-0.448948</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>df1[<span class="string">'e'</span>] = p.Series(np.random.randn(sLength), index=df1.index)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>df1</div><div class="line">          a         b         c         d         e</div><div class="line"><span class="number">6</span> <span class="number">-0.269221</span> <span class="number">-0.026476</span>  <span class="number">0.997517</span>  <span class="number">1.294385</span>  <span class="number">1.757167</span></div><div class="line"><span class="number">8</span>  <span class="number">0.917438</span>  <span class="number">0.847941</span>  <span class="number">0.034235</span> <span class="number">-0.448948</span>  <span class="number">2.228131</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>p.version.short_version</div><div class="line"><span class="string">'0.16.1'</span></div></pre></td></tr></table></figure><p><code>SettingWithCopyWarning</code>は、Dataframeのコピーへのおそらく無効な割り当てを通知することを目的としてる。必ずしもそれは君が間違ったやり方をしてるとは限らないよ(それはfalse positive、偽陽性かもしれないので）。でも、0.13.0以降のものではもっと良い方法がいっぱいある、って注意しようとしてるだけ。。なので、警告が表示された場合は、そのアドバイスに従って： <code>.loc[row_index、col_indexer] = value</code>を代わりに使ってみて</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>df1.loc[:,<span class="string">'f'</span>] = p.Series(np.random.randn(sLength), index=df1.index)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>df1</div><div class="line">          a         b         c         d         e         f</div><div class="line"><span class="number">6</span> <span class="number">-0.269221</span> <span class="number">-0.026476</span>  <span class="number">0.997517</span>  <span class="number">1.294385</span>  <span class="number">1.757167</span> <span class="number">-0.050927</span></div><div class="line"><span class="number">8</span>  <span class="number">0.917438</span>  <span class="number">0.847941</span>  <span class="number">0.034235</span> <span class="number">-0.448948</span>  <span class="number">2.228131</span>  <span class="number">0.006109</span></div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure><p><strong>2017年　編集</strong><br>他の人も行ってるけど、現時点でベストな方法は<code>assign</code>を使うことみたい:</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">df1 = df1.assign(e=p.Series(np.random.randn(sLength)).values)</div></pre></td></tr></table></figure><p>実際、これは今のところより効率的な方法だよ。</p><p>　</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/308903/joaquin" target="_blank" rel="external">joaquin</a> | 回答日時： 2012年9月23日 19:24 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>これが、新しい列を追加する簡単な方法だよ！： <code>df [&#39;e&#39;] = e</code></p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1645853/kathirmani-sukumar" target="_blank" rel="external">Kathirmani Sukumar</a> | 回答日時： 2012年12月12日 16:04 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/12555323/adding-new-column-to-existing-dataframe-in-python-pandas" target="_blank" rel="external">Adding new column to existing DataFrame in Python pandas</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;名前付きの列と、連続数じゃないような列を持つ次のようなインデックス付きDataFrameがある：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;          a         b         c         d&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.671399&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.101208&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-0.181532&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.241273&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.446172&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-0.243316&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.051767&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.577318&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.614758&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.075793&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-0.451460&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-0.012493&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;既存のデータフレームに新しい列「e」を追加したいんだけど、でもデータフレームは何も変更したくないんだ(つまり、新しい列には常にDataFrameと同じ長さ)。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.335485&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-1.166658&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.385571&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dtype: float64&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;join&lt;/code&gt;、&lt;code&gt;append&lt;/code&gt;、 &lt;code&gt;merge&lt;/code&gt;のいろんなバージョンを試したけど、望んでいた結果は得られず、せいぜいエラーになるだけ。上記の例で「e」列を追加するにはどうしたらいいかな？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/1661173/tomasz74&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tomasz74&lt;/a&gt; | 質問日時： 2012年9月23日 19:00 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="datasci" scheme="https://so-matome.net/tags/datasci/"/>
    
      <category term="python" scheme="https://so-matome.net/tags/python/"/>
    
      <category term="dataframe" scheme="https://so-matome.net/tags/dataframe/"/>
    
      <category term="pandas" scheme="https://so-matome.net/tags/pandas/"/>
    
  </entry>
  
  <entry>
    <title>プログラマーが見るべき20のTEDトーク(13)　子供たちにコードを教えよう [Video]</title>
    <link href="https://so-matome.net/2017/10/27/ted-talks-programming-everyone-must-watch-13/"/>
    <id>https://so-matome.net/2017/10/27/ted-talks-programming-everyone-must-watch-13/</id>
    <published>2017-10-27T21:00:01.000Z</published>
    <updated>2017-10-27T21:00:01.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ミッチ・レズニック：子供たちにコードを教えよう"><a href="#ミッチ・レズニック：子供たちにコードを教えよう" class="headerlink" title="ミッチ・レズニック：子供たちにコードを教えよう"></a>ミッチ・レズニック：子供たちにコードを教えよう</h2><p><a href="http://www.makeuseof.com/tag/ted-talks-programming/" target="_blank" rel="external">MakeUseOf</a>より、プログラマーが見ておくべきTEDトークが話題になっていたのでご紹介します。内容は、プログラミング方法を学ぶためではなく、プログラマーになる方法を学ぶことにフォーカスが置かれ、考え方を知ることを重視した内容になっています。<br>第13段は「ミッチ・レズニック：子供たちにコードを教えよう」。以下のように紹介されています：</p><blockquote><p>TEDx Talksは、TED Talksと同じレベルの品質管理をされていないため、しばしば軽視されますが、この動画はそうではありません。 Resnickは16分で、なぜ子供たちにコードを教えるべきか説明します。</p></blockquote><iframe width="560" height="315" src="https://www.youtube.com/embed/Ok6LbV6bqaE?cc_load_policy=1&cc_lang_pref=ja" frameborder="0" allowfullscreen></iframe><p>動画は日本語字幕を表示してありますが、TEDトークの日本語訳には意訳している部分もあるため、英語字幕（以下）をフォローするのをお薦めします：</p><a id="more"></a><div id="" style="overflow-y: scroll; height:400px;"><br>It was a Saturday afternoon in May, and I suddenly realized that the next day was Mother&#39;s Day, and I hadn&#39;t gotten anything for my mom, so I started thinking about what should I get my mom for Mother&#39;s Day?<br><br>I thought, why don&#39;t I make her an interactive Mother&#39;s Day card using the Scratch software that I&#39;d been developing with my research group at the MIT Media Lab?<br><br>We developed it so that people could easily create their own interactive stories and games and animations, and then share their creations with one another.<br><br>So I thought, this would be an opportunity to use Scratch to make an interactive card for my mom.<br><br>Before making my own Mother&#39;s Day card, I thought I would take a look at the Scratch website.<br><br>So over the last several years, kids around the world ages 8 and up, have shared their projects, and I thought, I wonder if, of those three million projects, whether anyone else has thought to put up Mother&#39;s Day cards.<br><br>So in the search box I typed in &quot;Mother&#39;s Day,&quot; and I was surprised and delighted to see a list of dozens and dozens of Mother&#39;s Day cards that showed up on the Scratch website, many of them just in the past 24 hours by procrastinators just like myself.<br><br>So I started taking a look at them. (Music) I saw one of them that featured a kitten and her mom and wishing her mom a happy Mother&#39;s Day.<br><br>And the creator very considerately offered a replay for her mom.<br><br>Another one was an interactive project where, when you moved the mouse over the letters of &quot;Happy Mom Day,&quot; it reveals a special happy Mother&#39;s Day slogan.<br><br>(Music) In this one, the creator told a narrative about how she had Googled to find out when Mother&#39;s Day was happening.<br><br>(Typing) And then once she found out when Mother&#39;s Day was happening, she delivered a special Mother&#39;s Day greeting of how much she loved her mom.<br><br>So I really enjoyed looking at these projects and interacting with these projects.<br><br>In fact, I liked it so much that, instead of making my own project, I sent my mom links to about a dozen of these projects. (Laughter) And actually, she reacted exactly the way that I hoped that she would.<br><br>She wrote back to me and she said, &quot;I&#39;m so proud to have a son that created the software that allowed these kids to make Mother&#39;s Day cards for their mothers.&quot;<br><br>So my mom was happy, and that made me happy, but actually I was even happier for another reason.<br><br>I was happy because these kids were using Scratch just in the way that we had hoped that they would.<br><br>As they created their interactive Mother&#39;s Day cards, you could see that they were really becoming fluent with new technologies.<br><br>What do I mean by fluent?<br><br>I mean that they were able to start expressing themselves and to start expressing their ideas.<br><br>When you become fluent with language, it means you can write an entry in your journal or tell a joke to someone or write a letter to a friend.<br><br>And it&#39;s similar with new technologies.<br><br>By writing, be creating these interactive Mother&#39;s Day cards, these kids were showing that they were really fluent with new technologies.<br><br>Now maybe you won&#39;t be so surprised by this, because a lot of times people feel that young people today can do all sorts of things with technology.<br><br>I mean, all of us have heard young people referred to as &quot;digital natives.&quot;<br><br>But actually I&#39;m sort of skeptical about this term.<br><br>I&#39;m not so sure we should be thinking of young people as digital natives.<br><br>When you really look at it, how is it that young people spend most of their time using new technologies?<br><br>You often see them in situations like this, or like this, and there&#39;s no doubt that young people are very comfortable and familiar browsing and chatting and texting and gaming.<br><br>But that doesn&#39;t really make you fluent.<br><br>So young people today have lots of experience and lots of familiarity with interacting with new technologies, but a lot less so of creating with new technologies and expressing themselves with new technologies.<br><br>It&#39;s almost as if they can read but not write with new technologies.<br><br>And I&#39;m really interested in seeing, how can we help young people become fluent so they can write with new technologies?<br><br>And that really means that they need to be able to write their own computer programs, or code.<br><br>So, increasingly, people are starting to recognize the importance of learning to code.<br><br>You know, in recent years, there have been hundreds of new organizations and websites that are helping young people learn to code.<br><br>You look online, you&#39;ll see places like Codecademy and events like CoderDojo and sites like Girls Who Code, or Black Girls Code.<br><br>It seems that everybody is getting into the act.<br><br>You know, just at the beginning of this year, at the turn of the new year, New York City Mayor Michael Bloomberg made a New Year&#39;s resolution that he was going to learn to code in 2012.<br><br>A few months later, the country of Estonia decided that all of its first graders should learn to code.<br><br>And that triggered a debate in the U.K.<br><br>about whether all the children there should learn to code.<br><br>Now, for some of you, when you hear about this, it might seem sort of strange about everybody learning to code.<br><br>When many people think of coding, they think of it as something that only a very narrow sub-community of people are going to be doing, and they think of coding looking like this.<br><br>And in fact, if this is what coding is like, it will only be a narrow sub-community of people with special mathematical skills and technological background that can code.<br><br>But coding doesn&#39;t have to be like this.<br><br>Let me show you about what it&#39;s like to code in Scratch.<br><br>So in Scratch, to code, you just snap blocks together.<br><br>In this case, you take a move block, snap it into a stack, and the stacks of blocks control the behaviors of the different characters in your game or your story, in this case controlling the big fish.<br><br>After you&#39;ve created your program, you can click on &quot;share,&quot; and then share your project with other people, so that they can use the project and start working on the project as well.<br><br>So, of course, making a fish game isn&#39;t the only thing you can do with Scratch.<br><br>Of the millions of projects on the Scratch website, there&#39;s everything from animated stories to school science projects to anime soap operas to virtual construction kits to recreations of classic video games to political opinion polls to trigonometry tutorials to interactive artwork, and, yes, interactive Mother&#39;s Day cards.<br><br>So I think there&#39;s so many different ways that people can express themselves using this, to be able to take their ideas and share their ideas with the world.<br><br>And it doesn&#39;t just stay on the screen.<br><br>You can also code to interact with the physical world around you.<br><br>Here&#39;s an example from Hong Kong, where some kids made a game and then built their own physical interface device and had a light sensor, so the light sensor detects the hole in the board, so as they move the physical saw, the light sensor detects the hole and controls the virtual saw on the screen and saws down the tree.<br><br>We&#39;re going to continue to look at new ways of bringing together the physical world and the virtual world and connecting to the world around us.<br><br>This is an example from a new version of Scratch that we&#39;ll be releasing in the next few months, and we&#39;re looking again to be able to push you in new directions.<br><br>Here&#39;s an example.<br><br>It uses the webcam.<br><br>And as I move my hand, I can pop the balloons or I can move the bug.<br><br>So it&#39;s a little bit like Microsoft Kinect, where you interact with gestures in the world.<br><br>But instead of just playing someone else&#39;s game, you get to create the games, and if you see someone else&#39;s game, you can just say &quot;see inside,&quot; and you can look at the stacks of blocks that control it.<br><br>So there&#39;s a new block that says how much video motion there is, and then, if there&#39;s so much video motion, it will then tell the balloon to pop.<br><br>The same way that this uses the camera to get information into Scratch, you can also use the microphone.<br><br>Here&#39;s an example of a project using the microphone.<br><br>So I&#39;m going to let all of you control this game using your voices.<br><br>(Crickets chirping) (Shouts) (Chomping) (Laughter) (Applause) As kids are creating projects like this, they&#39;re learning to code, but even more importantly, they&#39;re coding to learn.<br><br>Because as they learn to code, it enables them to learn many other things, opens up many new opportunities for learning.<br><br>Again, it&#39;s useful to make an analogy to reading and writing.<br><br>When you learn to read and write, it opens up opportunities for you to learn so many other things.<br><br>When you learn to read, you can then read to learn.<br><br>And it&#39;s the same thing with coding.<br><br>If you learn to code, you can code to learn.<br><br>Now some of the things you can learn are sort of obvious.<br><br>You learn more about how computers work.<br><br>But that&#39;s just where it starts.<br><br>When you learn to code, it opens up for you to learn many other things.<br><br>Let me show you an example.<br><br>Here&#39;s another project, and I saw this when I was visiting one of the computer clubhouses.<br><br>These are after-school learning centers that we helped start that help young people from low-income communities learn to express themselves creatively with new technologies.<br><br>And when I went to one of the clubhouses a couple years ago, I saw a 13-year-old boy who was using our Scratch software to create a game somewhat like this one, and he was very happy with his game and proud of his game, but also he wanted to do more.<br><br>He wanted to keep score.<br><br>So this was a game where the big fish eats the little fish, but he wanted to keep score, so that each time the big fish eats the little fish, the score would go up and it would keep track, and he didn&#39;t know how to do that.<br><br>So I showed him.<br><br>In Scratch, you can create something called a variable.<br><br>I&#39;ll call it score.<br><br>And that creates some new blocks for you, and also creates a little scoreboard that keeps track of the score, so each time I click on &quot;change score,&quot; it increments the score.<br><br>So I showed this to the clubhouse member – let&#39;s call him Victor – and Victor, when he saw that this block would let him increment the score, he knew exactly what to do.<br><br>He took the block and he put it into the program exactly where the big fish eats the little fish.<br><br>So then, each time the big fish eats the little fish, he will increment the score, and the score will go up by one.<br><br>And it&#39;s in fact working.<br><br>And he saw this, and he was so excited, he reached his hand out to me, and he said, &quot;Thank you, thank you, thank you.&quot;<br><br>And what went through my mind was, how often is it that teachers are thanked by their students for teaching them variables? (Laughter) It doesn&#39;t happen in most classrooms, but that&#39;s because in most classrooms, when kids learn about variables, they don&#39;t know why they&#39;re learning it.<br><br>It&#39;s nothing that, really, they can make use of.<br><br>When you learn ideas like this in Scratch, you can learn it in a way that&#39;s really meaningful and motivating for you, that you can understand the reason for learning variables, and we see that kids learn it more deeply and learn it better.<br><br>Victor had, I&#39;m sure, been taught about variables in schools, but he really didn&#39;t – he wasn&#39;t paying attention.<br><br>Now he had a reason for learning variables.<br><br>So when you learn through coding, and coding to learn, you&#39;re learning it in a meaningful context, and that&#39;s the best way of learning things.<br><br>So as kids like Victor are creating projects like this, they&#39;re learning important concepts like variables, but that&#39;s just the start.<br><br>As Victor worked on this project and created the scripts, he was also learning about the process of design, how to start with the glimmer of an idea and turn it into a fully-fledged, functioning project like you see here.<br><br>So he was learning many different core principles of design, about how to experiment with new ideas, how to take complex ideas and break them down into simpler parts, how to collaborate with other people on your projects, about how to find and fix bugs when things go wrong, how to keep persistent and to persevere in the face of frustrations when things aren&#39;t working well.<br><br>Now those are important skills that aren&#39;t just relevant for coding.<br><br>They&#39;re relevant for all sorts of different activities.<br><br>Now, who knows if Victor is going to grow up and become a programmer or a professional computer scientist?<br><br>It&#39;s probably not so likely, but regardless of what he does, he&#39;ll be able to make use of these design skills that he learned.<br><br>Regardless of whether he grows up to be a marketing manager or a mechanic or a community organizer, that these ideas are useful for everybody.<br><br>Again, it&#39;s useful to think about this analogy with language.<br><br>When you become fluent with reading and writing, it&#39;s not something that you&#39;re doing just to become a professional writer.<br><br>Very few people become professional writers.<br><br>But it&#39;s useful for everybody to learn how to read and write.<br><br>Again, the same thing with coding.<br><br>Most people won&#39;t grow up to become professional computer scientists or programmers, but those skills of thinking creatively, reasoning systematically, working collaboratively – skills you develop when you code in Scratch – are things that people can use no matter what they&#39;re doing in their work lives.<br><br>And it&#39;s not just about your work life.<br><br>Coding can also enable you to express your ideas and feelings in your personal life.<br><br>Let me end with just one more example.<br><br>So this is an example that came from after I had sent the Mother&#39;s Day cards to my mom, she decided that she wanted to learn Scratch.<br><br>So she made this project for my birthday and sent me a happy birthday Scratch card.<br><br>Now this project is not going to win any prizes for design, and you can rest assured that my 83-year-old mom is not training to become a professional programmer or computer scientist.<br><br>But working on this project enabled her to make a connection to someone that she cares about and enabled her to keep on learning new things and continuing to practice her creativity and developing new ways of expressing herself.<br><br>So as we take a look and we see that Michael Bloomberg is learning to code, all of the children of Estonia learn to code, even my mom has learned to code, don&#39;t you think it&#39;s about time that you might be thinking about learning to code?<br><br>If you&#39;re interested in giving it a try, I&#39;d encourage you to go to the Scratch website.<br><br>It&#39;s scratch.mit.edu, and give a try at coding.<br><br>Thanks very much. (Applause)<br></div> ]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ミッチ・レズニック：子供たちにコードを教えよう&quot;&gt;&lt;a href=&quot;#ミッチ・レズニック：子供たちにコードを教えよう&quot; class=&quot;headerlink&quot; title=&quot;ミッチ・レズニック：子供たちにコードを教えよう&quot;&gt;&lt;/a&gt;ミッチ・レズニック：子供たちにコードを教えよう&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.makeuseof.com/tag/ted-talks-programming/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MakeUseOf&lt;/a&gt;より、プログラマーが見ておくべきTEDトークが話題になっていたのでご紹介します。内容は、プログラミング方法を学ぶためではなく、プログラマーになる方法を学ぶことにフォーカスが置かれ、考え方を知ることを重視した内容になっています。&lt;br&gt;第13段は「ミッチ・レズニック：子供たちにコードを教えよう」。以下のように紹介されています：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TEDx Talksは、TED Talksと同じレベルの品質管理をされていないため、しばしば軽視されますが、この動画はそうではありません。 Resnickは16分で、なぜ子供たちにコードを教えるべきか説明します。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Ok6LbV6bqaE?cc_load_policy=1&amp;cc_lang_pref=ja&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;動画は日本語字幕を表示してありますが、TEDトークの日本語訳には意訳している部分もあるため、英語字幕（以下）をフォローするのをお薦めします：&lt;/p&gt;
    
    </summary>
    
    
      <category term="video" scheme="https://so-matome.net/tags/video/"/>
    
      <category term="english" scheme="https://so-matome.net/tags/english/"/>
    
      <category term="TED" scheme="https://so-matome.net/tags/TED/"/>
    
  </entry>
  
  <entry>
    <title>Javascriptの悪名高いループの問題？ [Javascript] [Closures]</title>
    <link href="https://so-matome.net/2017/10/26/javascript-infamous-loop-issue/"/>
    <id>https://so-matome.net/2017/10/26/javascript-infamous-loop-issue/</id>
    <published>2017-10-26T22:36:40.000Z</published>
    <updated>2017-10-28T02:51:44.394Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>次のコードスニペットがあるんだけど、</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addLinks</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>, link; i&lt;<span class="number">5</span>; i++) &#123;</div><div class="line">        link = <span class="built_in">document</span>.createElement(<span class="string">"a"</span>);</div><div class="line">        link.innerHTML = <span class="string">"Link "</span> + i;</div><div class="line">        link.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            alert(i);</div><div class="line">        &#125;;</div><div class="line">        <span class="built_in">document</span>.body.appendChild(link);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>上記のコードは、5つのリンクを生成して、現在のリンクIDを表示するために各リンクをアラートイベントでバインドするためのコード。<br>でも、動作しないんだ。クリックすると生成されたリンクはすべて「リンク5」になる。</p><p>でも、次のコードスニペットは僕の期待通りに機能する。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addLinks</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>, link; i&lt;<span class="number">5</span>; i++) &#123;</div><div class="line">        link = <span class="built_in">document</span>.createElement(<span class="string">"a"</span>);</div><div class="line">        link.innerHTML = <span class="string">"Link "</span> + i;</div><div class="line">        link.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">num</span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                alert(num);</div><div class="line">            &#125;;</div><div class="line">        &#125;(i);</div><div class="line">        <span class="built_in">document</span>.body.appendChild(link);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>上記の2つのスニペットは<a href="https://stackoverflow.com/questions/1451009/javascript-infamous-loop-issue" target="_blank" rel="external">ここから拝借した</a>。著者の解説にあるように、<strong>closure</strong>は魔法のように見える。</p><p>でも、どのように動作し、どのように<strong>クロージャ</strong>が動作するかは、僕には理解不能。なぜ最初のものは動作しないの？誰かこの魔法の詳細な説明ってできる？</p><p>よろしくお願いします。。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/125633/zhu-tao" target="_blank" rel="external">Zhu Tao</a> | 質問日時： 2009年9月20日 13:21 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>最初の例の説明として、<a href="https://stackoverflow.com/questions/643542/doesnt-javascript-support-closures-with-local-variables/643664#643664" target="_blank" rel="external">僕の以前の回答</a>を引用してみる：</p><blockquote><p>JavaScriptのスコープはブロックレベルではなく、関数レベル。closureを作ることは、囲むスコープが、囲まれる関数のレキシカルな環境に追加されることを意味する。<br>ループが終了すると、関数レベル変数iの値は5になり、それは内部の関数が「見ている」ものだ。</p></blockquote><p>2番目の例では、反復ステップごとに、外部関数リテラルがそれ自身の有効範囲とローカル変数<code>num</code>を持つ新しい関数オブジェクトを評価して、その値は現在の値「i」に設定される。<code>num</code>は決して変更されないので、クロージャの生存期間にわたって定数として保たれる：関数オブジェクトが独立しているので、次の反復ステップでは古い値を上書きしない。</p><p>このアプローチは、リンクごとに2つの新しい関数オブジェクトを作成する必要があるので非効率だってことに注意。これは基本的に不要、なぜかというと情報ストレージとしてDOMノードを使用するとそれらは簡単に共有できるから。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">linkListener</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    alert(<span class="keyword">this</span>.i);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addLinks</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i) &#123;</div><div class="line">        <span class="keyword">var</span> link = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</div><div class="line">        link.appendChild(<span class="built_in">document</span>.createTextNode(<span class="string">'Link '</span> + i));</div><div class="line">        link.i = i;</div><div class="line">        link.onclick = linkListener;</div><div class="line">        <span class="built_in">document</span>.body.appendChild(link);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/48015/christoph" target="_blank" rel="external">Christoph</a> | 回答日時： 2009年9月20日 13:43 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>ここで簡単な説明を書いてみる：</p><p>ページにはそれぞれID野着いたdiv1、div2、div3、div4、div5の5つのdivがある。<br>jQueryではこうできる…</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</div><div class="line">    $(<span class="string">"#div"</span> + i).click ( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; alert ($(<span class="keyword">this</span>).index()) &#125; )</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>で、問題に対処していこう(ゆっくりと構築していく)…</p><h2 id="ステップ1"><a href="#ステップ1" class="headerlink" title="ステップ1"></a>ステップ1</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</div><div class="line">    $(<span class="string">"#div"</span> + i).click (</div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> クリックイベントを処理するための書き込み関数</span></div><div class="line">    )</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="ステップ2"><a href="#ステップ2" class="headerlink" title="ステップ2"></a>ステップ2</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</div><div class="line">    $(<span class="string">"#div"</span> + i).click (</div><div class="line">        <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123;</div><div class="line">            <span class="comment">//関数の値は、関数が呼び出されたときに設定されてる！</span></div><div class="line">            <span class="comment">//これを理解すればもう安心(僕は2年かかった)！</span></div><div class="line">            <span class="comment">// clickイベントはハンドラとしての関数を期待しているので、それを返すｒ</span></div><div class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; alert (num) &#125;</div><div class="line">        &#125;(i) <span class="comment">// ここで関数を呼び出し、iの中の値を渡す</span></div><div class="line"></div><div class="line">    )</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="簡単に理解できる別の方法"><a href="#簡単に理解できる別の方法" class="headerlink" title="簡単に理解できる別の方法"></a>簡単に理解できる別の方法</h2><p>もしこれがわかりにくければ、これなら簡単にわかるかも。やってることは同じ…</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params">num</span>) </span>&#123;</div><div class="line">        $(<span class="string">"#div"</span> + i).click (</div><div class="line">            <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; alert (num) &#125;</div><div class="line">        )</div><div class="line">    &#125;</div><div class="line">    clickHandler(i);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>これは、関数変数の値は関数が呼び出されたときに設定される、ってことを覚えていれば分かりやすいはず(でも、これは上とまったく同じ思考プロセスを使ってる)。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1176661/daniel-lewis" target="_blank" rel="external">Daniel Lewis</a> | 回答日時： 2012年1月29日 16:27 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>他の人は何が起こっているのかを説明したけど、ここでは別の解決法を提供してみる。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addLinks</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, link; i &lt; <span class="number">5</span>; i++) &#123;</div><div class="line">    link = <span class="built_in">document</span>.createElement(<span class="string">"a"</span>);</div><div class="line">    link.innerHTML = <span class="string">"Link "</span> + i;</div><div class="line"></div><div class="line">    <span class="keyword">with</span> (&#123; <span class="attr">n</span>: i &#125;) &#123;</div><div class="line">      link.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        alert(n);</div><div class="line">      &#125;;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">document</span>.body.appendChild(link);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>基本的には、貧乏人のためのletバインディング。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/65188/nlogax" target="_blank" rel="external">nlogax</a> | 回答日時： 2009年9月26日 21:38 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/1451009/javascript-infamous-loop-issue" target="_blank" rel="external">Javascript infamous Loop issue? [duplicate]</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;次のコードスニペットがあるんだけど、&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addLinks&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, link; i&amp;lt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        link = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        link.innerHTML = &lt;span class=&quot;string&quot;&gt;&quot;Link &quot;&lt;/span&gt; + i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        link.onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            alert(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(link);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上記のコードは、5つのリンクを生成して、現在のリンクIDを表示するために各リンクをアラートイベントでバインドするためのコード。&lt;br&gt;でも、動作しないんだ。クリックすると生成されたリンクはすべて「リンク5」になる。&lt;/p&gt;
&lt;p&gt;でも、次のコードスニペットは僕の期待通りに機能する。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addLinks&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, link; i&amp;lt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        link = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        link.innerHTML = &lt;span class=&quot;string&quot;&gt;&quot;Link &quot;&lt;/span&gt; + i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        link.onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;num&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                alert(num);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(link);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上記の2つのスニペットは&lt;a href=&quot;https://stackoverflow.com/questions/1451009/javascript-infamous-loop-issue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ここから拝借した&lt;/a&gt;。著者の解説にあるように、&lt;strong&gt;closure&lt;/strong&gt;は魔法のように見える。&lt;/p&gt;
&lt;p&gt;でも、どのように動作し、どのように&lt;strong&gt;クロージャ&lt;/strong&gt;が動作するかは、僕には理解不能。なぜ最初のものは動作しないの？誰かこの魔法の詳細な説明ってできる？&lt;/p&gt;
&lt;p&gt;よろしくお願いします。。&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/125633/zhu-tao&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zhu Tao&lt;/a&gt; | 質問日時： 2009年9月20日 13:21 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
      <category term="closures" scheme="https://so-matome.net/tags/closures/"/>
    
  </entry>
  
  <entry>
    <title>データフレームを（inner, outer, left, rightで）結合（マージ）する方法は？ [R]</title>
    <link href="https://so-matome.net/2017/10/26/how-to-join-merge-data-frames-inner-outer-left-right/"/>
    <id>https://so-matome.net/2017/10/26/how-to-join-merge-data-frames-inner-outer-left-right/</id>
    <published>2017-10-26T22:36:39.000Z</published>
    <updated>2017-10-28T02:50:56.533Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>2つのデータフレームがあるとする：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">df1 = data.frame(CustomerId = c(<span class="number">1</span>:<span class="number">6</span>), Product = c(rep(<span class="string">"Toaster"</span>, <span class="number">3</span>), rep(<span class="string">"Radio"</span>, <span class="number">3</span>)))</div><div class="line">df2 = data.frame(CustomerId = c(<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>), State = c(rep(<span class="string">"Alabama"</span>, <span class="number">2</span>), rep(<span class="string">"Ohio"</span>, <span class="number">1</span>)))</div><div class="line"></div><div class="line">df1</div><div class="line"><span class="comment">#  CustomerId Product</span></div><div class="line"><span class="comment">#           1 Toaster</span></div><div class="line"><span class="comment">#           2 Toaster</span></div><div class="line"><span class="comment">#           3 Toaster</span></div><div class="line"><span class="comment">#           4   Radio</span></div><div class="line"><span class="comment">#           5   Radio</span></div><div class="line"><span class="comment">#           6   Radio</span></div><div class="line"></div><div class="line">df2</div><div class="line"><span class="comment">#  CustomerId   State</span></div><div class="line"><span class="comment">#           2 Alabama</span></div><div class="line"><span class="comment">#           4 Alabama</span></div><div class="line"><span class="comment">#           6    Ohio</span></div></pre></td></tr></table></figure></p><p>どうやったらデータベース的、すなわち、<a href="http://en.wikipedia.org/wiki/Join_%28SQL%29" target="_blank" rel="external">SQLみたいなjoin</a>ができる？つまり、</p><ul><li><p><code>df1</code>と<code>df2</code>の<a href="http://en.wikipedia.org/wiki/Join_%28SQL%29#Inner_join" target="_blank" rel="external">inner join</a>：<br>左側のテーブルが右側のテーブルに一致するキーがある行のみを返す。</p></li><li><p><code>df1</code>と<code>df2</code>の<a href="http://en.wikipedia.org/wiki/Join_%28SQL%29#Outer_join" target="_blank" rel="external">外部結合</a>：<br>両方のテーブルのすべての行を返し、右側のテーブルの一致するキーがある左側のテーブルからレコードは結合する。</p></li><li><p><code>df1</code>と<code>df2</code>の<a href="http://en.wikipedia.org/wiki/Join_%28SQL%29#Left_outer_join" target="_blank" rel="external">left outer join(または単にleft join)</a><br>左のテーブルからすべての行と、右側からマッチするキーが有るすべての行を返す</p></li><li><p><code>df1</code>と<code>df2</code>の<a href="http://en.wikipedia.org/wiki/Join_%28SQL%29#Right_outer_join" target="_blank" rel="external">right outer join</a><br>右側のテーブルからすべての行を返し、さらに左側から一致するキーを持つ行の全てを返す<br>左のテーブル。</p></li></ul><p>おまけ：</p><p>どのやったらSQLっぽいのselect文を実行できる？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/23929/dan-goldstein" target="_blank" rel="external">Dan Goldstein</a> | 質問日時： 2009年8月19日 13:18 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p><code>merge</code>関数とそのパラメータを使うことでできるよ：</p><p><strong>Inner join</strong>: <code>merge(df1、df2)</code>で出来る。Rは自動的に共通の変数名でフレームに結合するから。でも、必要とするfieldをマッチしてるのを確認するために、<code>merge(df1、df2、by = CustomerId &quot;)</code>を使用したほうがいいかな。一致する変数が異なるデータフレームで異なる名前を持つ場合は、 <code>by.x</code>と<code>by.y</code>パラメータを使うこともできるよ。</p><p><strong>Outer join</strong>: <code>merge(x = df1, y = df2, by = &quot;CustomerId&quot;, all = TRUE)</code></p><p><strong>Left outer</strong>: <code>merge(x = df1, y = df2, by = &quot;CustomerId&quot;, all.x = TRUE)</code></p><p><strong>Right outer</strong>: <code>merge(x = df1, y = df2, by = &quot;CustomerId&quot;, all.y = TRUE)</code></p><p><strong>Cross join</strong>: <code>merge(x = df1, y = df2, by = NULL)</code></p><p>でもほとんどの場合、マージしたい識別子を明示的に記述するほうが安全だろうね。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/143319/matt-parker" target="_blank" rel="external">Matt Parker</a> | 回答日時： 2009年8月19日 15:15 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>Gabor Grothendieckの <a href="http://cran.r-project.org/web/packages/sqldf/index.html" target="_blank" rel="external"><code>sqldf</code>パッケージ</a>をおすすめするよ。SQLでの操作みたいにできるから.</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="keyword">library</span>(sqldf)</div><div class="line"></div><div class="line"><span class="comment">## inner join</span></div><div class="line">df3 &lt;- sqldf(<span class="string">"SELECT CustomerId, Product, State</span></div><div class="line"><span class="string">              FROM df1</span></div><div class="line"><span class="string">              JOIN df2 USING(CustomerID)"</span>)</div><div class="line"></div><div class="line"><span class="comment">## left join (substitute 'right' for right join)</span></div><div class="line">df4 &lt;- sqldf(<span class="string">"SELECT CustomerId, Product, State</span></div><div class="line"><span class="string">              FROM df1</span></div><div class="line"><span class="string">              LEFT JOIN df2 USING(CustomerID)"</span>)</div></pre></td></tr></table></figure><p>SQLの構文の方が、Rの同じ構文よりも簡単で自然だと思うから(でもこれは僕のRDBMSバイアスを反映してるだけかも)。</p><p>結合に関しては<a href="https://github.com/ggrothendieck/sqldf#example-4-join" target="_blank" rel="external">Gaborのsqldf<br>GitHub</a>を参照</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/2002705/medriscoll" target="_blank" rel="external">medriscoll</a> | 回答日時： 2009年8月20日 17:54 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/1299871/how-to-join-merge-data-frames-inner-outer-left-right" target="_blank" rel="external">How to join (merge) data frames (inner, outer, left, right)?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;2つのデータフレームがあるとする：&lt;br&gt;&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;df1 = data.frame(CustomerId = c(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;), Product = c(rep(&lt;span class=&quot;string&quot;&gt;&quot;Toaster&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;), rep(&lt;span class=&quot;string&quot;&gt;&quot;Radio&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;df2 = data.frame(CustomerId = c(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;), State = c(rep(&lt;span class=&quot;string&quot;&gt;&quot;Alabama&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;), rep(&lt;span class=&quot;string&quot;&gt;&quot;Ohio&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;df1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#  CustomerId Product&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           1 Toaster&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           2 Toaster&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           3 Toaster&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           4   Radio&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           5   Radio&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           6   Radio&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;df2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#  CustomerId   State&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           2 Alabama&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           4 Alabama&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           6    Ohio&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;どうやったらデータベース的、すなわち、&lt;a href=&quot;http://en.wikipedia.org/wiki/Join_%28SQL%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SQLみたいなjoin&lt;/a&gt;ができる？つまり、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;df1&lt;/code&gt;と&lt;code&gt;df2&lt;/code&gt;の&lt;a href=&quot;http://en.wikipedia.org/wiki/Join_%28SQL%29#Inner_join&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;inner join&lt;/a&gt;：&lt;br&gt;左側のテーブルが右側のテーブルに一致するキーがある行のみを返す。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;df1&lt;/code&gt;と&lt;code&gt;df2&lt;/code&gt;の&lt;a href=&quot;http://en.wikipedia.org/wiki/Join_%28SQL%29#Outer_join&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;外部結合&lt;/a&gt;：&lt;br&gt;両方のテーブルのすべての行を返し、右側のテーブルの一致するキーがある左側のテーブルからレコードは結合する。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;df1&lt;/code&gt;と&lt;code&gt;df2&lt;/code&gt;の&lt;a href=&quot;http://en.wikipedia.org/wiki/Join_%28SQL%29#Left_outer_join&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;left outer join(または単にleft join)&lt;/a&gt;&lt;br&gt;左のテーブルからすべての行と、右側からマッチするキーが有るすべての行を返す&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;df1&lt;/code&gt;と&lt;code&gt;df2&lt;/code&gt;の&lt;a href=&quot;http://en.wikipedia.org/wiki/Join_%28SQL%29#Right_outer_join&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;right outer join&lt;/a&gt;&lt;br&gt;右側のテーブルからすべての行を返し、さらに左側から一致するキーを持つ行の全てを返す&lt;br&gt;左のテーブル。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;おまけ：&lt;/p&gt;
&lt;p&gt;どのやったらSQLっぽいのselect文を実行できる？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/23929/dan-goldstein&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dan Goldstein&lt;/a&gt; | 質問日時： 2009年8月19日 13:18 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="datasci" scheme="https://so-matome.net/tags/datasci/"/>
    
      <category term="r" scheme="https://so-matome.net/tags/r/"/>
    
      <category term="dataframe" scheme="https://so-matome.net/tags/dataframe/"/>
    
      <category term="r-faq" scheme="https://so-matome.net/tags/r-faq/"/>
    
      <category term="join" scheme="https://so-matome.net/tags/join/"/>
    
      <category term="merge" scheme="https://so-matome.net/tags/merge/"/>
    
  </entry>
  
  <entry>
    <title>バージョニングは重要だ [Webコミック]</title>
    <link href="https://so-matome.net/2017/10/24/commic-2017-09-12-versioning-is-important/"/>
    <id>https://so-matome.net/2017/10/24/commic-2017-09-12-versioning-is-important/</id>
    <published>2017-10-24T21:00:01.000Z</published>
    <updated>2017-10-24T21:00:01.408Z</updated>
    
    <content type="html"><![CDATA[<p>毎週水曜日はIT企業で働く人達をネタにしたWebコミック、<a href="http://www.commitstrip.com/en/" target="_blank" rel="external">Commit Strip</a>を翻訳したものを紹介しています。<br>Webデベロッパーなら笑えるネタがたくさん（？）</p><p>今回のお題は「Versioning is important（バージョニングは重要だ）」です。</p><a id="more"></a><p><strong>１コマ目：</strong><br>「（ニヤニヤしながら）デザイナーバーション管理の方法って俺好きなんだよな～」<br>「ホント、俺もそうだよ」</p><p><strong>２コマ目：</strong><br>「そう、poster.psd、poster最終.psd、poster最終＿最後.psd、、、」<br>「それからposter最終＿最終最後.psd、poster最終＿最終最後＿サイゴ.psd」</p><img src="/2017/10/24/commic-2017-09-12-versioning-is-important/commic-2017-09-12-versioning-is-important.jpg" alt="commic-2017-09-12-versioning-is-important.jpg" title=""><p><strong>３コマ目：</strong><br>「ってことはバージョン管理システムなんて使ってないってことじゃないの？」「いつになったら誰がPSDファイルのためのバージョン管理システムとか発明するのかな～」<br>「うぅ、、、」</p><p><strong>４コマ目：</strong><br>「ちゃんとしたバージョン番号とちゃんとしたバージョンメッセージ、、、」<br>「そうしたらもうちょっとプロっぽくなるんじゃね？」<br>（手前のパソコンのコミット・ログ）<br>バグフィックス終了！<br>バグフィックス修正済み！<br>バグフィックス！<br>バグフィックス</p><hr><hr><p>Source: <a href="http://www.commitstrip.com/en/2017/09/12/versioning-is-important/" target="_blank" rel="external">Versioning is important</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;毎週水曜日はIT企業で働く人達をネタにしたWebコミック、&lt;a href=&quot;http://www.commitstrip.com/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Commit Strip&lt;/a&gt;を翻訳したものを紹介しています。&lt;br&gt;Webデベロッパーなら笑えるネタがたくさん（？）&lt;/p&gt;
&lt;p&gt;今回のお題は「Versioning is important（バージョニングは重要だ）」です。&lt;/p&gt;
    
    </summary>
    
    
      <category term="comic" scheme="https://so-matome.net/tags/comic/"/>
    
  </entry>
  
  <entry>
    <title>Pythonの@staticmethodと@classmethodの違いって何？ [Python]</title>
    <link href="https://so-matome.net/2017/10/24/what-is-the-difference-between-staticmethod-and-classmethod-in-python/"/>
    <id>https://so-matome.net/2017/10/24/what-is-the-difference-between-staticmethod-and-classmethod-in-python/</id>
    <published>2017-10-24T04:06:51.000Z</published>
    <updated>2017-10-24T04:06:51.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><a href="http://docs.python.org/library/functions.html#staticmethod" target="_blank" rel="external"><code>@staticmethod</code></a>が付いてる関数と、<a href="http://docs.python.org/library/functions.html#classmethod" target="_blank" rel="external"><code>@classmethod</code></a>が付いてる関数の違いって何？</p><p><div style="text-align: right"> By  <a href="/users/4766/daryl-spitzer">Daryl Spitzer</a> | 質問日時： Sep 25 ‘08 at 21:01 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>たぶんコード例で見たほうがいいと思う：<code>foo</code>、<code>class_foo</code>と <code>static_foo</code>のコールのsignature(訳注：メソッド名、パラメータ、戻り値の型をあわせたもの)の違いに注意：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(self,x)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"を実行する foo(%s,%s)"</span>%(self,x)</div><div class="line"></div><div class="line"><span class="meta">    @classmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">class_foo</span><span class="params">(cls,x)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"を実行する class_foo(%s,%s)"</span>%(cls,x)</div><div class="line"></div><div class="line"><span class="meta">    @staticmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">static_foo</span><span class="params">(x)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"を実行する static_foo(%s)"</span>%x</div><div class="line"></div><div class="line">a=A()</div></pre></td></tr></table></figure><p>以下は、オブジェクトインスタンスがメソッドを呼び出す一般的な方法。オブジェクトインスタンス<code>a</code>は最初の引数として暗黙的に渡される。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">a.foo(<span class="number">1</span>)</div><div class="line"><span class="comment">#  foo(&lt;__main__.A object at 0xb7dbef0c&gt;,1)を実行する</span></div></pre></td></tr></table></figure><hr><p><strong>classmethods</strong>では、オブジェクトインスタンスのクラスは、<code>self</code>じゃなく最初の引数として暗黙的に渡される。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">a.class_foo(<span class="number">1</span>)</div><div class="line"><span class="comment"># class_foo(&lt;class '__main__.A'&gt;,1)を実行する</span></div></pre></td></tr></table></figure><p>クラスを使って <code>class_foo</code>を呼び出すこともできるよ。実際、何かをクラスメソッドとが定義した場合、たぶんそれはクラスインスタンスからじゃなくクラスから呼び出されると仮定して定義しているはずなので。<code>A.foo(1)</code>はTypeErrorだけど、 <code>A.class_foo(1)</code>はうまくいくよ：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">A.class_foo(<span class="number">1</span>)</div><div class="line"><span class="comment"># class_foo(&lt;class '__main__.A'&gt;,1)を実行する</span></div></pre></td></tr></table></figure><p>クラスメソッドとしてよく使われるのは、<a href="https://stackoverflow.com/a/1950927/190597" target="_blank" rel="external">継承可能な代替コンストラクタ</a>を作ること。</p><hr><p><strong>staticmethods</strong>では、 <code>self</code>(オブジェクトインスタンス)も<code>cls</code>(クラス)も暗黙のうちに第1引数として渡されない。インスタンスやクラスから呼び出すことができる点を除いて、通常の関数のように動作するよ。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">a.static_foo(<span class="number">1</span>)</div><div class="line"><span class="comment"># static_foo(1)を実行する</span></div><div class="line"></div><div class="line">A.static_foo(<span class="string">'hi'</span>)</div><div class="line"><span class="comment"># static_foo(hi)を実行する</span></div></pre></td></tr></table></figure><p>staticmethodsはあるクラスとそのクラスへの論理接続を持つ関数をグループ化するために使用される。</p><hr><p><code>foo</code>は単なる関数だけど、<code>a.foo</code>を呼び出すと、関数自身は得ることができなくて、最初の引数としてバインドされたオブジェクトインスタンス <code>a</code>へ”部分的に適用された”関数が与えられる。<code>foo</code>は２つの引数があることを期待してるけど、<code>a.foo</code>は1つの引数しか期待していない。</p><p>ここで<code>a</code>は<code>foo</code>にバインドされてる。これは、以下のように「束縛」(bound)が意味してるものでもある：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">print(a.foo)</div><div class="line"><span class="comment"># &lt;bound method A.foo of &lt;__main__.A object at 0xb7d52f0c&gt;&gt;</span></div></pre></td></tr></table></figure><p><code>a.class_foo</code>では、<code>a</code>は <code>class_foo</code>に束縛されず、むしろクラス<code>A</code>は<code>class_foo</code>に束縛されてる。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">print(a.class_foo)</div><div class="line"><span class="comment"># &lt;bound method type.class_foo of &lt;class '__main__.A'&gt;&gt;</span></div></pre></td></tr></table></figure><p>staticメソッドでは、例えそれがメソッドであっても <code>a.static_foo</code>は何も引数がバインドされていない「古き良き」関数を返してくれる。<code>static_foo</code>は1つ引数があるのをを期待してて、<code>a.static_foo</code>も1つの引数があるのを期待してる。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">print(a.static_foo)</div><div class="line"><span class="comment"># &lt;function static_foo at 0xb7d479cc&gt;</span></div></pre></td></tr></table></figure><p>そしてもちろん、代わりにクラス<code>A</code>で<code>static_foo</code>を呼び出すと同じことが起こる。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">print(A.static_foo)</div><div class="line"><span class="comment"># &lt;function static_foo at 0xb7d479cc&gt;</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/190597/unutbu">unutbu</a> | 回答日時： Nov 3 ‘09 at 19:13 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python" target="_blank" rel="external">What is the difference between @staticmethod and @classmethod in Python?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://docs.python.org/library/functions.html#staticmethod&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;@staticmethod&lt;/code&gt;&lt;/a&gt;が付いてる関数と、&lt;a href=&quot;http://docs.python.org/library/functions.html#classmethod&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;@classmethod&lt;/code&gt;&lt;/a&gt;が付いてる関数の違いって何？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/4766/daryl-spitzer&quot;&gt;Daryl Spitzer&lt;/a&gt; | 質問日時： Sep 25 ‘08 at 21:01 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="datasci" scheme="https://so-matome.net/tags/datasci/"/>
    
      <category term="python" scheme="https://so-matome.net/tags/python/"/>
    
      <category term="oop" scheme="https://so-matome.net/tags/oop/"/>
    
  </entry>
  
  <entry>
    <title>昔話 [Webコミック]</title>
    <link href="https://so-matome.net/2017/10/24/commic-2017-05-02-telling-our-story/"/>
    <id>https://so-matome.net/2017/10/24/commic-2017-05-02-telling-our-story/</id>
    <published>2017-10-24T04:06:51.000Z</published>
    <updated>2017-10-24T04:06:51.711Z</updated>
    
    <content type="html"><![CDATA[<p><strong>１コマ目：</strong><br>「ねえ、叔父さん、僕ちょっと分からないことがあるんだけど、、、」<br>「何が分からないんだい？」</p><p><strong>２コマ目：</strong><br>「どうしてハードディスクはA:からじゃなくて、C:から始まるの？」<br>「ああ！」</p><img src="/2017/10/24/commic-2017-05-02-telling-our-story/commic-2017-05-02-telling-our-story.jpg" alt="commic-2017-05-02-telling-our-story.jpg" title=""><p><strong>３コマ目：</strong><br>「お前がそんな事を聞くなんて思っても見なかったなー！」<br>「よし、それじゃ初めから話をしてやろう」</p><p><strong>４コマ目：</strong><br>「むかぁ～し昔、あるところに、、、」</p><hr><hr><p>Source: <a href="http://www.commitstrip.com/en/2017/05/02/telling-our-story/" target="_blank" rel="external">Telling our story</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;１コマ目：&lt;/strong&gt;&lt;br&gt;「ねえ、叔父さん、僕ちょっと分からないことがあるんだけど、、、」&lt;br&gt;「何が分からないんだい？」&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;２コマ目：&lt;/strong&gt;&lt;br&gt;「どうしてハードディスクはA:からじゃなくて、C:から始
      
    
    </summary>
    
    
      <category term="comic" scheme="https://so-matome.net/tags/comic/"/>
    
  </entry>
  
  <entry>
    <title>ループ内のJavaScriptクロージャ - 簡単な実用的な例 [Javascript]</title>
    <link href="https://so-matome.net/2017/10/24/javascript-closure-inside-loops-simple-practical-example/"/>
    <id>https://so-matome.net/2017/10/24/javascript-closure-inside-loops-simple-practical-example/</id>
    <published>2017-10-24T04:06:51.000Z</published>
    <updated>2017-10-24T04:06:51.695Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> funcs = [];</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;      <span class="comment">// 関数を３つ作る</span></div><div class="line">  funcs[i] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;          <span class="comment">// それらをfuncsに入れる</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"My value: "</span> + i); <span class="comment">// 各関数はその値を記録する</span></div><div class="line">  &#125;;</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</div><div class="line">  funcs[j]();                      <span class="comment">// 走らせる</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>でもこれは以下を出力してしまう：</p><blockquote><p>My value: 3<br>My value: 3<br>My value: 3</p></blockquote><p>でも僕が欲しいのは</p><blockquote><p>My value: 0<br>My value: 1<br>My value: 2</p></blockquote><hr><p>同じ問題は、関数の実行がイベントリスナーを使用することによって遅延してしまう時にも起こる：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> buttons = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"button"</span>);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; buttons.length; i++) &#123;          <span class="comment">// let's create 3 functions</span></div><div class="line">  buttons[i].addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// as event listeners</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"My value: "</span> + i);                  <span class="comment">// each should log its value.</span></div><div class="line">  &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>0<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>1<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure><p>この基本的な問題の解決策ってある？？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/9021/nickf" target="_blank" rel="external">nickf</a> | 質問日時： 2009年4月15日 6:06 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>えっと、問題は、それぞれの匿名の関数の中にある変数<code>i</code>が関数の外部にある同じ変数にバインドされてるってことだよ。</p><p>君がしたいのは、各関数内の変数を独立した変数にバインドすることだと思う。そうすれば関数の外で値が変わらない：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> funcs = [];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createfunc</span>(<span class="params">i</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(<span class="string">"My value: "</span> + i); &#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</div><div class="line">    funcs[i] = createfunc(i);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</div><div class="line">    funcs[j]();                        <span class="comment">// 表示させてみる</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>JavaScriptにはブロックスコープがないので（関数スコープのみ）、新しい関数の中で関数の作成をラップすると、<br><code>&quot;i&quot;</code>は君が意図した通りになるように気をつけないといけない。</p><hr><p><strong> Update：</strong><br><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> someArray = [ <span class="comment">/* なんでもいい */</span> ];</div><div class="line"><span class="comment">// ...</span></div><div class="line">someArray.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">arrayElement</span>) </span>&#123;</div><div class="line">  <span class="comment">// ...この要素のコードコードコード</span></div><div class="line">  someAsynchronousFunction(arrayElement, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    arrayElement.doSomething();</div><div class="line">  &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p><p>つまり、<code>.forEach</code>ループと一緒に使われたコールバック関数の各呼び出しが独自のクロージャになる。そのハンドラに渡されたパラメータは、その特定の反復ステップに固有の配列要素になってる。非同期コールバックで使用されている場合、それはその反復の他のステップで確立された他のコールバックどれとも衝突しない。</p><p>もしjQueryで作業している場合なら、<code>$ .each()</code>関数で同じようなことができるよ。</p><p><strong>Update 2：</strong> JavaScriptの最新バージョンであるECMAScript 6(ES6)は、多くのブラウザとバックエンドシステムで実装され始めてる。古いシステムで新しい機能を使用できるようにES6からES5に変換する<a href="http://babeljs.io/" target="_blank" rel="external">Babel</a>のようなトランスパイライザーとかももあります。</p><p>ES6では、<code>var</code>ベースの変数とは違うスコープを持つ新しい <code>let</code>と<code>const</code>キーワードが導入されてる。たとえば、 <code>let</code>ベースのインデックスを持つループでは、それぞれループを通る反復は新しい値「i」を持ち、各値はループの内側にスコープがあるので、君のコードは期待どおりに動作するはず。いろんなリソースがあると思うけど、僕は<a href="http://www.2ality.com/2015/02/es6-scoping.html" target="_blank" rel="external">2alityのブロックスコープに関する記事</a>の素晴らしいソースとしておすすめするよ。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</div><div class="line">    funcs[i] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"My value: "</span> + i);</div><div class="line">    &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>でも注意すべきはIE9-IE11とEdge14以前のEdgeは、<code>let</code>をサポートしてるけど、上記の間違いをしてしまう(毎回新しい <code>i</code>を作成しないので、上で書いたどの関数も<code>var</code>を使用した場合と同様に「3」を出力する)。Edge 14では最終的にそれは解決してる。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/86463/harto" target="_blank" rel="external">harto</a> | 回答日時： 2009年4月15日 6:18 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>最初にループの外側で関数を作り、その結果をループ内でバインドさせる方がパフォーマンスがいいと思うよ。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params">x</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'My value: '</span> + x);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> funcs = [];</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</div><div class="line">    funcs[i] = log.bind(<span class="keyword">this</span>, i);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</div><div class="line">    funcs[j]();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1408717/aust" target="_blank" rel="external">Aust</a> | 回答日時： 2013年10月11日 16:41 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/750486/javascript-closure-inside-loops-simple-practical-example/" target="_blank" rel="external">JavaScript closure inside loops – simple practical example</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; funcs = [];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; i++) &amp;#123;      &lt;span class=&quot;comment&quot;&gt;// 関数を３つ作る&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  funcs[i] = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;          &lt;span class=&quot;comment&quot;&gt;// それらをfuncsに入れる&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;My value: &quot;&lt;/span&gt; + i); &lt;span class=&quot;comment&quot;&gt;// 各関数はその値を記録する&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; j++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  funcs[j]();                      &lt;span class=&quot;comment&quot;&gt;// 走らせる&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;でもこれは以下を出力してしまう：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My value: 3&lt;br&gt;My value: 3&lt;br&gt;My value: 3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;でも僕が欲しいのは&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My value: 0&lt;br&gt;My value: 1&lt;br&gt;My value: 2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;同じ問題は、関数の実行がイベントリスナーを使用することによって遅延してしまう時にも起こる：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; buttons = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; buttons.length; i++) &amp;#123;          &lt;span class=&quot;comment&quot;&gt;// let&#39;s create 3 functions&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  buttons[i].addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;// as event listeners&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;My value: &quot;&lt;/span&gt; + i);                  &lt;span class=&quot;comment&quot;&gt;// each should log its value.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;この基本的な問題の解決策ってある？？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/9021/nickf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nickf&lt;/a&gt; | 質問日時： 2009年4月15日 6:06 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="loops" scheme="https://so-matome.net/tags/loops/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
      <category term="closures" scheme="https://so-matome.net/tags/closures/"/>
    
  </entry>
  
  <entry>
    <title>プログラマーが見るべき20のTEDトーク(２)　 怠け者の達人の頭の中 [Video]</title>
    <link href="https://so-matome.net/2017/10/21/ted-talks-programming-everyone-must-watch-2/"/>
    <id>https://so-matome.net/2017/10/21/ted-talks-programming-everyone-must-watch-2/</id>
    <published>2017-10-21T08:00:00.000Z</published>
    <updated>2017-10-21T09:16:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tim-Urban-怠け者の達人の頭の中"><a href="#Tim-Urban-怠け者の達人の頭の中" class="headerlink" title="Tim Urban: 怠け者の達人の頭の中"></a>Tim Urban: 怠け者の達人の頭の中</h2><p><a href="http://www.makeuseof.com/tag/ted-talks-programming/" target="_blank" rel="external">MakeUseOf</a>より、プログラマーが見ておくべきTEDトークが話題になっていたのでご紹介します。内容は、プログラミング方法を学ぶためではなく、プログラマーになる方法を学ぶことにフォーカスが置かれ、考え方を知ることを重視した内容になっています。<br>第２段は「Tim Urban: 怠け者の達人の頭の中」。以下のように紹介されています：</p><blockquote><p>プログラマとして、あなたはいろんな事を先延ばししたいと思うでしょう。それも<strong>たくさん</strong>。<br>この14分間のTEDトークは、これと最悪の状況で苦労し、それを克服することができた人による話です。 彼は、彼の先延ばしにつながったパターンとその解決策を提示します。</p></blockquote><iframe width="560" height="315" src="https://www.youtube.com/embed/arj7oStGLkU?cc_load_policy=1&cc_lang_pref=ja" frameborder="0" allowfullscreen></iframe><p>動画は日本語字幕を表示してありますが、TEDトークの日本語訳には意訳している部分もあるため、英語字幕（以下）をフォローするのをお薦めします：</p><a id="more"></a><div id="" style="overflow-y: scroll; height:400px;"><br>So in college, I was a government major, which means I had to write a lot of papers. Now, when a normal student writes a paper, they might spread the work out a little like this. So, you know –<br><br>(Laughter)<br><br>you get started maybe a little slowly, but you get enough done in the first week that, with some heavier days later on, everything gets done, things stay civil.<br><br>(Laughter)<br><br>And I would want to do that like that. That would be the plan. I would have it all ready to go, but then, actually, the paper would come along, and then I would kind of do this.<br><br>(Laughter)<br><br>And that would happen every single paper.<br><br>But then came my 90-page senior thesis, a paper you’re supposed to spend a year on. And I knew for a paper like that, my normal work flow was not an option. It was way too big a project. So I planned things out, and I decided I kind of had to go something like this. This is how the year would go. So I’d start off light, and I’d bump it up in the middle months, and then at the end, I would kick it up into high gear just like a little staircase. How hard could it be to walk up the stairs? No big deal, right?<br><br>But then, the funniest thing happened. Those first few months? They came and went, and I couldn’t quite do stuff. So we had an awesome new revised plan.<br><br>(Laughter)<br><br>And then –<br><br>(Laughter)<br><br>But then those middle months actually went by, and I didn’t really write words, and so we were here. And then two months turned into one month, which turned into two weeks. And one day I woke up with three days until the deadline, still not having written a word, and so I did the only thing I could: I wrote 90 pages over 72 hours, pulling not one but two all-nighters – humans are not supposed to pull two all-nighters – sprinted across campus, dove in slow motion, and got it in just at the deadline.<br><br>I thought that was the end of everything. But a week later I get a call, and it’s the school. And they say, “Is this Tim Urban?” And I say, “Yeah.” And they say, “We need to talk about your thesis.” And I say, “OK.” And they say, “It’s the best one we’ve ever seen.”<br><br>(Laughter)<br><br>(Applause)<br><br>That did not happen.<br><br>(Laughter)<br><br>It was a very, very bad thesis.<br><br>(Laughter)<br><br>I just wanted to enjoy that one moment when all of you thought, “This guy is amazing!”<br><br>(Laughter)<br><br>No, no, it was very, very bad. Anyway, today I’m a writer-blogger guy. I write the blog Wait But Why. And a couple of years ago, I decided to write about procrastination. My behavior has always perplexed the non-procrastinators around me, and I wanted to explain to the non-procrastinators of the world what goes on in the heads of procrastinators, and why we are the way we are. Now, I had a hypothesis that the brains of procrastinators were actually different than the brains of other people. And to test this, I found an MRI lab that actually let me scan both my brain and the brain of a proven non-procrastinator, so I could compare them. I actually brought them here to show you today. I want you to take a look carefully to see if you can notice a difference. I know that if you’re not a trained brain expert, it’s not that obvious, but just take a look, OK? So here’s the brain of a non-procrastinator.<br><br>(Laughter)<br><br>Now … here’s my brain.<br><br>(Laughter)<br><br>There is a difference. Both brains have a Rational Decision-Maker in them, but the procrastinator’s brain also has an Instant Gratification Monkey. Now, what does this mean for the procrastinator? Well, it means everything’s fine until this happens.<br><br>[This is a perfect time to get some work done.] [Nope!]<br><br>So the Rational Decision-Maker will make the rational decision to do something productive, but the Monkey doesn’t like that plan, so he actually takes the wheel, and he says, “Actually, let’s read the entire Wikipedia page of the Nancy Kerrigan/ Tonya Harding scandal, because I just remembered that that happened.<br><br>(Laughter)<br><br>Then –<br><br>(Laughter)<br><br>Then we’re going to go over to the fridge, to see if there’s anything new in there since 10 minutes ago. After that, we’re going to go on a YouTube spiral that starts with videos of Richard Feynman talking about magnets and ends much, much later with us watching interviews with Justin Bieber’s mom.<br><br>(Laughter)<br><br>“All of that’s going to take a while, so we’re not going to really have room on the schedule for any work today. Sorry!”<br><br>(Sigh)<br><br>Now, what is going on here? The Instant Gratification Monkey does not seem like a guy you want behind the wheel. He lives entirely in the present moment. He has no memory of the past, no knowledge of the future, and he only cares about two things: easy and fun.<br><br>Now, in the animal world, that works fine. If you’re a dog and you spend your whole life doing nothing other than easy and fun things, you’re a huge success!<br><br>(Laughter)<br><br>And to the Monkey, humans are just another animal species. You have to keep well-slept, well-fed and propagating into the next generation, which in tribal times might have worked OK. But, if you haven’t noticed, now we’re not in tribal times. We’re in an advanced civilization, and the Monkey does not know what that is. Which is why we have another guy in our brain, the Rational Decision-Maker, who gives us the ability to do things no other animal can do. We can visualize the future. We can see the big picture. We can make long-term plans. And he wants to take all of that into account. And he wants to just have us do whatever makes sense to be doing right now. Now, sometimes it makes sense to be doing things that are easy and fun, like when you’re having dinner or going to bed or enjoying well-earned leisure time. That’s why there’s an overlap. Sometimes they agree. But other times, it makes much more sense to be doing things that are harder and less pleasant, for the sake of the big picture. And that’s when we have a conflict. And for the procrastinator, that conflict tends to end a certain way every time, leaving him spending a lot of time in this orange zone, an easy and fun place that’s entirely out of the Makes Sense circle. I call it the Dark Playground.<br><br>(Laughter)<br><br>Now, the Dark Playground is a place that all of you procrastinators out there know very well. It’s where leisure activities happen at times when leisure activities are not supposed to be happening. The fun you have in the Dark Playground isn’t actually fun, because it’s completely unearned, and the air is filled with guilt, dread, anxiety, self-hatred – all of those good procrastinator feelings. And the question is, in this situation, with the Monkey behind the wheel, how does the procrastinator ever get himself over here to this blue zone, a less pleasant place, but where really important things happen?<br><br>Well, turns out the procrastinator has a guardian angel, someone who’s always looking down on him and watching over him in his darkest moments – someone called the Panic Monster.<br><br>(Laughter)<br><br>Now, the Panic Monster is dormant most of the time, but he suddenly wakes up anytime a deadline gets too close or there’s danger of public embarrassment, a career disaster or some other scary consequence. And importantly, he’s the only thing the Monkey is terrified of. Now, he became very relevant in my life pretty recently, because the people of TED reached out to me about six months ago and invited me to do a TED Talk.<br><br>(Laughter)<br><br>Now, of course, I said yes. It’s always been a dream of mine to have done a TED Talk in the past.<br><br>(Laughter)<br><br>(Applause) But in the middle of all this excitement, the Rational Decision-Maker seemed to have something else on his mind. He was saying, “Are we clear on what we just accepted? Do we get what’s going to be now happening one day in the future? We need to sit down and work on this right now.” And the Monkey said, “Totally agree, but let’s just open Google Earth and zoom in to the bottom of India, like 200 feet above the ground, and scroll up for two and a half hours til we get to the top of the country, so we can get a better feel for India.”<br><br>(Laughter)<br><br>So that’s what we did that day.<br><br>(Laughter)<br><br>As six months turned into four and then two and then one, the people of TED decided to release the speakers. And I opened up the website, and there was my face staring right back at me. And guess who woke up?<br><br>(Laughter)<br><br>So the Panic Monster starts losing his mind, and a few seconds later, the whole system’s in mayhem.<br><br>(Laughter)<br><br>And the Monkey – remember, he’s terrified of the Panic Monster – boom, he’s up the tree! And finally, finally, the Rational Decision-Maker can take the wheel and I can start working on the talk.<br><br>Now, the Panic Monster explains all kinds of pretty insane procrastinator behavior, like how someone like me could spend two weeks unable to start the opening sentence of a paper, and then miraculously find the unbelievable work ethic to stay up all night and write eight pages. And this entire situation, with the three characters – this is the procrastinator’s system. It’s not pretty, but in the end, it works. This is what I decided to write about on the blog a couple of years ago.<br><br>When I did, I was amazed by the response. Literally thousands of emails came in, from all different kinds of people from all over the world, doing all different kinds of things. These are people who were nurses, bankers, painters, engineers and lots and lots of PhD students.<br><br>(Laughter)<br><br>And they were all writing, saying the same thing: “I have this problem too.” But what struck me was the contrast between the light tone of the post and the heaviness of these emails. These people were writing with intense frustration about what procrastination had done to their lives, about what this Monkey had done to them. And I thought about this, and I said, well, if the procrastinator’s system works, then what’s going on? Why are all of these people in such a dark place?<br><br>Well, it turns out that there’s two kinds of procrastination. Everything I’ve talked about today, the examples I’ve given, they all have deadlines. And when there’s deadlines, the effects of procrastination are contained to the short term because the Panic Monster gets involved. But there’s a second kind of procrastination that happens in situations when there is no deadline. So if you wanted a career where you’re a self-starter – something in the arts, something entrepreneurial – there’s no deadlines on those things at first, because nothing’s happening, not until you’ve gone out and done the hard work to get momentum, get things going. There’s also all kinds of important things outside of your career that don’t involve any deadlines, like seeing your family or exercising and taking care of your health, working on your relationship or getting out of a relationship that isn’t working.<br><br>Now if the procrastinator’s only mechanism of doing these hard things is the Panic Monster, that’s a problem, because in all of these non-deadline situations, the Panic Monster doesn’t show up. He has nothing to wake up for, so the effects of procrastination, they’re not contained; they just extend outward forever. And it’s this long-term kind of procrastination that’s much less visible and much less talked about than the funnier, short-term deadline-based kind. It’s usually suffered quietly and privately. And it can be the source of a huge amount of long-term unhappiness, and regrets. And I thought, that’s why those people are emailing, and that’s why they’re in such a bad place. It’s not that they’re cramming for some project. It’s that long-term procrastination has made them feel like a spectator, at times, in their own lives. The frustration is not that they couldn’t achieve their dreams; it’s that they weren’t even able to start chasing them.<br><br>So I read these emails and I had a little bit of an epiphany – that I don’t think non-procrastinators exist. That’s right – I think all of you are procrastinators. Now, you might not all be a mess, like some of us,<br><br>(Laughter)<br><br>and some of you may have a healthy relationship with deadlines, but remember: the Monkey’s sneakiest trick is when the deadlines aren’t there.<br><br>Now, I want to show you one last thing. I call this a Life Calendar. That’s one box for every week of a 90-year life. That’s not that many boxes, especially since we’ve already used a bunch of those. So I think we need to all take a long, hard look at that calendar. We need to think about what we’re really procrastinating on, because everyone is procrastinating on something in life. We need to stay aware of the Instant Gratification Monkey. That’s a job for all of us. And because there’s not that many boxes on there, it’s a job that should probably start today.<br><br>Well, maybe not today, but …<br><br>(Laughter)<br><br>You know. Sometime soon.<br><br>Thank you.<br><br>(Applause)<br></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Tim-Urban-怠け者の達人の頭の中&quot;&gt;&lt;a href=&quot;#Tim-Urban-怠け者の達人の頭の中&quot; class=&quot;headerlink&quot; title=&quot;Tim Urban: 怠け者の達人の頭の中&quot;&gt;&lt;/a&gt;Tim Urban: 怠け者の達人の頭の中&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.makeuseof.com/tag/ted-talks-programming/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MakeUseOf&lt;/a&gt;より、プログラマーが見ておくべきTEDトークが話題になっていたのでご紹介します。内容は、プログラミング方法を学ぶためではなく、プログラマーになる方法を学ぶことにフォーカスが置かれ、考え方を知ることを重視した内容になっています。&lt;br&gt;第２段は「Tim Urban: 怠け者の達人の頭の中」。以下のように紹介されています：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;プログラマとして、あなたはいろんな事を先延ばししたいと思うでしょう。それも&lt;strong&gt;たくさん&lt;/strong&gt;。&lt;br&gt;この14分間のTEDトークは、これと最悪の状況で苦労し、それを克服することができた人による話です。 彼は、彼の先延ばしにつながったパターンとその解決策を提示します。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/arj7oStGLkU?cc_load_policy=1&amp;cc_lang_pref=ja&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;動画は日本語字幕を表示してありますが、TEDトークの日本語訳には意訳している部分もあるため、英語字幕（以下）をフォローするのをお薦めします：&lt;/p&gt;
    
    </summary>
    
    
      <category term="video" scheme="https://so-matome.net/tags/video/"/>
    
      <category term="english" scheme="https://so-matome.net/tags/english/"/>
    
      <category term="TED" scheme="https://so-matome.net/tags/TED/"/>
    
  </entry>
  
  <entry>
    <title>どうしてdocument.writeは「Bad practice（悪い習慣）」って考えられてるの？ [Javascript]</title>
    <link href="https://so-matome.net/2017/10/20/why-is-document-write-considered-a-bad-practice/"/>
    <id>https://so-matome.net/2017/10/20/why-is-document-write-considered-a-bad-practice/</id>
    <published>2017-10-20T08:00:01.000Z</published>
    <updated>2017-10-21T09:48:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><a href="https://developer.mozilla.org/en-US/docs/DOM/document.write" target="_blank" rel="external"><code>document.write</code></a>がbad practice(悪い習慣)とみなされてるのは知ってる。で、僕が望んでいるのはその理由を集めて、なぜ解析コードの実装に <code>document.write</code>を使用すべきじゃないのか第三者のベンダーに提出したいんだ。</p><p><code>document.write</code>を悪い習慣として主張するあなたの理由を教えて？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1965/flyswat" target="_blank" rel="external">FlySwat</a> | 質問日時： 2009年4月29日 15:18 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>深刻な問題をまず初めにいくつか：</p><ul><li>document.write(以後DW)はXHTMLでは動作しない</li><li>ページの読み込みが終了した後に実行されるDWは、ページを上書きしたり、新しいページを書き出したり、また動作しないこともある</li><li>DWはエンカウンターした場所で実行されます：つまり、あるノードポイントにインジェクトしたりはできない</li><li>DWは実質的にシリアル化されたテキストを書き出すので、コンセプト的にDOMが動作する方法じゃない。そしてバグを作成するのも簡単だ(.innerHTMLにも同じ問題がある)</li></ul><p>安全でDOMフレンドリーな操作は、<a href="https://developer.mozilla.org/en-US/docs/Web/API/Document" target="_blank" rel="external">DOM操作メソッド</a>を参照。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/13018/annakata" target="_blank" rel="external">annakata</a> | 回答日時： 2009年4月29日 15:36 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>実際に <code>document.write</code>自体は何も問題は無いよ。問題はそれを誤用するのは本当に簡単だって事。</p><p>Googleアナリティクスとかの分析コードを提供するベンダーに関して言えば、彼らは実際にそんな誤用を招くスニペット（コードの断片）を配布する元になってる。なぜなら：</p><p>  1.スクリプトを小さく保てる<br>  2.彼らは、すでに確立されているオンロードイベントをオーバーライドすることや、オンロードイベントを安全に追加するために必要な抽象化を心配する必要がない<br>  3.(<code>document.write</code>は)非常に互換性があります</p><p>ドキュメントがロードされた後でそれを使用しようとしない限り、僕は個人的には<code>document.write</code>は本質的に悪だとは思わないなあ。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/8815/peter-bailey" target="_blank" rel="external">Peter Bailey</a> | 回答日時： 2009年4月29日 15:26 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p><code>document.write</code>のもう一つの正当な使用は、HTML5 Boilerplate<br><a href="https://github.com/h5bp/html5-boilerplate/blob/master/src/index.html" target="_blank" rel="external">index.html</a><br>例。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&lt;!-- GoogleのCDNのjQueryをプロトコル相対URLで取得。オフラインの場合はローカルにフォールバックする --&gt;</div><div class="line">&lt;script src=<span class="string">"//ajax.googleapis.com/ajax/libs/jquery/1.6.3/jquery.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script&gt;<span class="built_in">window</span>.jQuery || <span class="built_in">document</span>.write(<span class="string">'&lt;script src="js/libs/jquery-1.6.3.min.js"&gt;&lt;\/script&gt;'</span>)&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure><p>僕は、<a href="https://github.com/douglascrockford/JSON-js" target="_blank" rel="external">json2.js</a>JSON parse/stringify<br>polyfill(<a href="http://caniuse.com/#search=JSON" target="_blank" rel="external">IE7以下で必要</a>)でも同じようなテクニックを使ってるのを見たよ。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&lt;script&gt;<span class="built_in">window</span>.JSON || <span class="built_in">document</span>.write(<span class="string">'&lt;script src="json2.js"&gt;&lt;\/script&gt;'</span>)&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/22514/kevin-hakanson" target="_blank" rel="external">Kevin Hakanson</a> | 回答日時： 2011年9月8日 20:49 </div><br></p><hr><hr><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><p><strong>利点：</strong></p><ul><li>外部(ホスト/ドメイン)のスクリプトからインラインコンテンツを埋め込む最も簡単な方法。</li><li>frameまたはiframe内のコンテンツ全体を上書きすることができる。最近のAjax技術が広く普及する前に(1998年〜2002年)、僕はこの技術をメニュー/ナビゲーション用に多用してたよ。</li></ul><p><strong>欠点：</strong></p><ul><li>これは、外部スクリプトがロードされるまでレンダリングエンジンをシリアライズするようにシリアル化します。内部スクリプトよりもはるかに時間がかかる。</li><li>通常、スクリプトがコンテンツ内に配置されるように使用されるけど、これはあんまり良い使い方じゃない。</li></ul><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/43906/tracker1" target="_blank" rel="external">Tracker1</a> | 回答日時： 2009年4月29日 16:19 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/802854/why-is-document-write-considered-a-bad-practice" target="_blank" rel="external">Why is document.write considered a “bad practice”?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/document.write&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;document.write&lt;/code&gt;&lt;/a&gt;がbad practice(悪い習慣)とみなされてるのは知ってる。で、僕が望んでいるのはその理由を集めて、なぜ解析コードの実装に &lt;code&gt;document.write&lt;/code&gt;を使用すべきじゃないのか第三者のベンダーに提出したいんだ。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;document.write&lt;/code&gt;を悪い習慣として主張するあなたの理由を教えて？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/1965/flyswat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FlySwat&lt;/a&gt; | 質問日時： 2009年4月29日 15:18 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>なぜ&quot;for ... in&quot;を使って配列の反復をするはダメなの？ [Javascript]</title>
    <link href="https://so-matome.net/2017/10/19/why-is-using-for-in-with-array-iteration-a-bad-idea/"/>
    <id>https://so-matome.net/2017/10/19/why-is-using-for-in-with-array-iteration-a-bad-idea/</id>
    <published>2017-10-19T08:00:02.000Z</published>
    <updated>2017-10-21T09:47:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>JavaScriptの配列で <code>for ... in</code>を使わないように言われたんだけど、何故なの？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/60102/lyricalssh" target="_blank" rel="external">lYriCAlsSH</a> | 質問日時： 2009年2月1日 9:46 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>その理由はこう。まずこんなコンストラクトを考えてみる：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> a = []; <span class="comment">//新しい空の配列を作成</span></div><div class="line">a[<span class="number">5</span>] = <span class="number">5</span>;   <span class="comment">//配列のサイズを変更する完全に合法なJavaScript</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</div><div class="line">    <span class="comment">//誰もがわかってると思うけど、0から5までの数値インデックスをループする。</span></div><div class="line">    <span class="built_in">console</span>.log(a[i]);</div><div class="line">&#125;</div><div class="line"><span class="comment">/* これは以下を出力するはず</span></div><div class="line"><span class="comment">   undefined</span></div><div class="line"><span class="comment">   undefined</span></div><div class="line"><span class="comment">   undefined</span></div><div class="line"><span class="comment">   undefined</span></div><div class="line"><span class="comment">   undefined</span></div><div class="line"><span class="comment">   5</span></div><div class="line"><span class="comment">*/</span></div></pre></td></tr></table></figure><p>これはときどき他とは全く異なる場合がある：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [];</div><div class="line">a[<span class="number">5</span>] = <span class="number">5</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">in</span> a) &#123;</div><div class="line">    <span class="comment">//明示的に設定されたインデックス "5"のみを表示し、0〜4を無視</span></div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line">&#125;</div><div class="line"><span class="comment">/* 以下が出力するはず</span></div><div class="line"><span class="comment">   5</span></div><div class="line"><span class="comment">*/</span></div></pre></td></tr></table></figure><p><a href="http://en.wikipedia.org/wiki/JavaScript" target="_blank" rel="external">JavaScript</a>ライブラリは時々こんなことをして、作成する配列に影響を与えるのに注意：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// JavaScriptライブラリのどこかに...</span></div><div class="line"><span class="built_in">Array</span>.prototype.foo = <span class="number">1</span>;</div><div class="line"><span class="comment">//今、下のコードが何をするのか分からないと思う。</span></div><div class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">in</span> a)&#123;</div><div class="line">    <span class="comment">// fooはすべての配列の一部で、</span></div><div class="line">    <span class="comment">//ここに 'x'の値として表示される。</span></div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line">&#125;</div><div class="line"><span class="comment">/* 以下が出力するはず:</span></div><div class="line"><span class="comment">   0</span></div><div class="line"><span class="comment">   1</span></div><div class="line"><span class="comment">   2</span></div><div class="line"><span class="comment">   3</span></div><div class="line"><span class="comment">   4</span></div><div class="line"><span class="comment">   foo</span></div><div class="line"><span class="comment">*/</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/43089/triptych" target="_blank" rel="external">Triptych</a> | 回答日時： 2009年2月1日 10:08 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/500504/why-is-using-for-in-with-array-iteration-a-bad-idea" target="_blank" rel="external">Why is using “for…in” with array iteration a bad idea?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;JavaScriptの配列で &lt;code&gt;for ... in&lt;/code&gt;を使わないように言われたんだけど、何故なの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/60102/lyricalssh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lYriCAlsSH&lt;/a&gt; | 質問日時： 2009年2月1日 9:46 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
      <category term="arrays" scheme="https://so-matome.net/tags/arrays/"/>
    
      <category term="for-loop" scheme="https://so-matome.net/tags/for-loop/"/>
    
  </entry>
  
  <entry>
    <title>Pandasのデータを標準化する方法 [Python]</title>
    <link href="https://so-matome.net/2017/10/18/normalize-data-in-pandas/"/>
    <id>https://so-matome.net/2017/10/18/normalize-data-in-pandas/</id>
    <published>2017-10-18T08:00:02.000Z</published>
    <updated>2017-10-21T09:47:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>Pandasのデータフレームがあるとする。このデータフレームの列ごとの平均を計算するのは簡単：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">df.apply(average)</div></pre></td></tr></table></figure><p>で、この列ごとの<code>max(col) - min (col)</code>を計算するのも簡単：<br><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">df.apply(max) - df.apply(min)</div></pre></td></tr></table></figure></p><p>で、この列ごとの差を平均で割りたいんだけどどうやったらいいの？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/218900/jason" target="_blank" rel="external">jason</a> | 質問日時： 2012年9月21日 7:04 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">In [92]: df</div><div class="line">Out[92]:</div><div class="line">           a         b          c         d</div><div class="line">A  -0.488816  0.863769   4.325608 -4.721202</div><div class="line">B -11.937097  2.993993 -12.916784 -1.086236</div><div class="line">C  -5.569493  4.672679  -2.168464 -9.315900</div><div class="line">D   8.892368  0.932785   4.535396  0.598124</div><div class="line"></div><div class="line">In [93]: df_norm = (df - df.mean()) / (df.max() - df.min())</div><div class="line"></div><div class="line">In [94]: df_norm</div><div class="line">Out[94]:</div><div class="line">          a         b         c         d</div><div class="line">A  0.085789 -0.394348  0.337016 -0.109935</div><div class="line">B -0.463830  0.164926 -0.650963  0.256714</div><div class="line">C -0.158129  0.605652 -0.035090 -0.573389</div><div class="line">D  0.536170 -0.376229  0.349037  0.426611</div><div class="line"></div><div class="line">In [95]: df_norm.mean()</div><div class="line">Out[95]:</div><div class="line">a   -2.081668e-17</div><div class="line">b    4.857226e-17</div><div class="line">c    1.734723e-17</div><div class="line">d   -1.040834e-17</div><div class="line"></div><div class="line">In [96]: df_norm.max() - df_norm.min()</div><div class="line">Out[96]:</div><div class="line">a    1</div><div class="line">b    1</div><div class="line">c    1</div><div class="line">d    1</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1548051/wouter-overmeire" target="_blank" rel="external">Wouter Overmeire</a> | 回答日時： 2012年9月21日 7:14 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p><code>sklearn</code>ライブラリ使ってもいいのであれば、<a href="https://web.archive.org/web/20160520170701/http://chrisalbon.com:80/python/pandas_normalize_column.html" target="_blank" rel="external">このブログの方法</a>がいいと思う：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing</div><div class="line"></div><div class="line">data = &#123;<span class="string">'score'</span>: [<span class="number">234</span>,<span class="number">24</span>,<span class="number">14</span>,<span class="number">27</span>,<span class="number">-74</span>,<span class="number">46</span>,<span class="number">73</span>,<span class="number">-18</span>,<span class="number">59</span>,<span class="number">160</span>]&#125;</div><div class="line">df = pd.DataFrame(data)</div><div class="line">df</div><div class="line"></div><div class="line">min_max_scaler = preprocessing.MinMaxScaler()</div><div class="line">np_scaled = min_max_scaler.fit_transform(df)</div><div class="line">df_normalized = pd.DataFrame(np_scaled)</div><div class="line">df_normalized</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/309830/davidshen84" target="_blank" rel="external">davidshen84</a> | 回答日時： 2016年5月13日 0:48 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p><code>apply</code>を使えばいいよ。よりキレイだと思う：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"></div><div class="line">np.random.seed(<span class="number">1</span>)</div><div class="line"></div><div class="line">df = pd.DataFrame(np.random.randn(<span class="number">4</span>,<span class="number">4</span>)* <span class="number">4</span> + <span class="number">3</span>)</div><div class="line"></div><div class="line">          <span class="number">0</span>         <span class="number">1</span>         <span class="number">2</span>         <span class="number">3</span></div><div class="line"><span class="number">0</span>  <span class="number">9.497381</span>  <span class="number">0.552974</span>  <span class="number">0.887313</span> <span class="number">-1.291874</span></div><div class="line"><span class="number">1</span>  <span class="number">6.461631</span> <span class="number">-6.206155</span>  <span class="number">9.979247</span> <span class="number">-0.044828</span></div><div class="line"><span class="number">2</span>  <span class="number">4.276156</span>  <span class="number">2.002518</span>  <span class="number">8.848432</span> <span class="number">-5.240563</span></div><div class="line"><span class="number">3</span>  <span class="number">1.710331</span>  <span class="number">1.463783</span>  <span class="number">7.535078</span> <span class="number">-1.399565</span></div><div class="line"></div><div class="line">df.apply(<span class="keyword">lambda</span> x: (x - np.mean(x)) / (np.max(x) - np.min(x)))</div><div class="line"></div><div class="line">          <span class="number">0</span>         <span class="number">1</span>         <span class="number">2</span>         <span class="number">3</span></div><div class="line"><span class="number">0</span>  <span class="number">0.515087</span>  <span class="number">0.133967</span> <span class="number">-0.651699</span>  <span class="number">0.135175</span></div><div class="line"><span class="number">1</span>  <span class="number">0.125241</span> <span class="number">-0.689446</span>  <span class="number">0.348301</span>  <span class="number">0.375188</span></div><div class="line"><span class="number">2</span> <span class="number">-0.155414</span>  <span class="number">0.310554</span>  <span class="number">0.223925</span> <span class="number">-0.624812</span></div><div class="line"><span class="number">3</span> <span class="number">-0.484913</span>  <span class="number">0.244924</span>  <span class="number">0.079473</span>  <span class="number">0.114448</span></div></pre></td></tr></table></figure><p>それか、適切な列を選択すると、<code>groupby</code>で上手くいくと思う：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">df[&apos;grp&apos;] = [&apos;A&apos;, &apos;A&apos;, &apos;B&apos;, &apos;B&apos;]</div><div class="line"></div><div class="line">          0         1         2         3 grp</div><div class="line">0  9.497381  0.552974  0.887313 -1.291874   A</div><div class="line">1  6.461631 -6.206155  9.979247 -0.044828   A</div><div class="line">2  4.276156  2.002518  8.848432 -5.240563   B</div><div class="line">3  1.710331  1.463783  7.535078 -1.399565   B</div><div class="line"></div><div class="line">df.groupby([&apos;grp&apos;])[[0,1,2,3]].apply(lambda x: (x - np.mean(x)) / (np.max(x) - np.min(x)))</div><div class="line"></div><div class="line">     0    1    2    3</div><div class="line">0  0.5  0.5 -0.5 -0.5</div><div class="line">1 -0.5 -0.5  0.5  0.5</div><div class="line">2  0.5  0.5  0.5 -0.5</div><div class="line">3 -0.5 -0.5 -0.5  0.5</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/210945/naught101" target="_blank" rel="external">naught101</a> | 回答日時： 2015年10月21日 3:10 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/12525722/normalize-data-in-pandas" target="_blank" rel="external">Normalize data in pandas</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;Pandasのデータフレームがあるとする。このデータフレームの列ごとの平均を計算するのは簡単：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;df.apply(average)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;で、この列ごとの&lt;code&gt;max(col) - min (col)&lt;/code&gt;を計算するのも簡単：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;df.apply(max) - df.apply(min)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;で、この列ごとの差を平均で割りたいんだけどどうやったらいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/218900/jason&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jason&lt;/a&gt; | 質問日時： 2012年9月21日 7:04 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="datasci" scheme="https://so-matome.net/tags/datasci/"/>
    
      <category term="python" scheme="https://so-matome.net/tags/python/"/>
    
      <category term="pandas" scheme="https://so-matome.net/tags/pandas/"/>
    
      <category term="numpy" scheme="https://so-matome.net/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>値を指定してリストから要素を削除する簡単な方法ってある？ [Python]</title>
    <link href="https://so-matome.net/2017/10/18/is-there-a-simple-way-to-delete-a-list-element-by-value/"/>
    <id>https://so-matome.net/2017/10/18/is-there-a-simple-way-to-delete-a-list-element-by-value/</id>
    <published>2017-10-18T08:00:01.000Z</published>
    <updated>2017-10-21T09:46:59.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">b=a.index(<span class="number">6</span>)</div><div class="line"><span class="keyword">del</span> a[b]</div><div class="line"><span class="keyword">print</span> a</div></pre></td></tr></table></figure><p>これは次みたいなエラーを吐く：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"D:\zjm_code\a.py"</span>, line <span class="number">6</span>, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    b=a.index(<span class="number">6</span>)</div><div class="line">ValueError: list.index(x): x <span class="keyword">not</span> <span class="keyword">in</span> list</div></pre></td></tr></table></figure><p>だからこうしたんだけど：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    b=a.index(<span class="number">6</span>)</div><div class="line">    <span class="keyword">del</span> a[b]</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    <span class="keyword">pass</span></div><div class="line"><span class="keyword">print</span> a</div></pre></td></tr></table></figure><p>でも、これをするもっと簡単な方法って無い？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/234322/zjm1126" target="_blank" rel="external">zjm1126</a> | 質問日時： 2010年5月8日 7:48 </div><br></p><a id="more"></a><h2 id="—–"><a href="#—–" class="headerlink" title="—–"></a>—–</h2><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>リスト内の最初に出てきた要素を削除するには、単に <code>list.remove</code>でいける：<br><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a.remove(<span class="string">'b'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> a</div><div class="line">[<span class="string">'a'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]</div></pre></td></tr></table></figure></p><p>マッチする要素全部を削除しないことに注意。リストの内包表記を使う必要がある。<br><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">2</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = [x <span class="keyword">for</span> x <span class="keyword">in</span> a <span class="keyword">if</span> x != <span class="number">2</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> a</div><div class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>]</div></pre></td></tr></table></figure></p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/178560/johannes-charra" target="_blank" rel="external">Johannes Charra</a> | 回答日時： 2010年5月8日 7:56 </div><br></p><h2 id="—–-1"><a href="#—–-1" class="headerlink" title="—–"></a>—–</h2><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>普通Pythonは実行できない何かをするように指示すると、Exceptionを投げる。だから、下記のうちどっちかをやらないといけないよ：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> c <span class="keyword">in</span> a:</div><div class="line">    a.remove(c)</div></pre></td></tr></table></figure><p>または</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    a.remove(c)</div><div class="line"><span class="keyword">except</span> ValueError:</div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure><p>An Exception isn’t necessarily a bad thing as long as it’s one you’re expecting and handle properly.<br>例外は、それが君がしたいしているもので、かつ適切に処理されるなら必ずしも悪いことじゃないよ。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/3171/dave-webb" target="_blank" rel="external">Dave Webb</a> | 回答日時： 2010年5月8日 8:02 </div><br></p><h2 id="—–-2"><a href="#—–-2" class="headerlink" title="—–"></a>—–</h2><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line"><span class="keyword">if</span> <span class="number">6</span> <span class="keyword">in</span> a:</div><div class="line">    a.remove(<span class="number">6</span>)</div></pre></td></tr></table></figure><p>でもこれだと、リストを6回検索する必要があるから、try-exceptだともっと早くなると思う</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    a.remove(<span class="number">6</span>)</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/213464/you" target="_blank" rel="external">YOU</a> | 回答日時： 2010年5月8日 7:57 </div><br></p><h2 id="—–-3"><a href="#—–-3" class="headerlink" title="—–"></a>—–</h2><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><p>こういうリストがあるとする：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</div></pre></td></tr></table></figure><p>マッチする全ての要素を取り出すには、pythonだとfilter関数を使用できるよ。例えばこんな感じ、</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">a = list(filter(<span class="keyword">lambda</span> x: x!= <span class="number">2</span>, a))</div></pre></td></tr></table></figure><p>だから、<code>a!=2</code>であるような要素は全てキープされる。</p><p>１つだけ取り除くような場合は</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">a.remove(<span class="number">2</span>)</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/3562332/mathwizurd" target="_blank" rel="external">mathwizurd</a> | 回答日時： 2014年8月11日 19:55 </div><br></p><h2 id="—–-4"><a href="#—–-4" class="headerlink" title="—–"></a>—–</h2><h2 id="回答5"><a href="#回答5" class="headerlink" title="回答5:"></a>回答5:</h2><p>新しいリストとかを使わずにインプレースでやる方法(内包表記無し)：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_all</span><span class="params">(seq, value)</span>:</span></div><div class="line">    pos = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> seq:</div><div class="line">        <span class="keyword">if</span> item != value:</div><div class="line">           seq[pos] = item</div><div class="line">           pos += <span class="number">1</span></div><div class="line">    <span class="keyword">del</span> seq[pos:]</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/4279/jfs" target="_blank" rel="external">jfs</a> | 回答日時： 2010年5月8日 14:57 </div><br></p><h2 id="—–-5"><a href="#—–-5" class="headerlink" title="—–"></a>—–</h2><p>Source: <a href="https://stackoverflow.com/questions/2793324/is-there-a-simple-way-to-delete-a-list-element-by-value" target="_blank" rel="external">Is there a simple way to delete a list element by value?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;a=[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;b=a.index(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt; a[b]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; a&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;これは次みたいなエラーを吐く：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;D:\zjm_code\a.py&quot;&lt;/span&gt;, line &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    b=a.index(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ValueError: list.index(x): x &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; list&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;だからこうしたんだけど：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;a=[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    b=a.index(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt; a[b]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; a&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;でも、これをするもっと簡単な方法って無い？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/234322/zjm1126&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zjm1126&lt;/a&gt; | 質問日時： 2010年5月8日 7:48 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="datasci" scheme="https://so-matome.net/tags/datasci/"/>
    
      <category term="python" scheme="https://so-matome.net/tags/python/"/>
    
      <category term="list" scheme="https://so-matome.net/tags/list/"/>
    
  </entry>
  
  <entry>
    <title>Trapped (出られない) [Webコミック]</title>
    <link href="https://so-matome.net/2017/10/18/commic-2017-05-29-trapped/"/>
    <id>https://so-matome.net/2017/10/18/commic-2017-05-29-trapped/</id>
    <published>2017-10-18T08:00:01.000Z</published>
    <updated>2017-10-19T00:17:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>毎週水曜日はIT企業で働く人達をネタにしたWebコミック、<a href="http://www.commitstrip.com/en/" target="_blank" rel="external">Commit Strip</a>を翻訳したものを紹介しています。</p><p>今回のお題は「Trapped（出られない）」です。</p><p>&lt;%- post.permalink %&gt;</p><a id="more"></a><hr><hr><p><strong>１コマ目：</strong><br>「もう何日も出口を探してるのに。これって馬鹿げてるよ！」<br>「忘れな。もう俺達は出られないよ。」</p><p><strong>２コマ目：</strong><br>「でもさ、ここからずっと出られないなんて馬鹿げて、、、」「あっ！」</p><p><strong>３コマ目：</strong><br>「えええー、彼まで！」</p><p><strong>４コマ目：</strong><br>「すまん、お前らを助け出すつもりできたのに、でも上手く行かなかった、、、」<br>「えーっ！あんたが最後の希望だったのに！」</p><img src="/2017/10/18/commic-2017-05-29-trapped/commic-2017-05-29-trapped.jpg" alt="commic-2017-05-29-trapped.jpg" title=""><p><strong>５コマ目：</strong><br>「もうハード・リブートするしかないのかな、、、」<br>「落ち着いて！Vimから出る方法はあるはずだ。きっと俺達なら探し出せる、、、」</p><hr><hr><p>Source: <a href="http://www.commitstrip.com/en/2017/05/29/trapped/" target="_blank" rel="external">Trapped</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;毎週水曜日はIT企業で働く人達をネタにしたWebコミック、&lt;a href=&quot;http://www.commitstrip.com/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Commit Strip&lt;/a&gt;を翻訳したものを紹介しています。&lt;/p&gt;
&lt;p&gt;今回のお題は「Trapped（出られない）」です。&lt;/p&gt;
&lt;p&gt;&amp;lt;%- post.permalink %&amp;gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="comic" scheme="https://so-matome.net/tags/comic/"/>
    
  </entry>
  
  <entry>
    <title>ダイナミックに作成された要素のイベントバインド [Javascript]</title>
    <link href="https://so-matome.net/2017/10/17/event-binding-on-dynamically-created-elements/"/>
    <id>https://so-matome.net/2017/10/17/event-binding-on-dynamically-created-elements/</id>
    <published>2017-10-17T08:00:02.000Z</published>
    <updated>2017-10-21T09:48:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>ページ上のすべての選択ボックスに対して<code>.hover</code>イベントをバインドして、オンマウスかどうかによってその幅を少し変えるようなコードが有るんだけど、これはページの準備ができた時点ではうまく動作してる。</p><p>で、問題なのは、AjaxまたはDOMを介して追加した選択ボックスだとイベントがバインドされない、ってことなんだ。</p><p>幸いこのプラグイン(<a href="http://brandonaaron.net/docs/livequery/#getting-started" target="_blank" rel="external">jQuery Live Queryプラグイン</a>)を見つけたんだけど、僕のページにプラグインを追加する前に、誰かjQueryを使うか、別の方法かでこの問題を解決する方法を知ってる人がいないかなって聞きたいと思ったんだ。誰かいいアイデア無い？？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/27580/eli" target="_blank" rel="external">Eli</a> | 質問日時： 2008年10月14日 23:25 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p><strong>jQuery 1.7以降</strong> <a href="https://api.jquery.com/on/#on-events-selector-data-handler" target="_blank" rel="external"><code>jQuery.fn.on</code></a>が使える</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$(staticAncestors).on(eventName, dynamicChild, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;);</div></pre></td></tr></table></figure><hr><p>**これよりも推奨されるべきアプローチは<a href="http://api.jquery.com/live" target="_blank" rel="external"><code>live()</code></a>かな：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$(selector).live( eventName, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125; );</div></pre></td></tr></table></figure><p>でも、 <code>live()</code>は <code>on()</code>のせいでに1.7では廃止され、1.9で完全に除去された。<br><code>live()</code>はこう書けるけど：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$(selector).live( eventName, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125; );</div></pre></td></tr></table></figure><p>でも以下の<a href="http://api.jquery.com/on/" target="_blank" rel="external"><code>on()</code></a>に置き換えることができる。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).on( eventName, selector, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125; );</div></pre></td></tr></table></figure><hr><p>たとえば、あるページがクラス名<code>dosomething</code>を持つ要素を動的に作成していたとすると、、イベントはすでに存在する親にバインドされてる。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).on(<span class="string">'mouseover mouseout'</span>, <span class="string">'.dosomething'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">//マウスオーバーやマウスアウト時に何をしたいか</span></div><div class="line">    <span class="comment">// '.dosomething'と一致する要素で発生する</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>イベントがバインドされる時点で存在するすべての親でうまくいくよ。例えば</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$(<span class="string">'.buttons'</span>).on(<span class="string">'click'</span>, <span class="string">'button'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="comment">//ここで何かする</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>は以下に適用される</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"buttons"</span>&gt;</div><div class="line">    &lt;!-- &lt;button&gt;は動的に生成され、ここに追加される --&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>これは、ライブラリやプラグインを使用しない<strong>純粋なJavaScript </strong>での方法だよ。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (hasClass(e.target, <span class="string">'bu'</span>)) &#123;</div><div class="line">          <span class="comment">// .buがクリックされた</span></div><div class="line">          <span class="comment">// 何かやる</span></div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (hasClass(e.target, <span class="string">'test'</span>)) &#123;</div><div class="line">        <span class="comment">// .testがクリックされた</span></div><div class="line">        <span class="comment">// 何か他のことやる</span></div><div class="line">    &#125;</div><div class="line">&#125;, <span class="literal">false</span>);</div></pre></td></tr></table></figure><p>ここで <code>hasClass</code>は</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params">elem, className</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> elem.className.split(<span class="string">' '</span>).indexOf(className) &gt; <span class="number">-1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong> <a href="http://jsfiddle.net/ramswaroop/Nrxp5/28/" target="_blank" rel="external">ライブデモ</a></strong></p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1385441/ram-patra" target="_blank" rel="external">Ram Patra</a> | 回答日時： 2014年12月9日 7:59 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>オブジェクトを作成するときにイベントを追加することができるよ。君が同じイベントを複数のオブジェクトに異なるタイミングで追加している場合なら、名前付き関数を作成するのがいいかも：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> mouseOverHandler = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 何かやる</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> mouseOutHandler = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 何かやる</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//ドキュメントの読み込み時に、既存の要素に適用する</span></div><div class="line">    $(<span class="string">'select'</span>).hover(mouseOverHandler, mouseOutHandler);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">///この次の部分はAjax呼び出しのコールバックにある</span></div><div class="line">$(<span class="string">"&lt;select&gt;&lt;/select&gt;"</span>)</div><div class="line">    .append( <span class="comment">/* 君の&lt;option&gt;s */</span> )</div><div class="line">    .hover(mouseOverHandler, mouseOutHandler)</div><div class="line">    .appendTo( <span class="comment">/* 選択ボックスが必要な場合はどこでも*/</span> )</div><div class="line">;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/9021/nickf" target="_blank" rel="external">nickf</a> | 回答日時： 2008年10月14日 23:31 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/203198/event-binding-on-dynamically-created-elements" target="_blank" rel="external">Event binding on dynamically created elements?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;ページ上のすべての選択ボックスに対して&lt;code&gt;.hover&lt;/code&gt;イベントをバインドして、オンマウスかどうかによってその幅を少し変えるようなコードが有るんだけど、これはページの準備ができた時点ではうまく動作してる。&lt;/p&gt;
&lt;p&gt;で、問題なのは、AjaxまたはDOMを介して追加した選択ボックスだとイベントがバインドされない、ってことなんだ。&lt;/p&gt;
&lt;p&gt;幸いこのプラグイン(&lt;a href=&quot;http://brandonaaron.net/docs/livequery/#getting-started&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jQuery Live Queryプラグイン&lt;/a&gt;)を見つけたんだけど、僕のページにプラグインを追加する前に、誰かjQueryを使うか、別の方法かでこの問題を解決する方法を知ってる人がいないかなって聞きたいと思ったんだ。誰かいいアイデア無い？？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/27580/eli&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Eli&lt;/a&gt; | 質問日時： 2008年10月14日 23:25 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
      <category term="jquery" scheme="https://so-matome.net/tags/jquery/"/>
    
      <category term="events" scheme="https://so-matome.net/tags/events/"/>
    
      <category term="unobtrusive-javascript" scheme="https://so-matome.net/tags/unobtrusive-javascript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScriptは参照渡しpass-by-value言語か値渡しpass-by-reference言語か [Javascript]</title>
    <link href="https://so-matome.net/2017/10/17/is-javascript-a-pass-by-reference-or-pass-by-value-language/"/>
    <id>https://so-matome.net/2017/10/17/is-javascript-a-pass-by-reference-or-pass-by-value-language/</id>
    <published>2017-10-17T08:00:01.000Z</published>
    <updated>2017-10-20T22:14:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>プリミティブ型(Number、Stringなど)は値によって渡されるけど、でもObjectは決まってない、なぜなら値渡し(オブジェクトを保持する変数が実際にはオブジェクトへの参照である場合)にも参照渡し(あるオブジェクトへの変数がそのオブジェクト自体を保持している時)の療法があるから。</p><p>あと、あんまり重要じゃないけど、引数を渡す慣習的なやり方の正しい方法ってある？あと、これに関するセマンティクスが何でべきか定義してるようなJavaScriptの仕様を抜粋したものとかって無いかな？？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/3219/danail-nachev" target="_blank" rel="external">Danail Nachev</a> | 質問日時： 2009年2月5日 21:23 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>これはJavascriptで面白い問題だよね。こんな例を考えてみよう：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeStuff</span>(<span class="params">a, b, c</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">  a = a * <span class="number">10</span>;</div><div class="line">  b.item = <span class="string">"changed"</span>;</div><div class="line">  c = &#123;<span class="attr">item</span>: <span class="string">"changed"</span>&#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</div><div class="line"><span class="keyword">var</span> obj1 = &#123;<span class="attr">item</span>: <span class="string">"unchanged"</span>&#125;;</div><div class="line"><span class="keyword">var</span> obj2 = &#123;<span class="attr">item</span>: <span class="string">"unchanged"</span>&#125;;</div><div class="line"></div><div class="line">changeStuff(num, obj1, obj2);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(num);</div><div class="line"><span class="built_in">console</span>.log(obj1.item);</div><div class="line"><span class="built_in">console</span>.log(obj2.item);</div></pre></td></tr></table></figure><p>これは次のような出力をする：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="number">10</span></div><div class="line">changed</div><div class="line">unchanged</div></pre></td></tr></table></figure><p>もし純粋な値渡しでだった場合、 <code>obj1.item</code>を変更することは関数の外では<code>obj1</code>への影響は全く無い。<br>もし参照渡しだった場合、話が変わってくる。 <code>num</code>は<code>100</code>、 <code>obj2.item</code>は<code>changed</code>になる。</p><p>そうじゃなくて、考える状況は渡されたアイテムが値渡しであって、でも値渡しされるアイテムそれ自身は参照になってる状況だ。</p><p>技術的には、これは<a href="http://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing" target="_blank" rel="external">call-by-sharing</a>って呼ばれてる。</p><p>実際には、(<code>num</code>と<code>obj2</code>のように)パラメータ自体を変更した場合、それはパラメータに渡されるアイテム自身には影響を与えない。でも、(<code>obj1</code>のように)パラメータの<strong>内部</strong>を変更すると、その影響は（<code>obj1</code>に）伝わっていく。</p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>基本常に値渡しだけど、オブジェクトの場合は変数の値は参照になってる。だから、オブジェクトを渡してそのメンバーを変更すると、その変更は関数の外でも引き継がれる。<br>これは、参照渡し<em>のように見える</em>。でも、実際にオブジェクト変数の値を変更すると変化が引き継がれないことがわかるので、それが本当に値渡しであることの証明になってる。</p><p>例：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeObject</span>(<span class="params">x</span>) </span>&#123;</div><div class="line">  x = &#123;<span class="attr">member</span>:<span class="string">"bar"</span>&#125;;</div><div class="line">  alert(<span class="string">"in changeObject: "</span> + x.member);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeMember</span>(<span class="params">x</span>) </span>&#123;</div><div class="line">  x.member = <span class="string">"bar"</span>;</div><div class="line">  alert(<span class="string">"in changeMember: "</span> + x.member);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> x = &#123;<span class="attr">member</span>:<span class="string">"foo"</span>&#125;;</div><div class="line"></div><div class="line">alert(<span class="string">"before changeObject: "</span> + x.member);</div><div class="line">changeObject(x);</div><div class="line">alert(<span class="string">"after changeObject: "</span> + x.member); <span class="comment">/*変更は引き継がない */</span></div><div class="line"></div><div class="line">alert(<span class="string">"before changeMember: "</span> + x.member);</div><div class="line">changeMember(x);</div><div class="line">alert(<span class="string">"after changeMember: "</span> + x.member); <span class="comment">/* 変更は引き継ぐ */</span></div></pre></td></tr></table></figure><p>出力：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">before changeObject: foo</div><div class="line"><span class="keyword">in</span> changeObject: bar</div><div class="line">after changeObject: foo</div><div class="line"></div><div class="line">before changeMember: foo</div><div class="line"><span class="keyword">in</span> changeMember: bar</div><div class="line">after changeMember: bar</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/254364/tim-goodman" target="_blank" rel="external">Tim Goodman</a> | 回答日時： 2011年3月15日 16:38 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/518000/is-javascript-a-pass-by-reference-or-pass-by-value-language" target="_blank" rel="external">Is JavaScript a pass-by-reference or pass-by-value language?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;プリミティブ型(Number、Stringなど)は値によって渡されるけど、でもObjectは決まってない、なぜなら値渡し(オブジェクトを保持する変数が実際にはオブジェクトへの参照である場合)にも参照渡し(あるオブジェクトへの変数がそのオブジェクト自体を保持している時)の療法があるから。&lt;/p&gt;
&lt;p&gt;あと、あんまり重要じゃないけど、引数を渡す慣習的なやり方の正しい方法ってある？あと、これに関するセマンティクスが何でべきか定義してるようなJavaScriptの仕様を抜粋したものとかって無いかな？？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/3219/danail-nachev&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Danail Nachev&lt;/a&gt; | 質問日時： 2009年2月5日 21:23 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
      <category term="pass-by-reference" scheme="https://so-matome.net/tags/pass-by-reference/"/>
    
      <category term="pass-by-value" scheme="https://so-matome.net/tags/pass-by-value/"/>
    
  </entry>
  
  <entry>
    <title>matplotlibのFigureの文字をパスじゃなく文字としてSVGに出力する方法 [Python]</title>
    <link href="https://so-matome.net/2017/10/17/output-matplotlib-figure-to-svg-with-text-as-text-not-curves/"/>
    <id>https://so-matome.net/2017/10/17/output-matplotlib-figure-to-svg-with-text-as-text-not-curves/</id>
    <published>2017-10-17T08:00:01.000Z</published>
    <updated>2017-10-21T09:48:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><code>matplotlib.pyplot.savefig(&quot;test.svg&quot;, format=&quot;svg&quot;)</code>で文字を大量に含むSVGとしてFigureを作ると、SVGファイルが膨大になるんだけど、これって文字がSVG内でパスとして保存されるからだよね。<br>パスだとSVGの解釈も難しくなるし、文字がSVGの文字として出力したいんだけど、matplotlibでカーブじゃなく文字を文字として出力させる方法はってある？</p><p>SVGファイルではこんなコードになってる。</p><figure class="highlight xml"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">" M9.8125 72.9062 L55.9062 72.9062 L55.9062 64.5938 L19.6719</span></span></div><div class="line"><span class="tag"><span class="string">64.5938 L19.6719 43.0156 L54.3906 43.0156 L54.3906 34.7188 L19.6719</span></span></div><div class="line"><span class="tag"><span class="string">34.7188 L19.6719 8.29688 L56.7812 8.29688 L56.7812 0 L9.8125 0 z "</span></span></div><div class="line"><span class="tag"><span class="attr">id</span>=<span class="string">"DejaVuSans-45"</span> /&gt;</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/301166/bram" target="_blank" rel="external">Bram</a> | 質問日時： 2015年12月21日 1:43 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>Matplotlibs SVG文字レンダリングは、matplotlibrcかコード内でできるよ。<br><a href="http://matplotlib.org/users/customizing.html" target="_blank" rel="external">http://matplotlib.org/users/customizing.html</a>を参照：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="comment">#svg.fonttype : 'path'         # SVGフォントを扱う方法：</span></div><div class="line"><span class="comment">#    'none': SVGが表示されるマシンにフォントがインストールされていると仮定。</span></div><div class="line"><span class="comment">#    'path': 文字をパスとして埋め込む - ほとんどのSVGレンダラでサポートされている</span></div><div class="line"><span class="comment">#    'svgfont': 文字をSVGフォントとして埋め込む -  Chrome、オペラとサファリでサポートされてる</span></div></pre></td></tr></table></figure><p>これを使えば、フォントの埋め込みも文字をパスとしてレンダリングするのも両方できるよ：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line">plt.rcParams[<span class="string">'svg.fonttype'</span>] = <span class="string">'none'</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/3787580/zliw" target="_blank" rel="external">zliw</a> | 回答日時： 2016年3月1日 22:18 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/34387893/output-matplotlib-figure-to-svg-with-text-as-text-not-curves" target="_blank" rel="external">Output matplotlib figure to SVG with text as text, not curves</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;code&gt;matplotlib.pyplot.savefig(&amp;quot;test.svg&amp;quot;, format=&amp;quot;svg&amp;quot;)&lt;/code&gt;で文字を大量に含むSVGとしてFigureを作ると、SVGファイルが膨大になるんだけど、これって文字がSVG内でパスとして保存されるからだよね。&lt;br&gt;パスだとSVGの解釈も難しくなるし、文字がSVGの文字として出力したいんだけど、matplotlibでカーブじゃなく文字を文字として出力させる方法はってある？&lt;/p&gt;
&lt;p&gt;SVGファイルではこんなコードになってる。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;d&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot; M9.8125 72.9062 L55.9062 72.9062 L55.9062 64.5938 L19.6719&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;string&quot;&gt;64.5938 L19.6719 43.0156 L54.3906 43.0156 L54.3906 34.7188 L19.6719&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;string&quot;&gt;34.7188 L19.6719 8.29688 L56.7812 8.29688 L56.7812 0 L9.8125 0 z &quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;DejaVuSans-45&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/301166/bram&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bram&lt;/a&gt; | 質問日時： 2015年12月21日 1:43 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="datasci" scheme="https://so-matome.net/tags/datasci/"/>
    
      <category term="python" scheme="https://so-matome.net/tags/python/"/>
    
      <category term="svg" scheme="https://so-matome.net/tags/svg/"/>
    
      <category term="matplotlib" scheme="https://so-matome.net/tags/matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>Pandasでgrepのような機能 [Python]</title>
    <link href="https://so-matome.net/2017/10/16/pandas-grep-like-function/"/>
    <id>https://so-matome.net/2017/10/16/pandas-grep-like-function/</id>
    <published>2017-10-16T08:00:01.000Z</published>
    <updated>2017-10-16T08:00:01.820Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>Pandasのbuilt-in関数で、ある文字列や値を含む行を削除するような、grepみたいな関数ってある？<br>よろしくお願いします。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1289107/fred" target="_blank" rel="external">fred</a> | 質問日時： 2012年9月27日 16:10 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>df[‘column_label].strを見てみて。以下の例は、列Aに’a’という文字、列Bに20を持つようなすべての行を削除するよ。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">In [<span class="number">46</span>]: df</div><div class="line">Out[<span class="number">46</span>]:</div><div class="line">     A   B</div><div class="line"><span class="number">0</span>  foo  <span class="number">10</span></div><div class="line"><span class="number">1</span>  bar  <span class="number">20</span></div><div class="line"><span class="number">2</span>  baz  <span class="number">30</span></div><div class="line"></div><div class="line">In [<span class="number">47</span>]: cond = df[<span class="string">'A'</span>].str.contains(<span class="string">'a'</span>) &amp;amp; (df[<span class="string">'B'</span>] == <span class="number">20</span>)</div><div class="line"></div><div class="line">In [<span class="number">48</span>]: df.drop(df[cond].index.values)</div><div class="line">Out[<span class="number">48</span>]:</div><div class="line">     A   B</div><div class="line"><span class="number">0</span>  foo  <span class="number">10</span></div><div class="line"><span class="number">2</span>  baz  <span class="number">30</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1548051/wouter-overmeire" target="_blank" rel="external">Wouter Overmeire</a> | 回答日時： 2012年9月27日 18:03 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/12625650/pandas-grep-like-function" target="_blank" rel="external">Pandas: grep like function</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;Pandasのbuilt-in関数で、ある文字列や値を含む行を削除するような、grepみたいな関数ってある？&lt;br&gt;よろしくお願いします。&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/1289107/fred&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fred&lt;/a&gt; | 質問日時： 2012年9月27日 16:10 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="pandas" scheme="https://so-matome.net/tags/pandas/"/>
    
      <category term="grep" scheme="https://so-matome.net/tags/grep/"/>
    
      <category term="row" scheme="https://so-matome.net/tags/row/"/>
    
  </entry>
  
  <entry>
    <title>jQuery Ajaxファイルアップロード [Javascript]</title>
    <link href="https://so-matome.net/2017/10/16/jquery-ajax-file-upload/"/>
    <id>https://so-matome.net/2017/10/16/jquery-ajax-file-upload/</id>
    <published>2017-10-16T08:00:01.000Z</published>
    <updated>2017-10-16T18:47:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>Ajaxリクエストのpostメソッドを使ってファイルをアップロードしたいんだけど、こんなjQueryコードって使える？</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">    type: <span class="string">"POST"</span>,</div><div class="line">    timeout: <span class="number">50000</span>,</div><div class="line">    url: url,</div><div class="line">    data: dataString,</div><div class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line">        alert(<span class="string">'success'</span>);</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>もし可能であれば、「data」の部分を記入しておく必要ある？これって正しい方法？僕はファイルをサーバー側に送信したいだけなんだ。</p><p>色々ぐぐってみたけど、僕が見つけたのはプラグインだけで、できれば使いたくないんだ。少なくとも現時点では。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/278549/willy" target="_blank" rel="external">Willy</a> | 質問日時： 2010年2月23日 16:58 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>XHR2ではAJAXによるファイルアップロードがサポートされてるよ。例えば、<a href="https://developer.mozilla.org/en-US/docs/Web/Guide/Using_FormData_Objects" target="_blank" rel="external">FormData</a>オブジェクトを通して。</p><p>でも残念だけどすべてのブラウザでサポートされてるわけじゃないし、古いブラウザでは動かない。</p><p>FormDataのサポートは、下のバージョンのデスクトップ・ブラウザから開始される。</p><ul><li>IE 10+、</li><li>Firefox 4.0以降、</li><li>Chrome 7以上、</li><li>Safari 5以上、</li><li>Opera 12以上</li></ul><p>詳細については、<a href="https://developer.mozilla.org/en-US/docs/XMLHttpRequest/FormData" target="_blank" rel="external">MDNリンク</a>を参照</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/154219/adeel" target="_blank" rel="external">Adeel</a> | 回答日時： 2010年2月23日 17:03 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>getSize関数を使用してサイズを確認する、それかgetType関数を使用して型をチェックするのがいいかな。<br>プログレスバーhtmlとcssコードも追加しておいたよ。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> Upload = <span class="function"><span class="keyword">function</span> (<span class="params">file</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.file = file;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">Upload.prototype.getType = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.file.type;</div><div class="line">&#125;;</div><div class="line">Upload.prototype.getSize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.file.size;</div><div class="line">&#125;;</div><div class="line">Upload.prototype.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.file.name;</div><div class="line">&#125;;</div><div class="line">Upload.prototype.doUpload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</div><div class="line"></div><div class="line">    <span class="comment">// assocのキー値を追加。これは投稿の値になる</span></div><div class="line">    formData.append(<span class="string">"file"</span>, <span class="keyword">this</span>.file, <span class="keyword">this</span>.getName());</div><div class="line">    formData.append(<span class="string">"upload_file"</span>, <span class="literal">true</span>);</div><div class="line"></div><div class="line">    $.ajax(&#123;</div><div class="line">        type: <span class="string">"POST"</span>,</div><div class="line">        url: <span class="string">"script"</span>,</div><div class="line">        xhr: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> myXhr = $.ajaxSettings.xhr();</div><div class="line">            <span class="keyword">if</span> (myXhr.upload) &#123;</div><div class="line">                myXhr.upload.addEventListener(<span class="string">'progress'</span>, that.progressHandling, <span class="literal">false</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> myXhr;</div><div class="line">        &#125;,</div><div class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line">            <span class="comment">//ここに君のコールバック</span></div><div class="line">        &#125;,</div><div class="line">        error: <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</div><div class="line">            <span class="comment">// ハンドルエラー</span></div><div class="line">        &#125;,</div><div class="line">        <span class="keyword">async</span>: <span class="literal">true</span>,</div><div class="line">        data: formData,</div><div class="line">        cache: <span class="literal">false</span>,</div><div class="line">        contentType: <span class="literal">false</span>,</div><div class="line">        processData: <span class="literal">false</span>,</div><div class="line">        timeout: <span class="number">60000</span></div><div class="line">    &#125;);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">Upload.prototype.progressHandling = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> percent = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> position = event.loaded || event.position;</div><div class="line">    <span class="keyword">var</span> total = event.total;</div><div class="line">    <span class="keyword">var</span> progress_bar_id = <span class="string">"#progress-wrp"</span>;</div><div class="line">    <span class="keyword">if</span> (event.lengthComputable) &#123;</div><div class="line">        percent = <span class="built_in">Math</span>.ceil(position / total * <span class="number">100</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//君のコードに合うようにprogressbarsクラスを更新して</span></div><div class="line">    $(progress_bar_id + <span class="string">" .progress-bar"</span>).css(<span class="string">"width"</span>, +percent + <span class="string">"%"</span>);</div><div class="line">    $(progress_bar_id + <span class="string">" .status"</span>).text(percent + <span class="string">"%"</span>);</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p><strong>Uploadクラスの使い方</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 自分のIDに変更すること</span></div><div class="line">$(<span class="string">"#ingredient_file"</span>).on(<span class="string">"change"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> file = $(<span class="keyword">this</span>)[<span class="number">0</span>].files[<span class="number">0</span>];</div><div class="line">    <span class="keyword">var</span> upload = <span class="keyword">new</span> Upload(file);</div><div class="line"></div><div class="line">    <span class="comment">//　たぶんここでサイズを確認するか、upload.getSize()かupload.getType()でここに入力させる。</span></div><div class="line">    </div><div class="line">    <span class="comment">//アップロードを実行する</span></div><div class="line">    upload.doUpload();</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p><strong>プログレスバーのHTMLコード</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&lt;div id=<span class="string">"progress-wrp"</span>&gt;</div><div class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"progress-bar"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"status"</span>&gt;<span class="number">0</span>%<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">&lt;<span class="regexp">/div&gt;</span></div></pre></td></tr></table></figure><p><strong>プログレスバーのCSSコード</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">#progress-wrp &#123;</div><div class="line">    border: 1px solid #0099CC;</div><div class="line">    padding: <span class="number">1</span>px;</div><div class="line">    position: relative;</div><div class="line">    height: <span class="number">30</span>px;</div><div class="line">    border-radius: <span class="number">3</span>px;</div><div class="line">    margin: <span class="number">10</span>px;</div><div class="line">    text-align: left;</div><div class="line">    background: #fff;</div><div class="line">    box-shadow: inset <span class="number">1</span>px <span class="number">3</span>px <span class="number">6</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.12</span>);</div><div class="line">&#125;</div><div class="line">#progress-wrp .progress-bar&#123;</div><div class="line">    height: <span class="number">100</span>%;</div><div class="line">    border-radius: <span class="number">3</span>px;</div><div class="line">    background-color: #f39ac7;</div><div class="line">    width: <span class="number">0</span>;</div><div class="line">    box-shadow: inset <span class="number">1</span>px <span class="number">1</span>px <span class="number">10</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.11</span>);</div><div class="line">&#125;</div><div class="line">#progress-wrp .status&#123;</div><div class="line">    top:<span class="number">3</span>px;</div><div class="line">    left:<span class="number">50</span>%;</div><div class="line">    position:absolute;</div><div class="line">    display:inline-block;</div><div class="line">    color: #000000;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1349916/ziinloader" target="_blank" rel="external">Ziinloader</a> | 回答日時： 2012年5月30日 7:00 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/2320069/jquery-ajax-file-upload" target="_blank" rel="external">jQuery Ajax File Upload</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;Ajaxリクエストのpostメソッドを使ってファイルをアップロードしたいんだけど、こんなjQueryコードって使える？&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    type: &lt;span class=&quot;string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    timeout: &lt;span class=&quot;number&quot;&gt;50000&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    url: url,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    data: dataString,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;string&quot;&gt;&#39;success&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;もし可能であれば、「data」の部分を記入しておく必要ある？これって正しい方法？僕はファイルをサーバー側に送信したいだけなんだ。&lt;/p&gt;
&lt;p&gt;色々ぐぐってみたけど、僕が見つけたのはプラグインだけで、できれば使いたくないんだ。少なくとも現時点では。&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/278549/willy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Willy&lt;/a&gt; | 質問日時： 2010年2月23日 16:58 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
      <category term="jquery" scheme="https://so-matome.net/tags/jquery/"/>
    
      <category term="ajax" scheme="https://so-matome.net/tags/ajax/"/>
    
      <category term="post" scheme="https://so-matome.net/tags/post/"/>
    
      <category term="file-upload" scheme="https://so-matome.net/tags/file-upload/"/>
    
  </entry>
  
  <entry>
    <title>プログラマーが見るべき20のTEDトーク(1)　12歳のアプリ開発者 [Video]</title>
    <link href="https://so-matome.net/2017/10/14/ted-talks-programming-everyone-must-watch-1/"/>
    <id>https://so-matome.net/2017/10/14/ted-talks-programming-everyone-must-watch-1/</id>
    <published>2017-10-14T20:40:59.000Z</published>
    <updated>2017-10-16T19:34:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Thomas-Suarez：12歳のアプリ開発者"><a href="#Thomas-Suarez：12歳のアプリ開発者" class="headerlink" title="Thomas Suarez：12歳のアプリ開発者"></a>Thomas Suarez：12歳のアプリ開発者</h2><p><a href="http://www.makeuseof.com/tag/ted-talks-programming/" target="_blank" rel="external">MakeUseOf</a>より、プログラマーが見ておくべきTEDトークが話題になっていたのでご紹介します。内容は、プログラミング方法を学ぶためではなく、プログラマーになる方法を学ぶことにフォーカスが置かれ、考え方を知ることを重視した内容になっています。</p><p>まず1つ目は「Thomas Suarez：12歳のアプリ開発者」。以下のように紹介されています：</p><blockquote><p>あなたが若すぎたり、年を取ったり、プログラミングに慣れていないと思うなら、この4分間のTEDx Talkであなたの心を変えてください。<br>少しの衝動と賢さで、トーマス・スアレスは12歳までにいくつかのアプリを作る方法を学びました。 （プログラミングをやらないことの）言い訳に彼は負けませんでした。あなたはどうでしょう？</p></blockquote><iframe width="560" height="315" src="https://www.youtube.com/embed/Fkd9TWUtFm0?cc_load_policy=1&cc_lang_pref=ja" frameborder="0" allowfullscreen></iframe><p>動画は日本語字幕を表示してありますが、TEDトークの日本語訳には意訳している部分もあるため、英語字幕（以下）をフォローするのをお薦めします：</p><a id="more"></a><div id="" style="overflow-y: scroll; height:400px;"><br>I&#39;ve always had a fascination for computers and technology, and I made a few apps for the iPhone, iPod touch, and iPad.<br><br>I&#39;d like to share a couple with you today.<br><br>My first app was a unique fortune teller called &quot;Earth Fortune&quot; that would display different colors of Earth depending on what your fortune was.<br><br>My favorite and most successful app is &quot;Bustin Jieber,&quot; which is – (Laughter) which is a Justin Bieber whack-a-mole.<br><br>(Laughter) I created it because a lot of people at school disliked Justin Bieber a little bit, so I decided to make the app.<br><br>So I went to work programming it, and I released it just before the holidays in 2010.<br><br>A lot of people ask me, how did I make these?<br><br>A lot of times it&#39;s because the person who asked the question wants to make an app also.<br><br>A lot of kids these days like to play games, but now they want to make them, and it&#39;s difficult, because not many kids know where to go to find out how to make a program.<br><br>I mean, for soccer, you could go to a soccer team.<br><br>For violin, you could get lessons for a violin.<br><br>But what if you want to make an app?<br><br>And the kid&#39;s parents might have done some of these things when they were young, but not many parents have written apps.<br><br>(Laughter) Where do you go to find out how to make an app?<br><br>Well, this is how I approached it, this is what I did.<br><br>First of all, I&#39;ve been programming in multiple other programming languages to get the basics down, such as Python, C, Java, etc.<br><br>And then Apple released the iPhone, and with it, the iPhone software development kit, and the software development kit is a suite of tools for creating and programming an iPhone app.<br><br>This opened up a whole new world of possibilities for me, and after playing with the software development kit a little bit, I made a couple of apps, I made some test apps.<br><br>One of them happened to be &quot;Earth Fortune,&quot; and I was ready to put &quot;Earth Fortune&quot; on the App Store, and so I persuaded my parents to pay the 99 dollar fee to be able to put my apps on the App Store.<br><br>They agreed, and now I have apps on the App Store.<br><br>I&#39;ve gotten a lot of interest and encouragement from my family, friends, teachers and even people at the Apple Store, and that&#39;s been a huge help to me.<br><br>I&#39;ve gotten a lot of inspiration from Steve Jobs, and I&#39;ve started an app club at school, and a teacher at my school is kindly sponsoring my app club.<br><br>Any student at my school can come and learn how to design an app.<br><br>This is so I can share my experiences with others.<br><br>There&#39;s these programs called the iPad Pilot Program, and some districts have them.<br><br>I&#39;m fortunate enough to be part of one.<br><br>A big challenge is, how should the iPads be used, and what apps should we put on the iPads?<br><br>So we&#39;re getting feedback from teachers at the school to see what kind of apps they&#39;d like.<br><br>When we design the app and we sell it, it will be free to local districts; and other districts that we sell to – all the money from that will go into the local ed foundations.<br><br>These days, students usually know a little bit more than teachers with the technology.<br><br>(Laughter) So – (Laughter) Sorry.<br><br>(Laughter) So this is a resource to teachers, and educators should recognize this resource and make good use of it.<br><br>(Laughter) I&#39;d like to finish up by saying what I&#39;d like to do in the future.<br><br>First of all, I&#39;d like to create more apps, more games.<br><br>I&#39;m working with a third party company to make an app.<br><br>I&#39;d like to get into Android programming and development, and I&#39;d like to continue my app club, and find other ways for students to share knowledge with others.<br><br>Thank you.<br><br>(Applause)<br></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Thomas-Suarez：12歳のアプリ開発者&quot;&gt;&lt;a href=&quot;#Thomas-Suarez：12歳のアプリ開発者&quot; class=&quot;headerlink&quot; title=&quot;Thomas Suarez：12歳のアプリ開発者&quot;&gt;&lt;/a&gt;Thomas Suarez：12歳のアプリ開発者&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.makeuseof.com/tag/ted-talks-programming/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MakeUseOf&lt;/a&gt;より、プログラマーが見ておくべきTEDトークが話題になっていたのでご紹介します。内容は、プログラミング方法を学ぶためではなく、プログラマーになる方法を学ぶことにフォーカスが置かれ、考え方を知ることを重視した内容になっています。&lt;/p&gt;
&lt;p&gt;まず1つ目は「Thomas Suarez：12歳のアプリ開発者」。以下のように紹介されています：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;あなたが若すぎたり、年を取ったり、プログラミングに慣れていないと思うなら、この4分間のTEDx Talkであなたの心を変えてください。&lt;br&gt;少しの衝動と賢さで、トーマス・スアレスは12歳までにいくつかのアプリを作る方法を学びました。 （プログラミングをやらないことの）言い訳に彼は負けませんでした。あなたはどうでしょう？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Fkd9TWUtFm0?cc_load_policy=1&amp;cc_lang_pref=ja&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;動画は日本語字幕を表示してありますが、TEDトークの日本語訳には意訳している部分もあるため、英語字幕（以下）をフォローするのをお薦めします：&lt;/p&gt;
    
    </summary>
    
    
      <category term="video" scheme="https://so-matome.net/tags/video/"/>
    
      <category term="english" scheme="https://so-matome.net/tags/english/"/>
    
      <category term="TED" scheme="https://so-matome.net/tags/TED/"/>
    
  </entry>
  
  <entry>
    <title>JavaScriptの変数のスコープって？ [Javascript]</title>
    <link href="https://so-matome.net/2017/10/13/what-is-the-scope-of-variables-in-javascript/"/>
    <id>https://so-matome.net/2017/10/13/what-is-the-scope-of-variables-in-javascript/</id>
    <published>2017-10-13T08:00:01.000Z</published>
    <updated>2017-10-16T19:34:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>javascriptの変数のスコープってどうなってる？関数の中と外で同じスコープを持ってる？それとも違う？<br>また、グローバルに定義されている場合、変数はどこに格納されるの？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/60102/lyricalssh" target="_blank" rel="external">lYriCAlsSH</a> | 質問日時： 2009年2月1日 8:27 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>君が勉強するためにベストなのは例をたくさん与えることだと思う。<br>Javascriptのプログラマーは、どれくらいスコープを理解しているかによって実質的にランク付けされてるからね。<br>時には、スコープは直感に反することもあるけど。</p><p>1.<em>＊グローバルスコープの変数*</em></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">var a = 1;</div><div class="line"></div><div class="line">// global scope</div><div class="line">function one() &#123;</div><div class="line">  alert(a); // alerts &apos;1&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li><strong>ローカルスコープ</strong></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">two</span>(<span class="params">a</span>) </span>&#123;</div><div class="line">  alert(a); <span class="comment">// '1'のグローバル値ではなく、指定された引数に警告する。</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// ローカルスコープ</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">three</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> a = <span class="number">3</span>;</div><div class="line">  alert(a); <span class="comment">// '3'を警告</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li><strong>中級</strong>：JavaScriptにブロックスコープなんてものは存在しない(ES5; ES6では <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements" target="_blank" rel="external"><code>let</code></a>が導入された)</li></ol><p>a.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">four</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</div><div class="line">    <span class="keyword">var</span> a = <span class="number">4</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  alert(a); <span class="comment">// '1'のグローバル値ではなく、4を警告</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>b.<br><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">one</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</div><div class="line">    <span class="keyword">let</span> a = <span class="number">4</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  alert(a); <span class="comment">// 'let'キーワードがブロックスコープを使用するため、'1'を警告</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><ol><li><strong> </strong>中級**：<em>Objectプロパティ</em></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">five</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">this</span>.a = <span class="number">5</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">alert(<span class="keyword">new</span> five().a); <span class="comment">// alerts '5'</span></div></pre></td></tr></table></figure><ol><li><strong>上級</strong>：<em>Closure</em></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> six = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> a = <span class="number">6</span>;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// JavaScriptで "closure"はここの'a'にアクセスできることを意味する</span></div><div class="line">    <span class="comment">//なぜなら定義した関数内で定義されているから。</span></div><div class="line">    alert(a); <span class="comment">// alerts '6'</span></div><div class="line">  &#125;;</div><div class="line">&#125;)();</div></pre></td></tr></table></figure><ol><li><strong> </strong>上級**：<em>プロトタイプベースのスコープ解決</em></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">seven</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">this</span>.a = <span class="number">7</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// [object].prototype.property はルックアップチェーン内の</span></div><div class="line"><span class="comment">// [object].property に失われる。例えば...</span></div><div class="line"></div><div class="line"><span class="comment">//上記のコンストラクタで 'a'が設定されているため、到達しない。</span></div><div class="line">seven.prototype.a = <span class="number">-1</span>;</div><div class="line"></div><div class="line"><span class="comment">//コンストラクタで 'b'が設定されていなくても、到達する。</span></div><div class="line">seven.prototype.b = <span class="number">8</span>;</div><div class="line"></div><div class="line">alert(<span class="keyword">new</span> seven().a); <span class="comment">// alerts '7'</span></div><div class="line">alert(<span class="keyword">new</span> seven().b); <span class="comment">// alerts '8'</span></div></pre></td></tr></table></figure><hr><ol><li><strong>グローバル+ローカル</strong>：<em>必要以上に複雑なケース</em>  </li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> x = <span class="number">5</span>;</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line">    <span class="keyword">var</span> x = <span class="number">10</span>;</div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line">&#125;)();</div></pre></td></tr></table></figure><p><code>undefined</code>と<code>10 &#39;ではなく</code>5<code>と</code> 10`を出力。JavaScriptは変数宣言(初期化ではない)を常に先頭に移動し、以下のコードと同等になる。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> x = <span class="number">5</span>;</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> x;</div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line">    x = <span class="number">10</span>;</div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line">&#125;)();</div></pre></td></tr></table></figure><ol><li><strong>キャッチ節のスコープを持つ変数</strong></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> e = <span class="number">5</span>;</div><div class="line"><span class="built_in">console</span>.log(e);</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    <span class="keyword">throw</span> <span class="number">6</span>;</div><div class="line">&#125; <span class="keyword">catch</span> (e) &#123;</div><div class="line">    <span class="built_in">console</span>.log(e);</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(e);</div></pre></td></tr></table></figure><p>これは <code>5</code>、<code>6</code>、 <code>5</code>を出力する。 catch節は<code>e</code>はグローバルにもローカル変数にも影響を持つ。でも、この特別なスコープはキャッチされた変数に対してのみです。<code>var f;</code>をcatch節の中に書くと、try-catchブロックの前または後に定義した場合とまったく同じ。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/43089/triptych" target="_blank" rel="external">Triptych</a> | 回答日時： 2009年2月1日 8:58 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/500431/what-is-the-scope-of-variables-in-javascript" target="_blank" rel="external">What is the scope of variables in JavaScript?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;javascriptの変数のスコープってどうなってる？関数の中と外で同じスコープを持ってる？それとも違う？&lt;br&gt;また、グローバルに定義されている場合、変数はどこに格納されるの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/60102/lyricalssh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lYriCAlsSH&lt;/a&gt; | 質問日時： 2009年2月1日 8:27 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
      <category term="variables" scheme="https://so-matome.net/tags/variables/"/>
    
      <category term="scope" scheme="https://so-matome.net/tags/scope/"/>
    
  </entry>
  
  <entry>
    <title>列単位でデータフレームをソートする方法は？[R]</title>
    <link href="https://so-matome.net/2017/10/13/how-to-sort-a-dataframe-by-columns/"/>
    <id>https://so-matome.net/2017/10/13/how-to-sort-a-dataframe-by-columns/</id>
    <published>2017-10-13T08:00:01.000Z</published>
    <updated>2017-10-16T19:34:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>僕は複数の列でdata.frameをソートしたいんだ。たとえば、下のようなデータフレームで、列<code>z</code>を降順に、列<code>b</code>を昇順にソートするにはどうしたらいい？：</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">dd &lt;- data.frame(b = factor(c(<span class="string">"Hi"</span>, <span class="string">"Med"</span>, <span class="string">"Hi"</span>, <span class="string">"Low"</span>),</div><div class="line">      levels = c(<span class="string">"Low"</span>, <span class="string">"Med"</span>, <span class="string">"Hi"</span>), ordered = <span class="literal">TRUE</span>),</div><div class="line">      x = c(<span class="string">"A"</span>, <span class="string">"D"</span>, <span class="string">"A"</span>, <span class="string">"C"</span>), y = c(<span class="number">8</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">9</span>),</div><div class="line">      z = c(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>))</div><div class="line">dd</div><div class="line">    b x y z</div><div class="line"><span class="number">1</span>  Hi A <span class="number">8</span> <span class="number">1</span></div><div class="line"><span class="number">2</span> Med D <span class="number">3</span> <span class="number">1</span></div><div class="line"><span class="number">3</span>  Hi A <span class="number">9</span> <span class="number">1</span></div><div class="line"><span class="number">4</span> Low C <span class="number">9</span> <span class="number">2</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/84458/christopher-dubois" target="_blank" rel="external">Christopher DuBois</a> | 質問日時： 2009年8月18日 21:33 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>追加のライブラリとか使わなくても<a href="http://stat.ethz.ch/R-manual/R-devel/library/base/html/order.html" target="_blank" rel="external"><code>order()</code></a>関数が使えるよ – <code>example(order)</code>コードの一番目の例を見れば一発でわかると思う:</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">R&gt; dd[with(dd, order(-z, b)), ]</div><div class="line">    b x y z</div><div class="line"><span class="number">4</span> Low C <span class="number">9</span> <span class="number">2</span></div><div class="line"><span class="number">2</span> Med D <span class="number">3</span> <span class="number">1</span></div><div class="line"><span class="number">1</span>  Hi A <span class="number">8</span> <span class="number">1</span></div><div class="line"><span class="number">3</span>  Hi A <span class="number">9</span> <span class="number">1</span></div></pre></td></tr></table></figure><p>同じことを列に対してやろうとするなら、ソートしたい列を<code>order()</code>関数に渡してやればいい：</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">R&gt; dd[ order(-dd[,<span class="number">4</span>], dd[,<span class="number">1</span>]), ]</div><div class="line">    b x y z</div><div class="line"><span class="number">4</span> Low C <span class="number">9</span> <span class="number">2</span></div><div class="line"><span class="number">2</span> Med D <span class="number">3</span> <span class="number">1</span></div><div class="line"><span class="number">1</span>  Hi A <span class="number">8</span> <span class="number">1</span></div><div class="line"><span class="number">3</span>  Hi A <span class="number">9</span> <span class="number">1</span></div><div class="line">R&gt;</div></pre></td></tr></table></figure><p>これは列の名前を使うのよりいい方法だと思う（それをするには<code>with()</code>でやると簡単だと思うけど).</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/143305/dirk-eddelbuettel" target="_blank" rel="external">Dirk Eddelbuettel</a> | 回答日時： 2009年8月18日 21:51 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><h3 id="君のチョイスはいくつかある："><a href="#君のチョイスはいくつかある：" class="headerlink" title="君のチョイスはいくつかある："></a>君のチョイスはいくつかある：</h3><ul><li><code>base</code>の<code>order</code></li><li><code>dplyr</code>の<code>arrange</code></li><li><code>data.table</code>の<code>setorder</code>と<code>setorderv</code></li><li><code>plyr</code>の<code>arrange</code></li><li><code>taRifx</code>の<code>sort</code></li><li><code>doBy</code>の<code>orderBy</code></li><li><code>Deducer</code>の<code>sortData</code></li></ul><p>たいていの場合、ライブラリを使っちゃいけない場合とかを除いて<code>dplyr</code>か<code>data.table</code>を使うべきだと思う。もしその場合だったら、<code>base :: order</code>を使えばいい。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/636656/ari-b-friedman" target="_blank" rel="external">Ari B. Friedman</a> | 回答日時： 2011年7月29日 10:48 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>他の人がすばらしい答えをしてるけど、個人的には<a href="http://github.com/hadley/dplyr" target="_blank" rel="external">dplyr</a>が僕がすぐに、そして簡単に覚えられた構文を使ってる（だからよく使う）。</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line"><span class="comment"># sort mtcars by mpg, ascending... use desc(mpg) for descending</span></div><div class="line">arrange(mtcars, mpg)</div><div class="line"><span class="comment"># sort mtcars first by mpg, then by cyl, then by wt)</span></div><div class="line">arrange(mtcars , mpg, cyl, wt)</div></pre></td></tr></table></figure><p>OPの問題については：</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">arrange(dd, desc(z),  b)</div><div class="line"></div><div class="line">    b x y z</div><div class="line"><span class="number">1</span> Low C <span class="number">9</span> <span class="number">2</span></div><div class="line"><span class="number">2</span> Med D <span class="number">3</span> <span class="number">1</span></div><div class="line"><span class="number">3</span>  Hi A <span class="number">8</span> <span class="number">1</span></div><div class="line"><span class="number">4</span>  Hi A <span class="number">9</span> <span class="number">1</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1036500/ben" target="_blank" rel="external">Ben</a> | 回答日時： 2014年2月18日 21:29 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/1296646/how-to-sort-a-dataframe-by-columns" target="_blank" rel="external">How to sort a dataframe by column(s)?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;僕は複数の列でdata.frameをソートしたいんだ。たとえば、下のようなデータフレームで、列&lt;code&gt;z&lt;/code&gt;を降順に、列&lt;code&gt;b&lt;/code&gt;を昇順にソートするにはどうしたらいい？：&lt;/p&gt;
&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;dd &amp;lt;- data.frame(b = factor(c(&lt;span class=&quot;string&quot;&gt;&quot;Hi&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Med&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Hi&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Low&quot;&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      levels = c(&lt;span class=&quot;string&quot;&gt;&quot;Low&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Med&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Hi&quot;&lt;/span&gt;), ordered = &lt;span class=&quot;literal&quot;&gt;TRUE&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      x = c(&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;D&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;), y = c(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      z = c(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dd&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    b x y z&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;  Hi A &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; Med D &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  Hi A &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; Low C &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/84458/christopher-dubois&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Christopher DuBois&lt;/a&gt; | 質問日時： 2009年8月18日 21:33 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="datasci" scheme="https://so-matome.net/tags/datasci/"/>
    
      <category term="r" scheme="https://so-matome.net/tags/r/"/>
    
      <category term="dataframe" scheme="https://so-matome.net/tags/dataframe/"/>
    
      <category term="r-faq" scheme="https://so-matome.net/tags/r-faq/"/>
    
      <category term="sorting" scheme="https://so-matome.net/tags/sorting/"/>
    
  </entry>
  
  <entry>
    <title>iPhone X [Webコミック]</title>
    <link href="https://so-matome.net/2017/10/13/commic-2017-09-13-apple-iphone-x-juste-a-small-troll/"/>
    <id>https://so-matome.net/2017/10/13/commic-2017-09-13-apple-iphone-x-juste-a-small-troll/</id>
    <published>2017-10-13T00:06:14.000Z</published>
    <updated>2017-10-16T19:34:37.000Z</updated>
    
    <content type="html"><![CDATA[<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script> <p><strong>１コマ目：</strong><br>「さてこれまでで最大のキーノートスピーチが準備されています！我々は総工費50億ドルのAppleの新しいヘッドクォーターに来ております！」</p><p><strong>２コマ目：</strong><br>「これがあの有名なスティーブ・ジョブズ・シアターです。この素晴らしい空間で我々はもうすぐ史上最高のスマートフォンを目にしようとしています！」</p><img src="/2017/10/13/commic-2017-09-13-apple-iphone-x-juste-a-small-troll/commic-2017-09-13-apple-iphone-x-juste-a-small-troll.jpg" alt="[ ]" title="[ ]"><p><strong>３コマ目：</strong><br>「来ました！我々の目の前にiPhone Xが姿を表しました！最新のiPhoneがなんと1000ドル以下！この技術的驚異はかならずスマートフォンの世界を革新することでしょう！」</p><p><strong>４コマ目：</strong><br>「すばらしい、、、、ただすばらしい、、、、」</p><hr><hr><p>Source: <a href="http://www.commitstrip.com/en/2017/09/13/apple-iphone-x-juste-a-small-troll/" target="_blank" rel="external">Apple iPhone X - Juste a small troll</a></p><p><script><br>var linkwithin_site_id = 2565338;<br></script></p><p><script src="http://www.linkwithin.com/widget.js"></script><br><a href="http://www.linkwithin.com/" target="_blank" rel="external"><img src="http://www.linkwithin.com/pixel.png" alt="Related Posts Plugin for WordPress, Blogger..." style="border: 0"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&#39;http&#39;:&#39;https&#39;;if(!d.getElementById(id)){js=d.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>var functionName = function(){} 対 function functionName(){} [Javascript]</title>
    <link href="https://so-matome.net/2017/10/12/var-functionname-function-vs-function-functionname/"/>
    <id>https://so-matome.net/2017/10/12/var-functionname-function-vs-function-functionname/</id>
    <published>2017-10-12T08:00:01.000Z</published>
    <updated>2017-10-16T19:34:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>最近他人のJavascriptのコードをメンテしだして、バグを修正したり、機能を追加したり、コードをきちんと整理して一貫するようにしてる。</p><p>で、前の開発者は関数を宣言するのに2つの方法を使用してて、これらを使い分けるのに理由があるのかどうかよくわからないんだけど。その２つの方法は：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> functionOne = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 何かのコード</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">functionTwo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 何かのコード</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>この2つの異なる方法を使用する理由って何？それぞれメリットデメリットってある？<br>もう片方ではできて、他では出来ないことってある？</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/31569/richard-garside" target="_blank" rel="external">Richard Garside</a> | 質問日時： 2008年12月3日 11:31 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>The difference is that functionOne is a function expression and so only defined when that line is reached, whereas functionTwo is a function declaration and is defined as soon as its surrounding function or script is executed (due to hoisting).<br>For example, a function expression:</p><p><code>functionOne</code>は関数式なので、その行に達すると定義されるけど、 一方で<code>functionTwo</code>は関数宣言なので、その周囲の関数またはスクリプトが実行されたら定義される(<a href="http://adripofjavascript.com/blog/drips/variable-and-function-hoisting.html" target="_blank" rel="external">ホイスト</a>による)。</p><p>たとえば、関数式は次のようになる。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// TypeError：undefinedは関数ではない</span></div><div class="line">functionOne();</div><div class="line"></div><div class="line"><span class="keyword">var</span> functionOne = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"Hello!"</span>);</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>で、関数宣言：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 出力: "Hello!"</span></div><div class="line">functionTwo();</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">functionTwo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"Hello!"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>これは、関数宣言を使って条件付きで関数を定義することもできないことを意味してる：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (test) &#123;</div><div class="line">   <span class="comment">//エラーまたは不正行為</span></div><div class="line">   <span class="function"><span class="keyword">function</span> <span class="title">functionThree</span>(<span class="params"></span>) </span>&#123; doSomething(); &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">上は <span class="string">`test`</span>の値にかかわらず<span class="string">` functionThree`</span>を実際に定義してる -- でも<span class="string">`use strict`</span>が有効でない限り、エラーが発生してしまう。</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/24181/greg" target="_blank" rel="external">Greg</a> | 回答日時： 2008年12月3日 11:37 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/336859/var-functionname-function-vs-function-functionname" target="_blank" rel="external">var functionName = function() {} vs function functionName() {}</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;最近他人のJavascriptのコードをメンテしだして、バグを修正したり、機能を追加したり、コードをきちんと整理して一貫するようにしてる。&lt;/p&gt;
&lt;p&gt;で、前の開発者は関数を宣言するのに2つの方法を使用してて、これらを使い分けるのに理由があるのかどうかよくわからないんだけど。その２つの方法は：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; functionOne = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 何かのコード&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;functionTwo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 何かのコード&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;この2つの異なる方法を使用する理由って何？それぞれメリットデメリットってある？&lt;br&gt;もう片方ではできて、他では出来ないことってある？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/31569/richard-garside&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Richard Garside&lt;/a&gt; | 質問日時： 2008年12月3日 11:31 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="webdev" scheme="https://so-matome.net/tags/webdev/"/>
    
      <category term="javascript" scheme="https://so-matome.net/tags/javascript/"/>
    
      <category term="idioms" scheme="https://so-matome.net/tags/idioms/"/>
    
      <category term="function" scheme="https://so-matome.net/tags/function/"/>
    
      <category term="syntax" scheme="https://so-matome.net/tags/syntax/"/>
    
  </entry>
  
</feed>
