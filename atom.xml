<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stack Overflow まとめ</title>
  
  
  <link href="/somatome/atom.xml" rel="self"/>
  
  <link href="https://somatome.github.io/"/>
  <updated>2017-10-11T14:31:51.227Z</updated>
  <id>https://somatome.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Pythonには部分文字列を探す文字列用の&#39;contains&#39;メソッドとかってある？ [Python]</title>
    <link href="https://somatome.github.io/2017/10/11/does-python-have-a-string-contains-substring-method/"/>
    <id>https://somatome.github.io/2017/10/11/does-python-have-a-string-contains-substring-method/</id>
    <published>2017-10-11T08:00:01.000Z</published>
    <updated>2017-10-11T14:31:51.227Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><code>string.contains</code> とか <code>string.indexof</code>みたいなメソッドをPythonで探してるんだけど。やりたい事は：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="keyword">not</span> somestring.contains(<span class="string">"blah"</span>):</div><div class="line">   <span class="keyword">continue</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/39677/blankman">Blankman</a> | 質問日時： Aug 9 ‘10 at 2:52 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p><a href="https://docs.python.org/3/reference/expressions.html#membership-test-details" target="_blank" rel="external"><code>in</code>演算子</a>を使うといいよ：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="string">"blah"</span> <span class="keyword">not</span> <span class="keyword">in</span> somestring:</div><div class="line">    <span class="keyword">continue</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/309308/michael-mrozek">Michael Mrozek</a> | 回答日時： Aug 9 ‘10 at 2:56 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>部分文字列検索の場合は <code>string.find(&quot;substring&quot;)</code>を使うことができるよ。</p><p>でも<code>find</code>、<code>index</code>、<code>in</code>を使う時はちょっと気をつけて。どうしてかって言うと、それらは部分文字列検索だから。言い換えれば、：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">s = <span class="string">"This be a string"</span></div><div class="line"><span class="keyword">if</span> s.find(<span class="string">"is"</span>) == <span class="number">-1</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">"No 'is' here!"</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">"Found 'is' in the string."</span></div></pre></td></tr></table></figure><p>これは<code>Found &#39;is&#39; in the string.</code>を出力するはず。同様に <code>if &quot;is&quot; in s:</code>は<code>True</code>と評価されるはず。これは君が望むものかどうかわからないけど。</p><p><div style="text-align: right"> By  <a href="/users/390989/eldarerathis">eldarerathis</a> | 回答日時： Aug 9 ‘10 at 2:55 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/3437059/does-python-have-a-string-contains-substring-method" target="_blank" rel="external">Does Python have a string ‘contains’ substring method?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;code&gt;string.contains&lt;/code&gt; とか &lt;code&gt;string.indexof&lt;/code&gt;みたいなメソッドをPythonで探してるんだけど。やりたい事は：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; somestring.contains(&lt;span class=&quot;string&quot;&gt;&quot;blah&quot;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/39677/blankman&quot;&gt;Blankman&lt;/a&gt; | 質問日時： Aug 9 ‘10 at 2:52 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://somatome.github.io/tags/python/"/>
    
      <category term="string" scheme="https://somatome.github.io/tags/string/"/>
    
      <category term="substring" scheme="https://somatome.github.io/tags/substring/"/>
    
      <category term="contains" scheme="https://somatome.github.io/tags/contains/"/>
    
  </entry>
  
  <entry>
    <title>JavaScriptでJSONをパースする方法？ [Javascript]</title>
    <link href="https://somatome.github.io/2017/10/11/parse-json-in-javascript/"/>
    <id>https://somatome.github.io/2017/10/11/parse-json-in-javascript/</id>
    <published>2017-10-11T08:00:01.000Z</published>
    <updated>2017-10-11T14:31:04.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>JavascriptでJSONをパースしたんだけど。レスポンスとして考えてるのはこんな感じ：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> response = <span class="string">'&#123;"result":true,"count":1&#125;'</span>;</div></pre></td></tr></table></figure><p>どうやったらresultとかcountとかの値を取ってこれる？</p><p><div style="text-align: right"> By          user605334 | 質問日時： 2011年2月8日 16:34 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>ほとんどのブラウザは[<code>JSON.parse(https://docs.microsoft.com/en-us/scripting/javascript/reference/json-parse-function-javascript)</code>]をサポートしてて、ECMA-262第5版(JavaScriptが基づいている仕様)で定義されてる。使い方は簡単：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> json = <span class="string">'&#123;"result":true,"count":1&#125;'</span>,</div><div class="line">    obj = <span class="built_in">JSON</span>.parse(json);</div><div class="line"></div><div class="line">alert(obj.count);</div></pre></td></tr></table></figure><p>これを実装することができないブラウザには、<a href="https://github.com/douglascrockford/JSON-js/blob/master/json2.js" target="_blank" rel="external">json2.js</a>をどうぞ。</p><p>すでにjQueryを使ってる場合は、<code>$.parseJSON</code>関数が（利用可能な場合は）<code>JSON.parse</code>にマップし、古いブラウザでは <code>eval</code>の形式にマップしてくれる。でも、これは<code>JSON.parse</code>でも実行される、余計なチェックをしてしまうので、どんな状況でもいいパフォーマンスが出るこんなやり方をオススメするかな：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> json = <span class="string">'&#123;"result":true,"count":1&#125;'</span>,</div><div class="line">    obj = <span class="built_in">JSON</span> &amp;&amp; <span class="built_in">JSON</span>.parse(json) || $.parseJSON(json);</div></pre></td></tr></table></figure><p>こうすると、ネイティブのパースする関数に渡す前にjQueryで文字列のサニティチェックを行わせるんじゃなくて、ネイティブの<code>JSON.parse</code>をすぐに使うことができる。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/94197/andy-e" target="_blank" rel="external">Andy E</a> | 回答日時： 2011年2月8日 16:38 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>古いブラウザで<a href="http://bestiejs.github.com/json3/" target="_blank" rel="external">JSON 3</a>を使いたければ、こうやって条件付きでそれをロードすることができるよ：</p><figure class="highlight html"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="built_in">window</span>.JSON ||</span></div><div class="line"><span class="xml">    document.write('<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdnjs.cloudflare.com/ajax/libs/json3/3.2.4/json3.min.js"</span>&gt;</span><span class="javascript">&lt;\/scr<span class="string">'+'</span>ipt&gt;<span class="string">');</span></span></span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>これで標準のwindow.JSONオブジェクトはクライアントがどんなブラウザを使っていようと利用可能だよ。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1952201/huwiler" target="_blank" rel="external">huwiler</a> | 回答日時： 2013年4月19日 18:52 </div><br></p><hr><hr><h2 id="回答5"><a href="#回答5" class="headerlink" title="回答5:"></a>回答5:</h2><p>これならわかりやすいかな？：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> jsontext   = <span class="string">'&#123;"name":"x","age":"11"&#125;'</span>;</div><div class="line"><span class="keyword">var</span> getContact = <span class="built_in">JSON</span>.parse(jsontext);</div><div class="line"><span class="built_in">document</span>.write(getContact.name + <span class="string">", "</span> + getContact.age);</div><div class="line"></div><div class="line"><span class="comment">// Output: x, 11</span></div></pre></td></tr></table></figure><p>それか、<code>eval</code>関数を使うこともできるかな。次の例は、<code>eval</code>関数を使った例：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> jsontext   = <span class="string">'&#123;"name":"x","age":"11"&#125;'</span>;</div><div class="line"><span class="keyword">var</span> getContact = <span class="built_in">eval</span>(<span class="string">'('</span> + jsontext + <span class="string">')'</span>);</div><div class="line"><span class="built_in">document</span>.write(getContact.name + <span class="string">", "</span> + getContact.age);</div><div class="line"></div><div class="line"><span class="comment">// Output: x, 11</span></div></pre></td></tr></table></figure><p><code>JSON.parse</code>関数はより安全で、eval関数より速いから、JSON.parse関数を使うことをお勧めするよ。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/2609966/joke-sense10" target="_blank" rel="external">Joke_Sense10</a> | 回答日時： 2013年10月1日 7:42 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/4935632/parse-json-in-javascript" target="_blank" rel="external">Parse JSON in JavaScript? [duplicate]</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;JavascriptでJSONをパースしたんだけど。レスポンスとして考えてるのはこんな感じ：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; response = &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;result&quot;:true,&quot;count&quot;:1&amp;#125;&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;どうやったらresultとかcountとかの値を取ってこれる？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By          user605334 | 質問日時： 2011年2月8日 16:34 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="json" scheme="https://somatome.github.io/tags/json/"/>
    
      <category term="javascript" scheme="https://somatome.github.io/tags/javascript/"/>
    
      <category term="parsing" scheme="https://somatome.github.io/tags/parsing/"/>
    
  </entry>
  
  <entry>
    <title>サイズがバラバラなデータフレームを作成する [R]</title>
    <link href="https://somatome.github.io/2017/10/10/create-a-data-frame-of-unequal-lengths/"/>
    <id>https://somatome.github.io/2017/10/10/create-a-data-frame-of-unequal-lengths/</id>
    <published>2017-10-10T13:59:28.000Z</published>
    <updated>2017-10-10T13:59:28.071Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>データフレームって普通サイズが揃ってるけど、サイズの違うデータフレームって作る方法ある？１つのリストのバラバラな要素として保存するとかはしたくないんだ。なんでかって言うと、これを色んな人にCSVファイルとして送らないといけなくって、それをやるのはデータフレームが一番簡単だと思うから。</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">x = c(rep(<span class="string">"one"</span>,<span class="number">2</span>))</div><div class="line">y = c(rep(<span class="string">"two"</span>,<span class="number">10</span>))</div><div class="line">z = c(rep(<span class="string">"three"</span>,<span class="number">5</span>))</div><div class="line">cbind(x,y,z)</div></pre></td></tr></table></figure><p>上のコードでは、<code>cbind()</code>関数は短いcolumnをリサイクルして要素が10個あるようにしてるけど、これを要素が2,5,10個になるようにしたいんだ。<br>以下の方法も試したけどあんまり効率が良くない。</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">df = data.frame(one=c(rep(<span class="string">"one"</span>,<span class="number">2</span>),rep(<span class="string">""</span>,<span class="number">8</span>)), </div><div class="line">                two=c(rep(<span class="string">"two"</span>,<span class="number">10</span>)), three=c(rep(<span class="string">"three"</span>,<span class="number">5</span>), rep(<span class="string">""</span>,<span class="number">5</span>)))</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/406278/atmathew" target="_blank" rel="external">ATMathew</a> | 質問日時： 2011年8月25日 19:58 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>たぶん君の聞いてるのとは違うと思うけど、こんなのはどう？（別の方法は多分あると思うけど）</p><p>まず、ベクトルの長さが異なる場合、データは実際にテーブル状にはなってないよね。<br> CSVファイルを別のCSVファイルに保存するのはどう？複数のオブジェクトを格納できるasciiフォーマットもいいかも(<a href="http://cran.r-project.org/web/packages/rjson/index.html" target="_blank" rel="external">json</a>、<a href="http://www.omegahat.org/RSXML/" target="_blank" rel="external">XML</a>)。</p><p>もしテーブル状であるのがいいなら、NAで埋めてしまえばいい。</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">x = <span class="number">1</span>:<span class="number">5</span></div><div class="line">y = <span class="number">1</span>:<span class="number">12</span></div><div class="line">max.len = max(length(x), length(y))</div><div class="line">x = c(x, rep(<span class="literal">NA</span>, max.len - length(x)))</div><div class="line">y = c(y, rep(<span class="literal">NA</span>, max.len - length(y)))</div><div class="line">x</div><div class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span> <span class="literal">NA</span></div><div class="line">y</div><div class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span></div></pre></td></tr></table></figure><p>長さ位の違う列を持つ <code>data.frame</code>がいいなら、チェックをしないようにするとか。でもこれは自己責任で。</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; x = <span class="number">1</span>:<span class="number">5</span></div><div class="line">&gt; y = <span class="number">1</span>:<span class="number">12</span></div><div class="line">&gt; df = list(x=x, y=y)</div><div class="line">&gt; attributes(df) = list(names = names(df),</div><div class="line">    row.names=<span class="number">1</span>:max(length(x), length(y)), class=<span class="string">'data.frame'</span>)</div><div class="line">&gt; df</div><div class="line">      x  y</div><div class="line"><span class="number">1</span>     <span class="number">1</span>  <span class="number">1</span></div><div class="line"><span class="number">2</span>     <span class="number">2</span>  <span class="number">2</span></div><div class="line"><span class="number">3</span>     <span class="number">3</span>  <span class="number">3</span></div><div class="line"><span class="number">4</span>     <span class="number">4</span>  <span class="number">4</span></div><div class="line"><span class="number">5</span>     <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">6</span>  &lt;<span class="literal">NA</span>&gt;  <span class="number">6</span></div><div class="line"><span class="number">7</span>  &lt;<span class="literal">NA</span>&gt;  <span class="number">7</span></div><div class="line"> [ reached getOption(<span class="string">"max.print"</span>) -- omitted <span class="number">5</span> rows ]]</div><div class="line">Warning message:</div><div class="line">In format.data.frame(x, digits = digits, na.encode = <span class="literal">FALSE</span>) :</div><div class="line">  corrupt data frame: columns will be truncated or padded with NAs</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/371739/owen" target="_blank" rel="external">Owen</a> | 回答日時： 2011年8月25日 20:11 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>こんな風に出来るかも</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">L &lt;- list(x,y,z)</div><div class="line">cfun &lt;- <span class="keyword">function</span>(L) &#123;</div><div class="line">  pad.na &lt;- <span class="keyword">function</span>(x,len) &#123;</div><div class="line">   c(x,rep(<span class="literal">NA</span>,len-length(x)))</div><div class="line">  &#125;</div><div class="line">  maxlen &lt;- max(sapply(L,length))</div><div class="line">  do.call(data.frame,lapply(L,pad.na,len=maxlen))</div><div class="line">&#125;</div><div class="line"></div><div class="line">(テストはしてない)。</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/190277/ben-bolker" target="_blank" rel="external">Ben Bolker</a> | 回答日時： 2011年8月25日 20:08 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>パディングに対するもう1つのアプローチは：</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">na.pad &lt;- <span class="keyword">function</span>(x,len)&#123;</div><div class="line">    x[<span class="number">1</span>:len]</div><div class="line">&#125;</div><div class="line"></div><div class="line">makePaddedDataFrame &lt;- <span class="keyword">function</span>(l,<span class="keyword">...</span>)&#123;</div><div class="line">    maxlen &lt;- max(sapply(l,length))</div><div class="line">    data.frame(lapply(l,na.pad,len=maxlen),<span class="keyword">...</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line">x = c(rep(<span class="string">"one"</span>,<span class="number">2</span>))</div><div class="line">y = c(rep(<span class="string">"two"</span>,<span class="number">10</span>))</div><div class="line">z = c(rep(<span class="string">"three"</span>,<span class="number">5</span>))</div><div class="line"></div><div class="line">makePaddedDataFrame(list(x=x,y=y,z=z))</div></pre></td></tr></table></figure><p><code>na.pad()</code>関数は、存在しない要素を参照しようとすると自動的にNAで埋めたベクトルを返すRの機能を利用してる。</p><p><code>makePaddedDataFrame()</code>は一番長いものを見つけて、残りの部分を一致する長さに埋めるってことをやってる。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/148801/peter-m" target="_blank" rel="external">Peter M</a> | 回答日時： 2011年8月25日 20:19 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/7196450/create-a-data-frame-of-unequal-lengths" target="_blank" rel="external">Create a Data Frame of Unequal Lengths</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;データフレームって普通サイズが揃ってるけど、サイズの違うデータフレームって作る方法ある？１つのリストのバラバラな要素として保存するとかはしたくないんだ。なんでかって言うと、これを色んな人にCSVファイルとして送らないといけなくって、それをやるのはデータフレームが一番簡単だと思うから。&lt;/p&gt;
&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;x = c(rep(&lt;span class=&quot;string&quot;&gt;&quot;one&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;y = c(rep(&lt;span class=&quot;string&quot;&gt;&quot;two&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;z = c(rep(&lt;span class=&quot;string&quot;&gt;&quot;three&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cbind(x,y,z)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上のコードでは、&lt;code&gt;cbind()&lt;/code&gt;関数は短いcolumnをリサイクルして要素が10個あるようにしてるけど、これを要素が2,5,10個になるようにしたいんだ。&lt;br&gt;以下の方法も試したけどあんまり効率が良くない。&lt;/p&gt;
&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;df = data.frame(one=c(rep(&lt;span class=&quot;string&quot;&gt;&quot;one&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;),rep(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)), &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                two=c(rep(&lt;span class=&quot;string&quot;&gt;&quot;two&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)), three=c(rep(&lt;span class=&quot;string&quot;&gt;&quot;three&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;), rep(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)))&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/406278/atmathew&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ATMathew&lt;/a&gt; | 質問日時： 2011年8月25日 19:58 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="r" scheme="https://somatome.github.io/tags/r/"/>
    
      <category term="dataframe" scheme="https://somatome.github.io/tags/dataframe/"/>
    
  </entry>
  
  <entry>
    <title>変数を使用してオブジェクトプロパティに動的にアクセスする方法？ [Javascript]</title>
    <link href="https://somatome.github.io/2017/10/10/dynamically-access-object-property-using-variable/"/>
    <id>https://somatome.github.io/2017/10/10/dynamically-access-object-property-using-variable/</id>
    <published>2017-10-10T13:59:28.000Z</published>
    <updated>2017-10-10T14:19:17.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>動的な変数名を使ってオブジェクトのプロパティにアクセスしようとしてるんだけど、これって可能？</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> something = &#123; <span class="attr">bar</span>: <span class="string">"Foobar!"</span> &#125;;</div><div class="line"><span class="keyword">const</span> foo = <span class="string">'bar'</span>;</div><div class="line">something.foo; <span class="comment">// このsomething.bar, "Foobar!"を取得したい</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/471628/richw" target="_blank" rel="external">RichW</a> | 質問日時： 2010年11月22日 11:23 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>プロパティにアクセスするには<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors" target="_blank" rel="external">2つの方法</a><br>がある</p><ul><li>ドット表記： <code>something.bar</code></li><li>ブラケット記法： <code>something [&#39;bar&#39;]</code></li></ul><p>角かっこの間の値は、任意の式。だから、プロパティ名が変数に格納されている場合は、ブラケット表記を使用する必要があるよ。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> foo = <span class="string">'bar'</span>;</div><div class="line">something[foo];</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/185527/jan-han%c4%8di%c4%8d" target="_blank" rel="external">Jan Hančič</a> | 回答日時： 2010年11月22日 11:25 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>javascriptでは次の形でアクセスできるよ：</p><ul><li>ドット表記 -  <code>foo.bar</code></li><li>大括弧 -  <code>foo [someVar]</code>または <code>foo [&quot; string &quot;]</code></li></ul><p>でも2番目のケースだけがプロパティに動的にアクセスできる。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> foo = &#123; <span class="attr">pName1</span> : <span class="number">1</span>, <span class="attr">pName2</span> : [<span class="number">1</span>, &#123;<span class="attr">foo</span> : bar &#125;, <span class="number">3</span>] , ...&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> name = <span class="string">"pName"</span></div><div class="line"><span class="keyword">var</span> num  = <span class="number">1</span>;</div><div class="line"></div><div class="line">foo[name + num]; <span class="comment">// 1</span></div><div class="line"></div><div class="line"><span class="comment">// --</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> a = <span class="number">2</span>;</div><div class="line"><span class="keyword">var</span> b = <span class="number">1</span>;</div><div class="line"><span class="keyword">var</span> c = <span class="string">"foo"</span>;</div><div class="line"></div><div class="line">foo[name + a][b][c]; <span class="comment">// bar</span></div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1726507/sonique" target="_blank" rel="external">Sonique</a> | 回答日時： 2014年7月1日 15:40 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>以下は、オブジェクトのプロパティにアクセスする方法のES6での例。<br>2つの文字列を連結して動的に生成されたプロパティ名を使用してアクセスする方法。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> suffix = <span class="string">" name"</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person = &#123;</div><div class="line">    [<span class="string">"first"</span> + suffix]: <span class="string">"Nicholas"</span>,</div><div class="line">    [<span class="string">"last"</span> + suffix]: <span class="string">"Zakas"</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(person[<span class="string">"first name"</span>]);      <span class="comment">// "Nicholas"</span></div><div class="line"><span class="built_in">console</span>.log(person[<span class="string">"last name"</span>]);       <span class="comment">// "Zakas"</span></div></pre></td></tr></table></figure><p>これは<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#Computed_property_names" target="_blank" rel="external">計算されたプロパティ名 Computed property names</a>って呼ばれてる。</p><p><div style="text-align: right"> By  <a href="https://stackoverflow.com/users/1673376/zloctb" target="_blank" rel="external">zloctb</a> | 回答日時： 2016年8月2日 19:46 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/4244896/dynamically-access-object-property-using-variable" target="_blank" rel="external">Dynamically access object property using variable</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;動的な変数名を使ってオブジェクトのプロパティにアクセスしようとしてるんだけど、これって可能？&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; something = &amp;#123; &lt;span class=&quot;attr&quot;&gt;bar&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Foobar!&quot;&lt;/span&gt; &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; foo = &lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;something.foo; &lt;span class=&quot;comment&quot;&gt;// このsomething.bar, &quot;Foobar!&quot;を取得したい&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;https://stackoverflow.com/users/471628/richw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RichW&lt;/a&gt; | 質問日時： 2010年11月22日 11:23 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://somatome.github.io/tags/javascript/"/>
    
      <category term="object" scheme="https://somatome.github.io/tags/object/"/>
    
      <category term="properties" scheme="https://somatome.github.io/tags/properties/"/>
    
  </entry>
  
  <entry>
    <title>ディレクトリが存在しない場合、どうやって作ったらいいの？ [Python]</title>
    <link href="https://somatome.github.io/2017/09/29/how-can-i-create-a-directory-if-it-does-not-exist/"/>
    <id>https://somatome.github.io/2017/09/29/how-can-i-create-a-directory-if-it-does-not-exist/</id>
    <published>2017-09-29T20:05:53.000Z</published>
    <updated>2017-09-29T20:48:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>ファイルが書き込まれるディレクトリが存在するかどうかを調べて、もし存在しない場合は、Pythonを使ってディレクトリを作るための最もエレガントな方法って何？<br>以下は試したんだけど： </p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"></div><div class="line">file_path = <span class="string">"/my/directory/filename.txt"</span></div><div class="line">directory = os.path.dirname(file_path)</div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    os.stat(directory)</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    os.mkdir(directory)       </div><div class="line"></div><div class="line">f = file(filename)</div></pre></td></tr></table></figure><p>どういうわけか<code>os.path.exists</code>っていうのがあるのを知らなかったので、こうしたんだけど： </p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ensure_dir</span><span class="params">(file_path)</span>:</span></div><div class="line">    directory = os.path.dirname(file_path)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(directory):</div><div class="line">        os.makedirs(directory)</div></pre></td></tr></table></figure><p>これが自動的に行われるようにするような、 “open”のためのフラグってある？ </p><p><div style="text-align: right"> By  <a href="/users/13055/parand">Parand</a> | 質問日時： 2008年11月7日 18:56 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>２つ答えがあって、それぞれに良し悪しがあるんだけど、僕が書くなら：</p><p><a href="https://docs.python.org/2/library/os.path.html#os.path.exists" target="_blank" rel="external"><code>os.path.exists</code></a>を試してみて、ディレクトリを作るには<a href="https://docs.python.org/2/library/os.html#os.makedirs" target="_blank" rel="external"><code>os.makedirs</code></a>はどうかな。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(directory):</div><div class="line">    os.makedirs(directory)</div></pre></td></tr></table></figure><p>でもこれってちょっとややこしいんだ — もしディレクトリが <code>os.path.exists</code>と<code>os.makedirs</code>呼び出しの間に作られたら、<code>os.makedirs</code>は<code>OSError</code>で失敗する。残念だけど、助けを出す<code>OSError</code>とそれを実行し続けることはフールプルーフ(foolproof)じゃない。なぜなら、例えばアクセス許可がない場合とかディスク容量が無いとかの他の要因でディレクトリ作成が失敗してもそれを無視するからね。</p><p>1つのオプションは <code>OSError</code>をトラップし、埋め込まれたエラーコードを調べること。(<a href="https://stackoverflow.com/questions/273698/is-there-a-cross-platform-way-of-getting-information-from-pythons-oserror" target="_blank" rel="external">PythonのOSErrorから情報を取得するためのクロスプラットフォームの方法はありますか？</a>参照）：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> os, errno</div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    os.makedirs(directory)</div><div class="line"><span class="keyword">except</span> OSError <span class="keyword">as</span> e:</div><div class="line">    <span class="keyword">if</span> e.errno != errno.EEXIST:</div><div class="line">        <span class="keyword">raise</span></div></pre></td></tr></table></figure><p>あるいは、2つ目の <code>os.path.exists</code>っていうのも考えられるけど、仮に別の人が一つ目のチェックの後にディレクトリを作って、２つ目のチェックの前に削除してしまう、みたいな場合でもうまくいかない可能性がある。</p><p>アプリケーションによって、同時操作の危険性はファイルアクセス権とかの他の要因によって引き起こされる危険性よりも高かったり低かったり刷るから、開発者は実装を選ぶ前に開発されてる特定のアプリケーションと期待されてる環境の詳細をよく知ってる必要があるよね。</p><p><div style="text-align: right"> By  <a href="/users/1199/blair-conrad">Blair Conrad</a> | 回答日時： 2008年11月7日 19:06 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>try exceptとerrnoモジュールの正しいエラーコードを使えば、競合状態(race condition)の可能性を排除できるし、クロスプラットフォームでもあるよ：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> errno</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_sure_path_exists</span><span class="params">(path)</span>:</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        os.makedirs(path)</div><div class="line">    <span class="keyword">except</span> OSError <span class="keyword">as</span> exception:</div><div class="line">        <span class="keyword">if</span> exception.errno != errno.EEXIST:</div><div class="line">            <span class="keyword">raise</span></div></pre></td></tr></table></figure><p>つまり、ディレクトリを作成しようとしますが、すでに存在する場合はエラーを無視する。一方、その他のエラーは報告される。<br>たとえば、’a’というディレクトリをあらかじめ作成しておき、その中からすべての権限を削除すると、<code>errno.EACCES</code>で<code>OSError</code>が発生するよ(パーミッションが拒否されました。エラー13)。</p><p><div style="text-align: right"> By  <a href="/users/62596/heikki-toivonen">Heikki Toivonen</a> | 回答日時： 2011年2月17日 17:17 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>私は個人的には<code>os.path.exists()</code>よりも <code>os.path.isdir()</code>を使うのをおすすめするかな：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.exists(<span class="string">'/ tmp/dirname'</span>)</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.exists(<span class="string">'/ tmp/dirname/filename.etc'</span>)</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.isdir(<span class="string">'/ tmp/dirname/filename.etc'</span>)</div><div class="line"><span class="keyword">False</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.isdir(<span class="string">'/ tmp/fakedirname'</span>)</div><div class="line"><span class="keyword">False</span></div></pre></td></tr></table></figure><p>これがあるとして、</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>dir = raw_input(<span class="string">":: "</span>)</div></pre></td></tr></table></figure><p>そして、こんなバカみたいなユーザー入力があると：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">:: /tmp/dirname/filename.etc</div></pre></td></tr></table></figure><p>もし<code>os.path.exists()</code>でテストした場合、引数が<code>os.makedirs()</code>に渡されるから、<code>filename.etc</code>という名前のディレクトリができてしまうことになる。</p><p><div style="text-align: right"> By          crimsonstone | 回答日時： 2009年1月14日 17:57 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/273192/how-can-i-create-a-directory-if-it-does-not-exist" target="_blank" rel="external">How can I create a directory if it does not exist?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;ファイルが書き込まれるディレクトリが存在するかどうかを調べて、もし存在しない場合は、Pythonを使ってディレクトリを作るための最もエレガントな方法って何？&lt;br&gt;以下は試したんだけど： &lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;file_path = &lt;span class=&quot;string&quot;&gt;&quot;/my/directory/filename.txt&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;directory = os.path.dirname(file_path)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    os.stat(directory)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    os.mkdir(directory)       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;f = file(filename)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;どういうわけか&lt;code&gt;os.path.exists&lt;/code&gt;っていうのがあるのを知らなかったので、こうしたんだけど： &lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ensure_dir&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(file_path)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    directory = os.path.dirname(file_path)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; os.path.exists(directory):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        os.makedirs(directory)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;これが自動的に行われるようにするような、 “open”のためのフラグってある？ &lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/13055/parand&quot;&gt;Parand&lt;/a&gt; | 質問日時： 2008年11月7日 18:56 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://somatome.github.io/tags/python/"/>
    
      <category term="directory" scheme="https://somatome.github.io/tags/directory/"/>
    
      <category term="exception" scheme="https://somatome.github.io/tags/exception/"/>
    
  </entry>
  
  <entry>
    <title>git pullで強制的にローカルファイルを上書きするには？ [Git]</title>
    <link href="https://somatome.github.io/2017/09/29/how-do-i-force-git-pull-to-overwrite-local-files/"/>
    <id>https://somatome.github.io/2017/09/29/how-do-i-force-git-pull-to-overwrite-local-files/</id>
    <published>2017-09-29T17:42:38.000Z</published>
    <updated>2017-10-02T22:25:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><code>git pull</code>でローカルファイルを強制的に上書きするにはどうしたらいいの？</p><p>やろうとしてるのはこんな感じ：</p><ul><li>チームメンバーが取り組んでいるウェブサイトのテンプレートを変更</li><li>彼らは画像ディレクトリに画像を追加(ただし、ソース管理の下に追加することは忘れてる)</li><li>彼らは僕に「後で」メールで画像を送ってくる</li><li>で、僕が画像をソースコントロールの下に追加して、GitHubに他の変更と一緒に押し込んでる</li><li>でもGitはファイルを上書きしたくないので彼らはGitHubから更新をpullできない</li></ul><p>出て来るエラーは次の通り：</p><blockquote><p>error: Untracked working tree file ‘public/images/icon.gif’ would be overwritten by merge.<br>(訳：エラー：未処理の作業ツリーファイル’public/images/icon.gif’がマージによって上書きされます。)</p></blockquote><p>Gitにそれらを上書きさせるにはどうすればいい？その人(上書きされる人)はデザイナーで、通常は僕がそれらの競合を手作業で解決するから、サーバーには最新のバージョンがあって、彼らはただ彼らのコンピュータ内のファイルをで更新するだけでいいんだ。</p><p><div style="text-align: right"> By  <a href="/users/98046/jakub-troszok">Jakub Troszok</a> | 質問日時： 2009年7月14日 14:58 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><h2 id="重要：ローカルで変更があった場合、それらは失われる。-hardオプションがあろうがなかろうが、プッシュされていないローカルコミットは失われる"><a href="#重要：ローカルで変更があった場合、それらは失われる。-hardオプションがあろうがなかろうが、プッシュされていないローカルコミットは失われる" class="headerlink" title="重要：ローカルで変更があった場合、それらは失われる。--hardオプションがあろうがなかろうが、プッシュされていないローカルコミットは失われる[*]"></a>重要：ローカルで変更があった場合、それらは失われる。<code>--hard</code>オプションがあろうがなかろうが、プッシュされていないローカルコミットは失われる[*]</h2><p>Gitによって管理されてないファイルがある場合(例えば、アップロードされたユーザコンテント）、これらのファイルは影響を受けません。</p><hr><p>僕ははこれが一番いい方法だと思う：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git fetch --all</div></pre></td></tr></table></figure><p>次に、2つのオプションがある。</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git reset --hard origin/master</div></pre></td></tr></table></figure><p>または、他のブランチにいる場合：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git reset --hard origin/&lt;branch_name&gt;</div></pre></td></tr></table></figure><h3 id="説明："><a href="#説明：" class="headerlink" title="説明："></a>説明：</h3><p><code>git fetch</code>は、マージやリベースを試みずにリモートから最新のものをダウンロードする。</p><p>次に、 <code>git reset</code>はマスターブランチを君がちょうど取得したものにリセットする。<code>--hard</code>オプションは作業ツリー内のすべてのファイルを<code>origin/master</code>内のファイルに合わせて変更</p><hr><p>[*]：リセットする前に <code>master</code>からブランチを作成することによって現在のローカルコミットを維持することは可能であることは知っておくべきだと思う：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git checkout master</div><div class="line">git branch new-branch-to-save-current-commits</div><div class="line">git fetch --all</div><div class="line">git reset --hard origin/master</div></pre></td></tr></table></figure><p>この後、すべての古いコミットは <code>new-branch-to-save-current-commits</code>に保存される。ただしコミットされていない変更は(stagedのものでさえも)失われます。<br>だから必要なものを隠して、コミットしてね。</p><p><div style="text-align: right"> By  <a href="/users/489564/rna">RNA</a> | 回答日時： 2012年1月17日 0:02 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>これを試してみれば？：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git reset --hard HEAD</div><div class="line">git pull</div></pre></td></tr></table></figure><p>それで望む挙動になると思う。</p><p><div style="text-align: right"> By  <a href="/users/105562/travis-r">Travis R</a> | 回答日時： 2010年5月9日 19:45 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p><strong>警告： <code>git clean</code>はあなたの追跡されていないファイル/ディレクトリをすべて削除し、元に戻してしまうのに注意。</strong></p><hr><p>場合によっては <code>clean -f</code>が役に立たないこともある。untrackedなディレクトリがある場合、-dオプションも必要だよ：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git reset --hard HEAD</div><div class="line">git clean -f -d</div><div class="line">git pull</div></pre></td></tr></table></figure><p><strong>警告： <code>git clean</code>はあなたの追跡されていないファイル/ディレクトリをすべて削除し、元に戻してしまうのに注意。</strong></p><p><div style="text-align: right"> By  <a href="/users/667154/david-avsajanishvili">David Avsajanishvili</a> | 回答日時： 2011年3月19日 9:10 </div><br></p><hr><hr><a href="http://www.amazon.co.jp/gp/product/4873113911/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4873113911&linkCode=as2&tag=roosternews-22" target="_blank"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4873113911&Format=_SL400_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=roosternews-22" width="200" style="float: left; margin: 0 20px 20px 0;"></a><img src="http://www.assoc-amazon.jp/e/ir?t=roosternews-22&l=as2&o=9&a=4873113911" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;"><p>Source: <a href="https://stackoverflow.com/questions/1125968/how-do-i-force-git-pull-to-overwrite-local-files" target="_blank" rel="external">How do I force “git pull” to overwrite local files?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt;でローカルファイルを強制的に上書きするにはどうしたらいいの？&lt;/p&gt;
&lt;p&gt;やろうとしてるのはこんな感じ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;チームメンバーが取り組んでいるウェブサイトのテンプレートを変更&lt;/li&gt;
&lt;li&gt;彼らは画像ディレクトリに画像を追加(ただし、ソース管理の下に追加することは忘れてる)&lt;/li&gt;
&lt;li&gt;彼らは僕に「後で」メールで画像を送ってくる&lt;/li&gt;
&lt;li&gt;で、僕が画像をソースコントロールの下に追加して、GitHubに他の変更と一緒に押し込んでる&lt;/li&gt;
&lt;li&gt;でもGitはファイルを上書きしたくないので彼らはGitHubから更新をpullできない&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;出て来るエラーは次の通り：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;error: Untracked working tree file ‘public/images/icon.gif’ would be overwritten by merge.&lt;br&gt;(訳：エラー：未処理の作業ツリーファイル’public/images/icon.gif’がマージによって上書きされます。)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Gitにそれらを上書きさせるにはどうすればいい？その人(上書きされる人)はデザイナーで、通常は僕がそれらの競合を手作業で解決するから、サーバーには最新のバージョンがあって、彼らはただ彼らのコンピュータ内のファイルをで更新するだけでいいんだ。&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/98046/jakub-troszok&quot;&gt;Jakub Troszok&lt;/a&gt; | 質問日時： 2009年7月14日 14:58 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://somatome.github.io/tags/git/"/>
    
      <category term="version-control" scheme="https://somatome.github.io/tags/version-control/"/>
    
      <category term="overwrite" scheme="https://somatome.github.io/tags/overwrite/"/>
    
      <category term="git-pull" scheme="https://somatome.github.io/tags/git-pull/"/>
    
      <category term="git-fetch" scheme="https://somatome.github.io/tags/git-fetch/"/>
    
  </entry>
  
  <entry>
    <title>JavaScriptの配列から特定の要素を削除するにはどうすればいいの？ [Javascript]</title>
    <link href="https://somatome.github.io/2017/09/29/how-do-i-remove-a-particular-element-from-an-array-in-javascript/"/>
    <id>https://somatome.github.io/2017/09/29/how-do-i-remove-a-particular-element-from-an-array-in-javascript/</id>
    <published>2017-09-28T23:38:53.000Z</published>
    <updated>2017-09-29T17:50:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>整数の配列があって、要素を追加するために`.push()``メソッドを使用してるとする。</p><p>ここで、配列から特定の要素を削除する簡単な方法ってある？ <code>array.remove(int);</code>みたいな感じの。</p><p>ただし、JavaScript <em>のみ</em> を使用するとして。フレームワークは使えないんだ。</p><p><div style="text-align: right"> By  <a href="/users/364969/walker">Walker</a> | 質問日時： 2011年4月23日 22:17 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>まず、削除したい要素の <code>index</code>を見つけよう：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> array = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>];</div><div class="line"><span class="keyword">var</span> index = array.indexOf(<span class="number">5</span>);</div></pre></td></tr></table></figure><p>_注：<a href="http://kangax.github.io/compat-table/es5/#test-Array.prototype.indexOf" target="_blank" rel="external">indexOfのブラウザサポート</a>は限られてる。Internet Explorer 7および8ではサポートされてないよ。</p><p>次に、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice" target="_blank" rel="external"><code>splice</code></a>で削除する：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (index &gt; <span class="number">-1</span>) &#123;</div><div class="line">    array.splice(index, <span class="number">1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>splice</code>の2番目のパラメータは削除する要素の数。<code>splice</code>は配列の場所を変えて、削除された要素を含む新しい配列を返す。</p><hr><p>サポートされていないブラウザで <code>indexOf</code>が必要な場合は、以下の<code>polyfill</code>を試してみて。詳しくは<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Polyfill" target="_blank" rel="external"><strong><em>ここの<code>polyfill</code></em></strong></a>を参照。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.indexOf || (<span class="built_in">Array</span>.prototype.indexOf = <span class="function"><span class="keyword">function</span>(<span class="params">d, e</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> a;</div><div class="line">    <span class="keyword">if</span> (<span class="literal">null</span> == <span class="keyword">this</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">'"これ" はNULLまたは定義されていない'</span>);</div><div class="line">    <span class="keyword">var</span> c = <span class="built_in">Object</span>(<span class="keyword">this</span>),</div><div class="line">        b = c.length &gt;&gt;&gt; <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> === b) <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    a = +e || <span class="number">0</span>;</div><div class="line">    <span class="literal">Infinity</span> === <span class="built_in">Math</span>.abs(a) &amp;&amp; (a = <span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span> (a &gt;= b) <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    <span class="keyword">for</span> (a = <span class="built_in">Math</span>.max(<span class="number">0</span> &lt;= a ? a : b - <span class="built_in">Math</span>.abs(a), <span class="number">0</span>); a &lt; b;) &#123;</div><div class="line">        <span class="keyword">if</span> (a <span class="keyword">in</span> c &amp;&amp; c[a] === d) <span class="keyword">return</span> a;</div><div class="line">        a++</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">-1</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/613430/tom-wadley">Tom Wadley</a> | 回答日時： 2011年4月23日 22:23 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p><code>array.remove(int)</code>がどのように動作することを期待しているのか分からないけど、あなたが欲しいかもと思う答えは3つの可能性があるかな：</p><p>インデックスがiである配列の要素を削除するには：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">array.splice(i, <span class="number">1</span>);</div></pre></td></tr></table></figure><p>値 <code>number</code>を持つすべての要素を配列から削除する場合は、次のようにします。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = array.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</div><div class="line">    <span class="keyword">if</span>(array[i] === number) &#123;</div><div class="line">       array.splice(i, <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>インデックスのある要素<code>i</code>を削除したくて、でも他の要素のインデックスを変更したくないのなら、</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">delete</span> array[i];</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/546661/peter-olson">Peter Olson</a> | 回答日時： 2011年4月23日 22:20 </div><br></p><hr><hr><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/5767325/how-do-i-remove-a-particular-element-from-an-array-in-javascript" target="_blank" rel="external">How do I remove a particular element from an array in JavaScript?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;整数の配列があって、要素を追加するために`.push()``メソッドを使用してるとする。&lt;/p&gt;
&lt;p&gt;ここで、配列から特定の要素を削除する簡単な方法ってある？ &lt;code&gt;array.remove(int);&lt;/code&gt;みたいな感じの。&lt;/p&gt;
&lt;p&gt;ただし、JavaScript &lt;em&gt;のみ&lt;/em&gt; を使用するとして。フレームワークは使えないんだ。&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/364969/walker&quot;&gt;Walker&lt;/a&gt; | 質問日時： 2011年4月23日 22:17 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://somatome.github.io/tags/javascript/"/>
    
      <category term="arrays" scheme="https://somatome.github.io/tags/arrays/"/>
    
  </entry>
  
  <entry>
    <title>JSONでコメントって使用できる？ [JSON]</title>
    <link href="https://somatome.github.io/2017/09/29/can-comments-be-used-in-json/"/>
    <id>https://somatome.github.io/2017/09/29/can-comments-be-used-in-json/</id>
    <published>2017-09-28T23:20:46.000Z</published>
    <updated>2017-09-29T01:23:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>JSONファイル内でコメントって使用できる？もしそうなら、どうやるの？</p><p><div style="text-align: right"> By  <a href="/users/4105/michael-gundlach">Michael Gundlach</a> | 質問日時： 2008年10月28日 20:39 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>できるとは思わないなー。JSONはすべてデータである必要があるから、コメントを追加するとそれもデータになるよ。</p><p>JSONデータを使用するアプリケーションでは無視される（例えば）”_comment” という指定のデータ要素を持つことができると思うけど。</p><p>JSONを生成/受信するプロセスの中にコメントを入れておいたほうがいいんじゃないかな。だってそのプロセスはJSONデータが何かを（少なくともJSONの構造については）事前に知っているはずなので。</p><p>でも、もしどうしてもって言うのなら：</p><figure class="highlight json"><table><tr><td class="code"><pre><div class="line">&#123;</div><div class="line">   <span class="attr">"_comment"</span>: <span class="string">"コメントはここに.."</span>,</div><div class="line">   <span class="attr">"glossary"</span>: &#123;</div><div class="line">      <span class="attr">"title"</span>: <span class="string">"example glossary"</span>,</div><div class="line">      <span class="attr">"GlossDiv"</span>: &#123;</div><div class="line">         <span class="attr">"title"</span>: <span class="string">"S"</span>,</div><div class="line">         <span class="attr">"GlossList"</span>: &#123;</div><div class="line">            <span class="attr">"GlossEntry"</span>: &#123;</div><div class="line">               <span class="attr">"ID"</span>: <span class="string">"SGML"</span>,</div><div class="line">               <span class="attr">"SortAs"</span>: <span class="string">"SGML"</span>,</div><div class="line">               <span class="attr">"GlossTerm"</span>: <span class="string">"Standard Generalized Markup Language"</span>,</div><div class="line">               <span class="attr">"Acronym"</span>: <span class="string">"SGML"</span>,</div><div class="line">               <span class="attr">"Abbrev"</span>: <span class="string">"ISO 8879:1986"</span>,</div><div class="line">               <span class="attr">"GlossDef"</span>: &#123;</div><div class="line">                  <span class="attr">"para"</span>: <span class="string">"A meta-markup language, used to create markup languages such as DocBook."</span>,</div><div class="line">                  <span class="attr">"GlossSeeAlso"</span>: [<span class="string">"GML"</span>, <span class="string">"XML"</span>]</div><div class="line">               &#125;,</div><div class="line">               <span class="attr">"GlossSee"</span>: <span class="string">"markup"</span></div><div class="line">            &#125;</div><div class="line">         &#125;</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/27580/eli">Eli</a> | 回答日時： 2008年10月28日 21:01 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p><strong>ダメ</strong>。 <code>// ...</code>とか <code>/ * ... * /</code>の形式のコメントはJSONには無いよ。以下を参照：</p><ul><li><a href="http://www.json.org" target="_blank" rel="external">http://www.json.org</a></li><li><a href="http://www.ietf.org/rfc/rfc4627.txt" target="_blank" rel="external">RFC 4627</a>：JavaScript Object Notation(JSON)の<code>application/json</code>メディアタイプ</li><li><a href="http://www.ietf.org/rfc/rfc7159.txt" target="_blank" rel="external">RFC 7159</a>JavaScript Object Notation(JSON)データ交換フォーマット - 廃止：4627,7158</li></ul><p><div style="text-align: right"> By  <a href="/users/240733/stakx">stakx</a> | 回答日時： 2010年11月15日 9:32 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>コメントは設計上JSONから削除されたよ。</p><blockquote><p>私はJSONからコメントを削除しました。なぜなら、構文解析ディレクティブを保持するのにJSONのコメントを使用してる人を見たことがあるから。このやり方は相互運用性を破壊してしまう。 私は、コメントが無いことによって落胆する人々がいることも知ってるけど、でもコメントはあるべきじゃない。</p><p>JSONを使用したconfigurationファイルがあるとする（そしてそれに注釈を付けたい）。好きなコメントをすべて挿入したらいい。でもその後JSONパーサに渡す前にJSMinでパイプ処理してください。</p></blockquote><p>出典：<a href="https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr" target="_blank" rel="external">G +でのDouglas Crockfordの公式声明</a></p><p><div style="text-align: right"> By  <a href="/users/572370/artur-czajka">Artur Czajka</a> | 回答日時： 2012年6月11日 8:52 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/244777/can-comments-be-used-in-json" target="_blank" rel="external">Can comments be used in JSON?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;JSONファイル内でコメントって使用できる？もしそうなら、どうやるの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/4105/michael-gundlach&quot;&gt;Michael Gundlach&lt;/a&gt; | 質問日時： 2008年10月28日 20:39 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="json" scheme="https://somatome.github.io/tags/json/"/>
    
      <category term="comments" scheme="https://somatome.github.io/tags/comments/"/>
    
  </entry>
  
  <entry>
    <title>JavaScriptでの比較で、等号演算子（== vs ===）のどっちを使うべき？ [Javascript]</title>
    <link href="https://somatome.github.io/2017/09/28/which-equals-operator-vs-should-be-used-in-javascript-comparisons/"/>
    <id>https://somatome.github.io/2017/09/28/which-equals-operator-vs-should-be-used-in-javascript-comparisons/</id>
    <published>2017-09-28T22:43:32.000Z</published>
    <updated>2017-10-02T19:23:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><a href="http://en.wikipedia.org/wiki/JSLint" target="_blank" rel="external">JSLint</a>を使ってて、<code>if</code>文の中で<code>idSele_UNVEHtype.value.length == 0</code>を比較する時とか、<code>==</code>(2つの等号)を<code>===</code>(3つの等号)で置き換えろ、ってサジェストが出るんだけど、<code>==</code>を<code>===</code>に置き換えるとパフォーマンス上のメリットとかってある？</p><p>比較演算子をいっぱい使ってるので、パフォーマンスの改善は歓迎なんだけど。。。</p><p>型変換が行われない場合は、<code>==</code>を置き換えるメリットってある？</p><p><div style="text-align: right"> By  <a href="/users/44990/bcasp">bcasp</a> | 質問日時： 2008年12月11日 14:19 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>型変換が行われていないことを除けば、同一性(<code>===</code>)演算子は、等価(<code>==</code>)と同じように動作するよ。等しいとみなされるためには型は同じでなければだめ。</p><p>リファレンス：<a href="http://www.c-point.com/javascript_tutorial/jsgrpComparison.htm" target="_blank" rel="external">Javascriptチュートリアル：比較オペレータ</a></p><p><code>==</code>演算子は、<em>必要な型を実行した後</em>、等価性を比較する。<code>===&#39; 演算子はその変換をしないので、2つの値が同じ型じゃない時、</code>===<code>は単に</code>false`を返す。どちらもおんなじぐらい速いかな。</p><p>ダグラス・クロフォードの優れた本<a href="http://rads.stackoverflow.com/amzn/click/0596517742" target="_blank" rel="external">JavaScript：The Good Parts</a>を引用すると、</p><blockquote><p>JavaScriptには、2種類の等価演算子、<code>===</code>と<code>!==</code>、そして出来の悪い双子 <code>==</code>と <code>!=</code>がある。良い子の方は、君が期待する方法で動作するだろう。もし2つのオペランドが同じ型で同じ値を持つなら、<code>===</code>は<code>true</code>を返し、<code>!==</code>は<code>false</code>を返す。邪悪な双子の方はオペランドの型が同じなら同じように働くけど、型が異なる場合は値を強制しようとする。このルールはは複雑で覚えてなんかいられない。下は一例：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">&gt; <span class="string">''</span> == <span class="string">'0'</span>           <span class="comment">// false</span></div><div class="line">&gt; <span class="number">0</span> == <span class="string">''</span>             <span class="comment">// true</span></div><div class="line">&gt; <span class="number">0</span> == <span class="string">'0'</span>            <span class="comment">// true</span></div><div class="line">&gt;</div><div class="line">&gt; <span class="literal">false</span> == <span class="string">'false'</span>    <span class="comment">// false</span></div><div class="line">&gt; <span class="literal">false</span> == <span class="string">'0'</span>        <span class="comment">// true</span></div><div class="line">&gt;</div><div class="line">&gt; <span class="literal">false</span> == <span class="literal">undefined</span>  <span class="comment">// false</span></div><div class="line">&gt; <span class="literal">false</span> == <span class="literal">null</span>       <span class="comment">// false</span></div><div class="line">&gt; <span class="literal">null</span> == <span class="literal">undefined</span>   <span class="comment">// true</span></div><div class="line">&gt;</div><div class="line">&gt; <span class="string">' \t\r\n '</span> == <span class="number">0</span>     <span class="comment">// true</span></div><div class="line">&gt;</div></pre></td></tr></table></figure></blockquote><p>&gt;</p><blockquote><p>推移性の欠如は気をつけるべき。僕のアドバイスは悪い双子をを使わないことだ。代わりに、常に<code>===</code>と <code>!==</code>を使用すること。<code>===</code>演算子では上でのすべての比較に<code>false</code>を返すから。</p></blockquote><hr><p>###更新：</p><p>参照までに、(特別な場合を除き)型<code>==</code>と<code>===</code>はお互い一貫して同じように動作するよ。<br>別のもの。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</div><div class="line"><span class="keyword">var</span> b = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</div><div class="line"></div><div class="line"><span class="keyword">var</span> c = &#123; <span class="attr">x</span>: <span class="number">1</span>, <span class="attr">y</span>: <span class="number">2</span> &#125;;</div><div class="line"><span class="keyword">var</span> d = &#123; <span class="attr">x</span>: <span class="number">1</span>, <span class="attr">y</span>: <span class="number">2</span> &#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> e = <span class="string">"text"</span>;</div><div class="line"><span class="keyword">var</span> f = <span class="string">"te"</span> + <span class="string">"xt"</span>;</div><div class="line"></div><div class="line">a == b            <span class="comment">// false</span></div><div class="line">a === b           <span class="comment">// false</span></div><div class="line"></div><div class="line">c == d            <span class="comment">// false</span></div><div class="line">c === d           <span class="comment">// false</span></div><div class="line"></div><div class="line">e == f            <span class="comment">// true</span></div><div class="line">e === f           <span class="comment">// true</span></div></pre></td></tr></table></figure><p>特殊なケースは、リテラルを評価するオブジェクトと比較する場合。<code>toString</code>や<code>valueOf</code>メソッドのために同じリテラルに変換する。例えば、文字列リテラルと、<code>String</code>コンストラクタによって作られた文字列オブジェクトの比較を見てみよう：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="string">"abc"</span> == <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"abc"</span>)    <span class="comment">// true</span></div><div class="line"><span class="string">"abc"</span> === <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"abc"</span>)   <span class="comment">// false</span></div></pre></td></tr></table></figure><p>ここで、 <code>==</code>演算子は2つのオブジェクトの値をチェックし、<code>true</code>だけど、<code>===</code>はそれらが同じ型ではないので<code>false</code>。どちらが正しいか？それは君が比較しようとしているものに依存するね。僕のアドバイスは、そんな質問は忘れて、文字列オブジェクトを作るために<code>String</code>コンストラクタを使わないこと。</p><p><strong>参照</strong><br><a href="http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3" target="_blank" rel="external">http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3</a></p><p><div style="text-align: right"> By  <a href="/users/1288/bill-the-lizard">Bill the Lizard</a> | 回答日時： 2008年12月11日 14:25 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p><code>==</code>演算子(<em>Equality</em>)を使うと、</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="literal">true</span> == <span class="number">1</span>; <span class="comment">// true、 'true'は1に変換されて比較される</span></div><div class="line"><span class="string">"2"</span> == <span class="number">2</span>;  <span class="comment">// true、 "2"が2に変換されて比較されるため</span></div></pre></td></tr></table></figure><p><code>===</code>演算子(<em>Identity</em>)を使用すると、</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="literal">true</span> === <span class="number">1</span>; <span class="comment">//false</span></div><div class="line"><span class="string">"2"</span> === <span class="number">2</span>;  <span class="comment">//false</span></div></pre></td></tr></table></figure><p>これは、<strong>等価演算子<code>==</code>は型強制</strong>を行うため。つまり、インタプリタは暗黙的に比較する前に値を変換しようとする。</p><p>一方、<strong>アイデンティティ演算子 <code>===</code>は型強制をしない</strong>、だから比較の際には値を変換しないよ。</p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/359494/which-equals-operator-vs-should-be-used-in-javascript-comparisons" target="_blank" rel="external">Which equals operator (== vs ===) should be used in JavaScript comparisons?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/JSLint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JSLint&lt;/a&gt;を使ってて、&lt;code&gt;if&lt;/code&gt;文の中で&lt;code&gt;idSele_UNVEHtype.value.length == 0&lt;/code&gt;を比較する時とか、&lt;code&gt;==&lt;/code&gt;(2つの等号)を&lt;code&gt;===&lt;/code&gt;(3つの等号)で置き換えろ、ってサジェストが出るんだけど、&lt;code&gt;==&lt;/code&gt;を&lt;code&gt;===&lt;/code&gt;に置き換えるとパフォーマンス上のメリットとかってある？&lt;/p&gt;
&lt;p&gt;比較演算子をいっぱい使ってるので、パフォーマンスの改善は歓迎なんだけど。。。&lt;/p&gt;
&lt;p&gt;型変換が行われない場合は、&lt;code&gt;==&lt;/code&gt;を置き換えるメリットってある？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/44990/bcasp&quot;&gt;bcasp&lt;/a&gt; | 質問日時： 2008年12月11日 14:19 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://somatome.github.io/tags/javascript/"/>
    
      <category term="operators" scheme="https://somatome.github.io/tags/operators/"/>
    
      <category term="equality" scheme="https://somatome.github.io/tags/equality/"/>
    
      <category term="equality-operator" scheme="https://somatome.github.io/tags/equality-operator/"/>
    
      <category term="identity-operator" scheme="https://somatome.github.io/tags/identity-operator/"/>
    
  </entry>
  
  <entry>
    <title>Gitリポジトリを以前のコミットに戻すには？ [Git]</title>
    <link href="https://somatome.github.io/2017/09/28/how-to-revert-git-repository-to-a-previous-commit/"/>
    <id>https://somatome.github.io/2017/09/28/how-to-revert-git-repository-to-a-previous-commit/</id>
    <published>2017-09-28T20:17:49.000Z</published>
    <updated>2017-09-28T23:15:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>現在の状態から、あるコミットの時点でのスナップショットに戻すのってどうやればいいの？<br><code>git log</code>をすると、こんなのが出力されるんだけど：<br><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">$ git <span class="built_in">log</span></div><div class="line">commit a867b4af366350be2e7c21b8de9cc6504678a61b`</div><div class="line">Author: Me &lt;me@me.com&gt;</div><div class="line">Date:   Thu 11月 4 18:59:41 2010 -0400</div><div class="line"></div><div class="line">なんとかかんとか...</div><div class="line"></div><div class="line">commit 25eee4caef46ae64aa08e8ab3f988bc917ee1ce4</div><div class="line">Author: Me &lt;me@me.com&gt;</div><div class="line">Date:   Thu 11月 4 05:13:39 2010 -0400</div><div class="line"></div><div class="line">なんとかかんとかかんとか...</div><div class="line"></div><div class="line">commit 0766c053c0ea2035e90f504928f8df3c9363b8bd</div><div class="line">Author: Me &lt;me@me.com&gt;</div><div class="line">Date:   Thu 11月 4 00:55:06 2010 -0400</div><div class="line"></div><div class="line">さらになんとかかんとか...</div><div class="line"></div><div class="line">commit 0d1d7fc32e5a947fbd92ee598033d85bfc445a50</div><div class="line">Author: Me &lt;me@me.com&gt;</div><div class="line">Date:   Wed 11月 3 23:56:08 2010 -0400</div><div class="line"></div><div class="line">そう、もっともっとなんとかかんとか...</div></pre></td></tr></table></figure></p><p>どうやってここから11月3日、つまりコミット0d1d7fc…に戻せばいいの？</p><p><div style="text-align: right"> By  <a href="/users/111174/crazy-serb">Crazy Serb</a> | 質問日時： 2010年11月6日 16:58 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>これは”元に戻す”がどういう意味かによるかな。</p><h2 id="一時的に別のコミットに切り替える"><a href="#一時的に別のコミットに切り替える" class="headerlink" title="一時的に別のコミットに切り替える"></a>一時的に別のコミットに切り替える</h2><p>もし一時的にそれに戻して、なんか作業して、また元に戻ってきたいのなら、望みのコミットをチェックアウトすればいい：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line"><span class="comment"># これはHEADを切り離す、つまり、ブランチをチェックアウトしないままにする：</span></div><div class="line">git checkout 0d1d7fc32</div></pre></td></tr></table></figure><p>または、そこに戻してる間にコミットしたい場合は、そこにいる間に新しいブランチを作るべき：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git checkout -b old-state 0d1d7fc32</div></pre></td></tr></table></figure><p>元の場所に戻るには、もう一度あなたがいた支店をチェックしてください。 (If<br>ブランチを切り替えるときはいつものように変更を加えました。<br>必要に応じてそれらと一緒に。あなたはそれらを捨てるようにリセットすることができます。あなたは隠れて、<br>チェックアウトして、あなたと一緒に連れていってください。それらをブランチにコミットすることができます<br>そこに支店が必要な場合はそこに。)</p><p>##非公開のコミットをハード削除する</p><p>一方で、あなたが本当にやったことすべてを取り除きたいのであれば<br>それ以来、2つの可能性があります。 1つ、あなたが<br>これらのコミットは、単にリセットします：</p><pre><code>＃これにより、ローカルの変更はすべて破棄されます。＃コミットしたくない作業が残っている場合は、実行しないでください。git reset --hard 0d1d7fc32＃あるいは、保存する作業がある場合：git stashgit reset --hard 0d1d7fc32git stash pop＃これは変更を保存し、リセット後にそのパッチを再適用します。＃マージの競合が発生する可能性があります。＃あなたがリセットしたコミットから変更されました。</code></pre><p>面倒なことがあれば、あなたはすでにローカルの変更を投げ捨てましたが、<br>もう一度リセットすることで、以前の場所に戻ってください。</p><p>##新しいコミットでコミットされたコミットを元に戻す</p><p>一方、あなたが作品を発表した場合、おそらく<br>ブランチをリセットすると、効果的に履歴を書き換えられるからです。その場合、<br>あなたは確かにコミットを元に戻すことができます。 Gitを使うと、元に戻すことは非常に特殊です<br>意味：逆パッチでコミットを作成して取り消します。このようにして<br>履歴を書き換えないでください。</p><pre><code>＃これは3つの別々の復帰コミットを作成します：git revert a867b4af 25eee4ca 0766c053＃それはまた範囲を取る。これは最後の2つのコミットを元に戻します：git revert HEAD〜2..HEAD＃同様に、コミットハッシュを使用して一連のコミットを元に戻すことができます。git revert a867b4af..0766c053＃マージコミットを元に戻すgit revert -m 1 &lt;merge_commit_sha&gt;＃ちょうど1つを得るには、 `rebase -i`を使って後でそれらを押しつぶすことができます＃または、手動で行うこともできます(リポジトリのトップレベルでこれを行うことを忘れないでください)＃HEADを変更せずに、あなたのインデックスと作業ツリーを目的の状態にする：git checkout 0d1d7fc32。＃次にコミットします。あなたがやったことを説明する良いメッセージを書いてくださいgit commit</code></pre><p><a href="http://schacon.github.com/git/git-revert.html" target="_blank" rel="external"><code>git-revert</code>マンページ</a><br>実際にはその説明で多くのことをカバーしています。もう一つの役に立つリンクは[this<br>git-scm.comブログ投稿でgit-revertについて議論する(http：// git-<br>scm.com/blog/2010/03/02/undoing-merges.html)。</p><p>あなたが結局元に戻したくないと決めたら、元に戻すことができます<br>(ここで説明したように)、または元に戻す前にリセットすることができます(前の<br>セクション)。</p><p>この回答は、この場合に役立ちます：<br><a href="https://stackoverflow.com/questions/34519665/how-to-move-head-forward-checkout-revet-reflog-reset/34519716＃34519716" target="_blank" rel="external">HEADを元の場所に戻す方法は？ (分離された<br>head)</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># This will destroy any local modifications.</div><div class="line"># Don&apos;t do it if you have uncommitted work you want to keep.</div><div class="line">git reset --hard 0d1d7fc32</div><div class="line"></div><div class="line"># Alternatively, if there&apos;s work to keep:</div><div class="line">git stash</div><div class="line">git reset --hard 0d1d7fc32</div><div class="line">git stash pop</div><div class="line"># This saves the modifications, then reapplies that patch after resetting.</div><div class="line"># You could get merge conflicts, if you&apos;ve modified things which were</div><div class="line"># changed since the commit you reset to.</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># This will create three separate revert commits:</div><div class="line">git revert a867b4af 25eee4ca 0766c053</div><div class="line"></div><div class="line"># It also takes ranges. This will revert the last two commits:</div><div class="line">git revert HEAD~2..HEAD</div><div class="line"></div><div class="line">#Similarly, you can revert a range of commits using commit hashes:</div><div class="line">git revert a867b4af..0766c053</div><div class="line"></div><div class="line"># Reverting a merge commit</div><div class="line">git revert -m 1 &lt;merge_commit_sha&gt;</div><div class="line"></div><div class="line"># To get just one, you could use `rebase -i` to squash them afterwards</div><div class="line"># Or, you could do it manually (be sure to do this at top level of the repo)</div><div class="line"># get your index and work tree into the desired state, without changing HEAD:</div><div class="line">git checkout 0d1d7fc32 .</div><div class="line"></div><div class="line"># Then commit. Be sure and write a good message describing what you just did</div><div class="line">git commit</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/119963/jefromi">Jefromi</a> | 回答日時： Nov 6 2010 at 17:04 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><h3 id="作業コピーを最新のコミットに戻す"><a href="#作業コピーを最新のコミットに戻す" class="headerlink" title="作業コピーを最新のコミットに戻す"></a>作業コピーを最新のコミットに戻す</h3><p>以前のコミットに戻し、変更を無視するには：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git reset --hard HEAD</div></pre></td></tr></table></figure><p>HEADは現在のブランチの最後のコミットね。</p><h3 id="作業コピーを古いコミットに戻す"><a href="#作業コピーを古いコミットに戻す" class="headerlink" title="作業コピーを古いコミットに戻す"></a>作業コピーを古いコミットに戻す</h3><p>直近のコミットよりも古いコミットに戻すには：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line"><span class="comment"># インデックスを以前のコミットにリセットする。 '56e05fced'は適宜書き換えて</span></div><div class="line">git reset 56e05fced</div><div class="line"></div><div class="line"><span class="comment"># ポインタを前のHEADに戻す</span></div><div class="line">git reset --soft HEAD@&#123;1&#125;</div><div class="line"></div><div class="line">git commit -m <span class="string">"56e05fcedに戻す"</span></div><div class="line"></div><div class="line"><span class="comment"># 新しいコミットを反映するように作業コピーを更新する</span></div><div class="line">git reset --hard</div></pre></td></tr></table></figure><p>元ネタは同じような質問のページ: <a href="https://stackoverflow.com/questions/1895059/revert-to-a-commit-by-a-sha-hash-in-git" target="_blank" rel="external">SHAハッシュで以前のコミットに戻る方法？</a></p><p><div style="text-align: right"> By  <a href="/users/1276506/boulder-ruby">boulder_ruby</a> | 回答日時： Aug 21 ‘12 at 6:19 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>複雑でヤバい答えがたくさんあるけど、実際は簡単：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git revert --no-commit 0766c053..HEAD</div><div class="line">git commit</div></pre></td></tr></table></figure><p>これは、HEADからコミットハッシュに戻ってすべてを元に戻すよ。つまり、すべてのコミットがその状態に戻ったかのように作業ツリー内のそのコミット状態を再び作成してる。。それから現在のツリーをコミットすると、「元に戻した」コミットと本質的に同等の新しいコミットをするよ。</p><p>(<code>--no-commit</code>フラグは、すべてのコミットを一度に元に戻す - そうじゃければ範囲内の各コミットのコメントを入れるように促される、これはコミット履歴を不要な新しいコミットのゴミで汚しちゃうけど)</p><p>重要なのは、これは以前の状態にロールバックする<strong>安全かつ簡単な方法</strong>だってこと。履歴は壊されることなく、すでに公開されているコミットに使用することができる。</p><p><div style="text-align: right"> By  <a href="/users/165673/yarin">Yarin</a> | 回答日時： Feb 12 ‘14 at 4:18 </div><br></p><hr><hr><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><p>僕にとっては（たぶん他の人にも）、一番いいのはGitリセットオプションだよ：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git reset --hard &lt;commidId&gt; &amp;amp;&amp;amp; git clean -f</div></pre></td></tr></table></figure><p>これは僕にとって最高の選択肢だった！シンプルで、速く、効果的！</p><hr><p><strong>注意：</strong> でも古いコミットのコピーを持っている他の人とブランチを共有している場合は、この方法は使わないこと！</p><p>あと、あんまりヤバくない方法がお好みの時は、</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git clean -i</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/1606432/pogrindis">Pogrindis</a> | 回答日時： Oct 22 ‘13 at 11:53 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/4114095/how-to-revert-git-repository-to-a-previous-commit" target="_blank" rel="external">How to revert Git repository to a previous commit?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;現在の状態から、あるコミットの時点でのスナップショットに戻すのってどうやればいいの？&lt;br&gt;&lt;code&gt;git log&lt;/code&gt;をすると、こんなのが出力されるんだけど：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;commit a867b4af366350be2e7c21b8de9cc6504678a61b`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Author: Me &amp;lt;me@me.com&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date:   Thu 11月 4 18:59:41 2010 -0400&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;なんとかかんとか...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;commit 25eee4caef46ae64aa08e8ab3f988bc917ee1ce4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Author: Me &amp;lt;me@me.com&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date:   Thu 11月 4 05:13:39 2010 -0400&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;なんとかかんとかかんとか...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;commit 0766c053c0ea2035e90f504928f8df3c9363b8bd&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Author: Me &amp;lt;me@me.com&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date:   Thu 11月 4 00:55:06 2010 -0400&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;さらになんとかかんとか...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;commit 0d1d7fc32e5a947fbd92ee598033d85bfc445a50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Author: Me &amp;lt;me@me.com&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date:   Wed 11月 3 23:56:08 2010 -0400&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;そう、もっともっとなんとかかんとか...&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;どうやってここから11月3日、つまりコミット0d1d7fc…に戻せばいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/111174/crazy-serb&quot;&gt;Crazy Serb&lt;/a&gt; | 質問日時： 2010年11月6日 16:58 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://somatome.github.io/tags/git/"/>
    
      <category term="git-reset" scheme="https://somatome.github.io/tags/git-reset/"/>
    
      <category term="git-revert" scheme="https://somatome.github.io/tags/git-revert/"/>
    
      <category term="git-checkout" scheme="https://somatome.github.io/tags/git-checkout/"/>
    
  </entry>
  
  <entry>
    <title>ローカルGitブランチの名前を変更するにはどうすればいい？ [Git]</title>
    <link href="https://somatome.github.io/2017/09/26/how-do-i-rename-a-local-git-branch/"/>
    <id>https://somatome.github.io/2017/09/26/how-do-i-rename-a-local-git-branch/</id>
    <published>2017-09-26T10:40:46.000Z</published>
    <updated>2017-09-26T10:56:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><em><a href="https://stackoverflow.com/questions/1526794/rename-master-branch-for-both-local-and-remote-git-repositories?answertab=votes#tab-top" target="_blank" rel="external">ローカルとリモートの両方のGitリポジトリのMaster branchの名前を変更する</a></em>に書いてあるように、リモートブランチの名前は変更したくないんだけど。</p><p>リモートブランチにプッシュされていないローカルブランチの名前を変更するにはどうしたらいいの？</p><p><div style="text-align: right"> By  <a href="/users/338204/forrest">Forrest</a> | 質問日時： Jul 6 ‘11 at 3:20 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>あるブランチを指定してそのブランチの名前を変更する場合は、次のようにやればいいよ。</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git branch -m &lt;oldname&gt; &lt;newname&gt;</div></pre></td></tr></table></figure><p>今使ってるブランチの名前を変更するには、次のように</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">git branch -m &lt;newname&gt;</div></pre></td></tr></table></figure><p>これを覚えておくには、 <code>-m</code>は”move”(または<code>mv</code>)、つまりファイル名の変更だ、って覚えておくといいかも。</p><p><div style="text-align: right"> By  <a href="/users/394487/siride">siride</a> | 回答日時： Jul 6 ‘11 at 3:21 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git branch -m old_branch_name new_branch_name</div></pre></td></tr></table></figure><p>このコマンドで名前を変えられるけど、この名前を変更したブランチを使う時は注意。なぜなら、これはまだ古い上流ブランチを参照してるから（もしそれが存在するのであれば）。</p><p>ローカルブランチを(例えば)<code>new_branch_name</code>に名前を変更した後、変更をマスターにプッシュしたい場合は：</p><p><code>git push origin new_branch_name：master</code>(この変更はマスターブランチに行くけど、君のローカルブランチ名は<code>new_branch_name</code>だよ)</p><p>詳細については、「<a href="http://madhan-tech-updates.blogspot.in/2013/01/how-to-rename-your-local-branch-name-in.html" target="_blank" rel="external">ローカルGitブランチ名の名前を変更する方法</a>」を参照。</p><p><div style="text-align: right"> By  <a href="/users/1996609/madhan-ayyasamy">Madhan Ayyasamy</a> | 回答日時： Jan 21 ‘13 at 9:49 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>ブランチの名前を変更する手順は次のとおり。</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">1. 名前を変更する必要があるブランチに移動</div><div class="line">2. git branch -m &lt;new_name&gt;</div><div class="line">3. git push origin :&lt;old_name&gt;</div><div class="line">4. git push origin &lt;new_name&gt;:refs/heads/&lt;new_name&gt;</div></pre></td></tr></table></figure><p><strong> 追記(2017/01/12)：</strong>コマンド <code>git status</code>を実行して、新しく作成したブランチが、古いものじゃなくそれ自身（新しいもの）を指していることを確認すること。まだ古いブランチへの参照してる場合は、以下のように上流でのを設定を解除する必要があるよ。</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git branch --<span class="built_in">unset</span>-upstream</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/1719752/milind-anantwar">Milind Anantwar</a> | 回答日時： Apr 15 ‘15 at 12:50 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/6591213/how-do-i-rename-a-local-git-branch" target="_blank" rel="external">How do I rename a local Git branch?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1526794/rename-master-branch-for-both-local-and-remote-git-repositories?answertab=votes#tab-top&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ローカルとリモートの両方のGitリポジトリのMaster branchの名前を変更する&lt;/a&gt;&lt;/em&gt;に書いてあるように、リモートブランチの名前は変更したくないんだけど。&lt;/p&gt;
&lt;p&gt;リモートブランチにプッシュされていないローカルブランチの名前を変更するにはどうしたらいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/338204/forrest&quot;&gt;Forrest&lt;/a&gt; | 質問日時： Jul 6 ‘11 at 3:20 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://somatome.github.io/tags/git/"/>
    
      <category term="git-branch" scheme="https://somatome.github.io/tags/git-branch/"/>
    
  </entry>
  
  <entry>
    <title>Python forループのインデックスへのアクセス方法 [Python]</title>
    <link href="https://somatome.github.io/2017/09/25/accessing-the-index-in-python-for-loops/"/>
    <id>https://somatome.github.io/2017/09/25/accessing-the-index-in-python-for-loops/</id>
    <published>2017-09-25T14:24:08.000Z</published>
    <updated>2017-09-25T18:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>例えばこんなリストがあったとき、このリストのインデックスにアクセスするにはどうしたらいいの？</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">ints = [<span class="number">8</span>, <span class="number">23</span>, <span class="number">45</span>, <span class="number">12</span>, <span class="number">78</span>]</div></pre></td></tr></table></figure><p>これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？</p><p><div style="text-align: right"> By  <a href="/users/51816/joan-venge">Joan Venge</a> | 質問日時： Feb 6 ‘09 at 22:47 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>インデックス変数とかの追加の状態変数を使用するのはあんまりPythonっぽく無いんだ(CとかPHPなどの言語だと普通だけど)。</p><p>より良い方法は組み込み関数を使うこと：<br><a href="https://docs.python.org/3/library/functions.html#enumerate" title="enumerate" target="_blank" rel="external"><code>enumerate()</code>]</a>、Python2と3の両方で利用できるよ：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> idx, val <span class="keyword">in</span> enumerate(ints):</div><div class="line">    print(idx, val)</div></pre></td></tr></table></figure><p>詳しく知りたければ<a href="https://www.python.org/dev/peps/pep-0279/" target="_blank" rel="external">PEP 279</a>を参照してみて。</p><p><div style="text-align: right"> By  <a href="/users/19082/mike-hordecki">Mike Hordecki</a> | 回答日時： Feb 6 ‘09 at 22:52 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><blockquote><h3 id="これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？"><a href="#これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？" class="headerlink" title="これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？"></a>これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？</h3></blockquote><p><code>enumerate</code>を使おう：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(items):</div><div class="line">    print(index, item)</div></pre></td></tr></table></figure><p>あとインデックスはゼロから始まるので、これで0〜4になることに注意。もし、あんたがカウントをしたいっていうのなら、こんな感じに説明するかな。</p><h2 id="慣習的じゃないやり方"><a href="#慣習的じゃないやり方" class="headerlink" title="慣習的じゃないやり方"></a>慣習的じゃないやり方</h2><p>君が求めているのは、以下のPythonicなやり方だろ。これはほとんどの低レベル言語のプログラマーはこのアルゴリズムを使うと思う：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">index = <span class="number">0</span>            <span class="comment"># Pythonのインデックスはゼロから始まる</span></div><div class="line"><span class="keyword">for</span> item <span class="keyword">in</span> items:   <span class="comment"># Pythonのforループは "for each"ループ</span></div><div class="line">    print(index, item)</div><div class="line">    index += <span class="number">1</span></div></pre></td></tr></table></figure><p>それかfor-eachループを持たない言語だと：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">index = <span class="number">0</span></div><div class="line"><span class="keyword">while</span> index &amp;lt; len(items):</div><div class="line">    print(index, items[index])</div><div class="line">    index += <span class="number">1</span></div></pre></td></tr></table></figure><p>それか、ときどきより一般的に(慣習的じゃない)やり方：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> index <span class="keyword">in</span> range(len(items)):</div><div class="line">    print(index, items[index])</div></pre></td></tr></table></figure><h2 id="列挙関数enumerateを使う"><a href="#列挙関数enumerateを使う" class="headerlink" title="列挙関数enumerateを使う"></a>列挙関数<code>enumerate</code>を使う</h2><p>Pythonの<a href="https://docs.python.org/2/library/functions.html#enumerate" target="_blank" rel="external"><code>enumerate</code>関数</a>は、インデックスのための計算処理を隠して、変数をカプセル化することで視覚的にごちゃごちゃしたのを減らす効果がある。こんな感じ：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(items, start=<span class="number">0</span>):   <span class="comment"># default is zero</span></div><div class="line">    print(index, item)</div></pre></td></tr></table></figure><p>このコードサンプルは、Pythonの慣習的な書き方と、そうじゃない書き方の違いを表すかなり<a href="http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html#index-item-2-enumerate" target="_blank" rel="external">典型的な</a>例。慣用的なコードは洗練されている(でもそんな複雑じゃない)Python。<br>この慣用コードは、言語の設計者が意図した書き方、つまり、通常このコードはあんまり読みやすくないけど、より効率的。</p><h2 id="カウントする"><a href="#カウントする" class="headerlink" title="カウントする"></a>カウントする</h2><p>たとえインデックスが必要じゃなくても、iterationsのカウントが１から始まって、最後は自分のカウントする数になってほしい(時にはあった方がいい)時がある。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> count, item <span class="keyword">in</span> enumerate(items, start=<span class="number">1</span>):   <span class="comment"># default is zero</span></div><div class="line">    print(item)</div><div class="line"></div><div class="line">print(<span class="string">'there were &#123;0&#125; items printed'</span>.format(count))</div></pre></td></tr></table></figure><p>カウントする、っていうのは君が求めているもの以上のもの(インデックスだけじゃなくて)だとおもうけど、念のため。</p><hr><h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><ul><li>Pythonのインデックスはゼロから始まる</li><li>反復処理中にこれらのインデックスを反復可能コードから取得するには、列挙関数を使用します</li><li>列挙型を慣用的な方法で(タプルのアンパックと一緒に)使用すると、読みやすくメンテナンス可能なコードが作れる。</li></ul><p>だから、こうすべき：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(items, start=<span class="number">0</span>):   <span class="comment"># Pythonのインデックスはゼロから始まる</span></div><div class="line">    print(index, item)</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/541136/aaron-hall">Aaron Hall</a><span class="mod-flair" title="moderator">♦</span> | 回答日時： Jan 21 ‘15 at 17:11 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p><code>0</code>以外の<code>1</code>から始めるのはかなり簡単：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> index <span class="keyword">in</span> enumerate(iterable, start=<span class="number">1</span>):</div><div class="line">   <span class="keyword">print</span> index</div></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>インデックスはここでは<code>タプル　(idx、item)</code>だよ。ちょっとややこしいかもだけど。</p><p><div style="text-align: right"> By  <a href="/users/570826/clayton">Clayton</a> | 回答日時： May 27 ‘14 at 10:04 </div><br></p><hr><hr><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(ints)):</div><div class="line">   <span class="keyword">print</span> i, ints[i]</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/42136/david-hanak">David Hanak</a> | 回答日時： Feb 6 ‘09 at 22:49 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/522563/accessing-the-index-in-python-for-loops" target="_blank" rel="external">Accessing the index in Python ‘for’ loops</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;例えばこんなリストがあったとき、このリストのインデックスにアクセスするにはどうしたらいいの？&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ints = [&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;78&lt;/span&gt;]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/51816/joan-venge&quot;&gt;Joan Venge&lt;/a&gt; | 質問日時： Feb 6 ‘09 at 22:47 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://somatome.github.io/tags/python/"/>
    
      <category term="list" scheme="https://somatome.github.io/tags/list/"/>
    
      <category term="loops" scheme="https://somatome.github.io/tags/loops/"/>
    
  </entry>
  
  <entry>
    <title>ディレクトリの全部のファイルを一覧表示するのってどうすればいい？ [Python]</title>
    <link href="https://somatome.github.io/2017/09/25/how-do-i-list-all-files-of-a-directory/"/>
    <id>https://somatome.github.io/2017/09/25/how-do-i-list-all-files-of-a-directory/</id>
    <published>2017-09-25T14:23:48.000Z</published>
    <updated>2017-10-03T21:15:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>Pythonでディレクトリ内のすべてのファイルをリストアップして、リストに追加するのってどうやるの？</p><p><div style="text-align: right"> By  <a href="/users/385652/duhhunjonn">duhhunjonn</a> | 質問日時： Jul 8 ‘10 at 19:31 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p><a href="https://docs.python.org/2/library/os.html#os.listdir" title="os.listdir" target="_blank" rel="external"><code>os.listdir()</code></a>でディレクトリにある全てのもの（つまりファイルとディレクトリ）を取得できるよ。</p><p>ファイルのみが必要な場合は、<br><a href="https://docs.python.org/2/library/os.path.html#module-os.path" target="_blank" rel="external"><code>os.path</code></a>：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">from</span> os <span class="keyword">import</span> listdir</div><div class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> isfile, join</div><div class="line">onlyfiles = [f <span class="keyword">for</span> f <span class="keyword">in</span> listdir(mypath) <span class="keyword">if</span> isfile(join(mypath, f))]</div></pre></td></tr></table></figure><p>それか、<a href="https://docs.python.org/2/library/os.html#os.walk" title="os.walk" target="_blank" rel="external"><code>os.walk()</code></a>も使えるかな。<br>これは、訪問先のディレクトリごとに2つのリストを生成する — ファイルとディレクトリに分けてくれるんだ。<br>トップディレクトリのみが必要な場合は、１回目のループでbreakすればいいよ。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">from</span> os <span class="keyword">import</span> walk</div><div class="line"></div><div class="line">f = []</div><div class="line"><span class="keyword">for</span> (dirpath, dirnames, filenames) <span class="keyword">in</span> walk(mypath):</div><div class="line">    f.extend(filenames)</div><div class="line">    <span class="keyword">break</span></div></pre></td></tr></table></figure><p>最後に、下の例のように、あるリストを別のリストに追加するには、<br><a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" target="_blank" rel="external"><code>.extend()</code></a>を使うか、下の方法みたいにするか：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>q = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>w = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>q = q + w</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>q</div><div class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</div></pre></td></tr></table></figure><p>個人的には、 <code>.extend()</code>の方が好みだけど。</p><p><div style="text-align: right"> By  <a href="/users/346573/pycruft">pycruft</a> | 回答日時： Jul 8 ‘10 at 21:01 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>僕はは<a href="https://docs.python.org/library/glob.html" target="_blank" rel="external"><code>glob</code></a>モジュールを使用する方が好きかな。<br>パターンマッチングと展開が行われるから。</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> glob</div><div class="line">print(glob.glob(<span class="string">"/home/adam/*.txt"</span>))</div></pre></td></tr></table></figure><p>上は、クエリーされたファイルを含むリストを返すよ：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">[<span class="string">'/home/adam/file1.txt'</span>, <span class="string">'/home/adam/file2.txt'</span>, .... ]</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/293929/adamk">adamk</a> | 回答日時： Jul 9 ‘10 at 18:13 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line">os.listdir(<span class="string">"somedirectory"</span>)</div></pre></td></tr></table></figure><p>これは、”somedirectory”内のすべてのファイルとディレクトリのリストを返す。</p><p><div style="text-align: right"> By  <a href="/users/149392/sepp2k">sepp2k</a> | 回答日時： Jul 8 ‘10 at 19:35 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory" target="_blank" rel="external">How do I list all files of a directory?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;Pythonでディレクトリ内のすべてのファイルをリストアップして、リストに追加するのってどうやるの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/385652/duhhunjonn&quot;&gt;duhhunjonn&lt;/a&gt; | 質問日時： Jul 8 ‘10 at 19:31 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://somatome.github.io/tags/python/"/>
    
      <category term="directory" scheme="https://somatome.github.io/tags/directory/"/>
    
  </entry>
  
  <entry>
    <title>append vs. extend [Python]</title>
    <link href="https://somatome.github.io/2017/09/25/append-vs-extend/"/>
    <id>https://somatome.github.io/2017/09/25/append-vs-extend/</id>
    <published>2017-09-25T14:23:42.000Z</published>
    <updated>2017-09-25T15:02:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>リストメソッドの <code>append()</code>と <code>extend()</code>の違いって何？</p><p><div style="text-align: right"> By  <a href="/users/15055/claudiu">Claudiu</a> | 質問日時： Oct 31 ‘08 at 5:55 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p><a href="https://docs.python.org/2/library/array.html?#array.array.append" target="_blank" rel="external"><code>append</code></a>：最後にオブジェクトを追加する</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">x.append([<span class="number">4</span>, <span class="number">5</span>])</div><div class="line"><span class="keyword">print</span> (x)</div></pre></td></tr></table></figure><p>は以下を出力</p><p><code>[1、2、3、[4、5]]</code></p><hr><p><a href="https://docs.python.org/2/library/array.html?#array.array.extend" target="_blank" rel="external"><code>extend</code></a>：<br>iterableから要素を追加してリストを拡張</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">x.extend([<span class="number">4</span>, <span class="number">5</span>])</div><div class="line"><span class="keyword">print</span> (x)</div></pre></td></tr></table></figure><p>は以下を出力</p><p><code>[1、2、3、4、5]</code></p><p><div style="text-align: right"> By  <a href="/users/4172/kender">kender</a> | 回答日時： Oct 31 ‘08 at 6:02 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p><code>append</code>は要素をリストに追加する、<code>extend</code>は最初のリストを別のリスト(かリストじゃない別の繰り返し可能なiterable)に連結させる</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>li = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li</div><div class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li.append(<span class="string">"new"</span>)               </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li</div><div class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>, <span class="string">'new'</span>]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li.insert(<span class="number">2</span>, <span class="string">"new"</span>)            </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li</div><div class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'new'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>, <span class="string">'new'</span>]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li.extend([<span class="string">"two"</span>, <span class="string">"elements"</span>]) </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>li</div><div class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'new'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>, <span class="string">'new'</span>, <span class="string">'two'</span>, <span class="string">'elements'</span>]</div></pre></td></tr></table></figure><p><a href="http://www.diveintopython.net/native_data_types/lists.html#d0e5887" target="_blank" rel="external">Dive into<br>Python</a>より</p><p><div style="text-align: right"> By  <a href="/users/1057/harley-holcombe">Harley Holcombe</a> | 回答日時： Oct 31 ‘08 at 5:57 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>この文脈だと、文字列も繰り返し可能ってことを覚えておくといいかな</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">2</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a</div><div class="line">[<span class="number">1</span>, <span class="number">2</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a.extend(<span class="string">'hey'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a</div><div class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="string">'h'</span>, <span class="string">'e'</span>, <span class="string">'y'</span>]</div></pre></td></tr></table></figure><p><div style="text-align: right"> By          tatsujin | 回答日時： Nov 4 ‘08 at 15:19 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/252703/append-vs-extend" target="_blank" rel="external">append vs. extend</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;リストメソッドの &lt;code&gt;append()&lt;/code&gt;と &lt;code&gt;extend()&lt;/code&gt;の違いって何？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/15055/claudiu&quot;&gt;Claudiu&lt;/a&gt; | 質問日時： Oct 31 ‘08 at 5:55 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://somatome.github.io/tags/python/"/>
    
      <category term="list" scheme="https://somatome.github.io/tags/list/"/>
    
      <category term="data-structures" scheme="https://somatome.github.io/tags/data-structures/"/>
    
      <category term="append" scheme="https://somatome.github.io/tags/append/"/>
    
      <category term="extend" scheme="https://somatome.github.io/tags/extend/"/>
    
  </entry>
  
  <entry>
    <title>リストが空であるかどうかをチェックする最良の方法って？ [Python]</title>
    <link href="https://somatome.github.io/2017/09/25/best-way-to-check-if-a-list-is-empty/"/>
    <id>https://somatome.github.io/2017/09/25/best-way-to-check-if-a-list-is-empty/</id>
    <published>2017-09-25T14:23:37.000Z</published>
    <updated>2017-09-26T03:16:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>例えばこんなのがあった時、<br><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">a = []</div></pre></td></tr></table></figure></p><p>どうやってこの変数がカラだってチェックすればいいの？</p><p><div style="text-align: right"> By  <a href="/users/4872/ray-vega">Ray Vega</a> | 質問日時： Sep 10 ‘08 at 6:20 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="keyword">not</span> a:</div><div class="line">  print(<span class="string">"リストは空"</span>)</div></pre></td></tr></table></figure><p>空リストの暗黙的なブーリアン性を使うのってとってもPythonic。</p><p><div style="text-align: right"> By  <a href="/users/429/patrick">Patrick</a> | 回答日時： Sep 10 ‘08 at 6:28 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>それをするためのPythonicな方法は、<a href="https://www.python.org/dev/peps/pep-0008" target="_blank" rel="external">PEP 8スタイルガイド</a>にあるよ：</p><blockquote><p>シーケンス(文字列、リスト、タプル)の場合、空のシーケンスはfalseだってことを使う：</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">&lt;b&gt;Yes:&lt;/b&gt; if not seq:</div><div class="line">     <span class="keyword">if</span> seq:</div><div class="line"></div><div class="line">&lt;b&gt;No:&lt;/b&gt;  if len(seq):</div><div class="line">     <span class="keyword">if</span> <span class="keyword">not</span> len(seq):</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/1057/harley-holcombe">Harley Holcombe</a> | 回答日時： Sep 10 ‘08 at 10:33 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>明示的なやり方が好きかな：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> len(li) == <span class="number">0</span>:</div><div class="line">    print(<span class="string">'the list is empty'</span>)</div></pre></td></tr></table></figure><p>この方法だと、<code>li</code>がシーケンス(リスト)で、サイズを調べたいことが100％明確だし。。ここでの問題は <code>if not li:...</code>は、<code>li</code>はブール変数かも、っていう間違った印象を与えかねないこと。</p><p><div style="text-align: right"> By  <a href="/users/232485/jabba">Jabba</a> | 回答日時： Sep 5 ‘11 at 0:30 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/53513/best-way-to-check-if-a-list-is-empty" target="_blank" rel="external">Best way to check if a list is empty</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;例えばこんなのがあった時、&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;a = []&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;どうやってこの変数がカラだってチェックすればいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/4872/ray-vega&quot;&gt;Ray Vega&lt;/a&gt; | 質問日時： Sep 10 ‘08 at 6:20 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://somatome.github.io/tags/python/"/>
    
      <category term="list" scheme="https://somatome.github.io/tags/list/"/>
    
  </entry>
  
  <entry>
    <title>Pythonで外部コマンドを呼び出す [Python]</title>
    <link href="https://somatome.github.io/2017/09/25/calling-an-external-command-in-python/"/>
    <id>https://somatome.github.io/2017/09/25/calling-an-external-command-in-python/</id>
    <published>2017-09-25T14:23:15.000Z</published>
    <updated>2017-09-25T15:41:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>Pythonスクリプトから外部コマンド(UNIXシェルとかWindowsのコマンドプロンプトで入力したみたいに)ってどうやって呼び出せるの？</p><p><div style="text-align: right"> By  <a href="/users/17085/freshwower">freshWoWer</a> | 質問日時： Sep 18 ‘08 at 1:35 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>標準ライブラリの<a href="https://docs.python.org/2/library/subprocess.html" target="_blank" rel="external">subprocess モジュール</a>を参照：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> call</div><div class="line">call([<span class="string">"ls"</span>, <span class="string">"-l"</span>])</div></pre></td></tr></table></figure><p><strong>subprocess</strong>は<strong>system</strong>と比較して、より柔軟性があることが利点。<br>（stdout、stderr、 “実際の”ステータスコード、より良いエラー処理、等…)。</p><p><a href="https://docs.python.org/library/os.html#os.system" target="_blank" rel="external">公式ドキュメント</a>も<br><strong>subprocess</strong>モジュールを代替のos.system()として推奨してる。</p><blockquote><p><strong>subprocess</strong>モジュールは、新しいプロセスを産み出して、その結果を処理するため強力な機能を提供する。このモジュールを使用することは、この関数<a href="https://docs.python.org/library/os.html#os.system" target="_blank" rel="external"><code>os.system()</code></a>]を使うのより望ましい。</p></blockquote><p><strong>subprocess</strong>ドキュメントの「<a href="https://docs.python.org/2/library/subprocess.html#replacing-older-functions-with-the-subprocess-module" target="_blank" rel="external">古い関数をsubprocessモジュールで置き換える</a>の部分はいろいろ役に立つレシピがあるかも。</p><p><strong>subprocess</strong>モジュールの公式文書は：</p><ul><li><a href="https://docs.python.org/2/library/subprocess.html#module-subprocess" target="_blank" rel="external">Python 2  - subprocess</a></li><li><a href="https://docs.python.org/3/library/subprocess.html#module-subprocess" target="_blank" rel="external">Python 3  - subprocess</a></li></ul><p><div style="text-align: right"> By  <a href="/users/11465/david-cournapeau">David Cournapeau</a> | 回答日時： Sep 18 ‘08 at 1:39 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>僕なら普通こう書く、</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> subprocess</div><div class="line"></div><div class="line">p = subprocess.Popen(<span class="string">'ls'</span>, shell=<span class="keyword">True</span>, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)</div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> p.stdout.readlines():</div><div class="line">    <span class="keyword">print</span> line,</div><div class="line">retval = p.wait()</div></pre></td></tr></table></figure><p>パイプ内の <code>stdout</code>データは自由に使える。実際には、<br>それらのパラメータ(<code>stdout =</code>、 <code>stderr =</code>)は省略できるけど。その場合は<code>os.system()</code>のように振る舞う。</p><p><div style="text-align: right"> By  <a href="/users/9188/emmeff">EmmEff</a> | 回答日時： Sep 18 ‘08 at 18:20 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/89228/calling-an-external-command-in-python" target="_blank" rel="external">Calling an external command in Python</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;Pythonスクリプトから外部コマンド(UNIXシェルとかWindowsのコマンドプロンプトで入力したみたいに)ってどうやって呼び出せるの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/17085/freshwower&quot;&gt;freshWoWer&lt;/a&gt; | 質問日時： Sep 18 ‘08 at 1:35 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://somatome.github.io/tags/python/"/>
    
      <category term="shell" scheme="https://somatome.github.io/tags/shell/"/>
    
      <category term="command" scheme="https://somatome.github.io/tags/command/"/>
    
      <category term="subprocess" scheme="https://somatome.github.io/tags/subprocess/"/>
    
      <category term="external" scheme="https://somatome.github.io/tags/external/"/>
    
  </entry>
  
  <entry>
    <title>__name__ == &quot;__main__&quot;って何やってるの？</title>
    <link href="https://somatome.github.io/2017/09/25/what-does-if-name-main-do/"/>
    <id>https://somatome.github.io/2017/09/25/what-does-if-name-main-do/</id>
    <published>2017-09-25T14:23:09.000Z</published>
    <updated>2017-10-02T01:13:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><code>if __name__ == &quot;__main__&quot;:</code> ってこの場合で何やってるの？<br><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="comment"># Threading example</span></div><div class="line"><span class="keyword">import</span> time, thread</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunction</span><span class="params">(string, sleeptime, lock, *args)</span>:</span></div><div class="line">    <span class="keyword">while</span> <span class="number">1</span>:</div><div class="line">        lock.acquire()</div><div class="line">        time.sleep(sleeptime)</div><div class="line">        lock.release()</div><div class="line">        time.sleep(sleeptime)</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    lock = thread.allocate_lock()</div><div class="line">    thread.start_new_thread(myfunction, (<span class="string">"Thread #: 1"</span>, <span class="number">2</span>, lock))</div><div class="line">    thread.start_new_thread(myfunction, (<span class="string">"Thread #: 2"</span>, <span class="number">2</span>, lock))</div></pre></td></tr></table></figure></p><p><div style="text-align: right"> By  <a href="/users/51518/devoted">Devoted</a> | 質問日時： Jan 7 ‘09 at 4:11 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>Pythonインタプリタがソースファイルを読み込むと、ファイル内のすべてのコードが実行される。</p><p>コードを実行する前に、いくつかの特殊変数を定義するんだ。たとえば、Pythonインタプリタがそのモジュール(＝ソースファイル)を<br>メインプログラムとして走らせているとすると、特殊な <code>__name__</code>変数を値<code>&quot; __main __ &quot;</code>として設定する。このファイルが別のモジュールからインポートされている場合は、 <code>__name__</code>はモジュールの名前に設定されるってわけなんだ。</p><p>君のスクリプトの場合、それがメインとして実行されていると仮定しよう。で、例えば、コマンドラインでこう呼び出したとする：</p><pre><code class="python">python threading_example.py</code></pre><p>特殊変数を設定した後、<code>import</code>文を読み込み、それらのモジュールをロードする。次に、 <code>def</code>ブロックを評価し、<br>関数オブジェクトの作成とそれを指している<code>myfunction</code>という変数の作成を行う。<br>その後、<code>if</code>文を読み込み、<code>__name__</code>は<code>&quot;__main __&quot;</code>と等しいことを知り、その中のブロックを実行する。</p><p>One reason for doing this is that sometimes you write a module (a .py file) where it can be executed directly. Alternatively, it can also be imported and used in another module. By doing the main check, you can have that code only execute when you want to run the module as a program and not have it execute when someone just wants to import your module and call your functions themselves.</p><p>これを行う1つの理由は、直接実行することができるモジュール(<code>.py</code>ファイル)を時々書く必要があるから、って言う理由。それ以外の時はインポートして、他のモジュールとして使うこともできる。メイン関数のチェックを行うことで、そのモジュールをプログラムとして実行したい時にのみ実行されるコードを持つことができるし、また、誰かがあなたのモジュールをインポートしてあなたの関数を呼び出そうとしているときは実行されない。</p><p>詳しくは<a href="http://ibiblio.org/g2swap/byteofpython/read/module-name.html" target="_blank" rel="external">このページ</a>を参照してみて。</p><p><div style="text-align: right"> By  <a href="/users/25050/mr-fooz">Mr Fooz</a> | 回答日時： Jan 7 ‘09 at 4:26 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/419163/what-does-if-name-main-do" target="_blank" rel="external">What does if <strong>name</strong> == “<strong>main</strong>”: do?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;code&gt;if __name__ == &amp;quot;__main__&amp;quot;:&lt;/code&gt; ってこの場合で何やってるの？&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Threading example&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time, thread&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;myfunction&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string, sleeptime, lock, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        lock.acquire()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        time.sleep(sleeptime)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        lock.release()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        time.sleep(sleeptime)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    lock = thread.allocate_lock()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    thread.start_new_thread(myfunction, (&lt;span class=&quot;string&quot;&gt;&quot;Thread #: 1&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, lock))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    thread.start_new_thread(myfunction, (&lt;span class=&quot;string&quot;&gt;&quot;Thread #: 2&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, lock))&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/51518/devoted&quot;&gt;Devoted&lt;/a&gt; | 質問日時： Jan 7 ‘09 at 4:11 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://somatome.github.io/tags/python/"/>
    
      <category term="module" scheme="https://somatome.github.io/tags/module/"/>
    
      <category term="namespaces" scheme="https://somatome.github.io/tags/namespaces/"/>
    
      <category term="main" scheme="https://somatome.github.io/tags/main/"/>
    
      <category term="idioms" scheme="https://somatome.github.io/tags/idioms/"/>
    
  </entry>
  
  <entry>
    <title>jQueryで要素が非表示になっているかどうかを確認するのってどうすればいい？？</title>
    <link href="https://somatome.github.io/2017/09/25/how-do-i-check-if-an-element-is-hidden-in-jquery/"/>
    <id>https://somatome.github.io/2017/09/25/how-do-i-check-if-an-element-is-hidden-in-jquery/</id>
    <published>2017-09-25T05:10:14.000Z</published>
    <updated>2017-09-25T05:30:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><code>.hide()</code>、 <code>.show()</code>、 <code>.toggle()</code>関数を使えば要素の可視性を切り替えることができるけど、要素が表示されているか隠れているかはどうやってテストすればいいの？</p><p><div style="text-align: right"> By  <a href="/users/21709/philip-morton">Philip Morton</a> | 質問日時： Oct 7 ‘08 at 13:03 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>１つの要素についての質問だから、このコードがいいかな</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$(element).is(<span class="string">":visible"</span>);</div></pre></td></tr></table></figure><p>[下の人の提案]と同じだけど、１つの要素についてのもの;そしてこれは<a href="https://stackoverflow.com/a/4685330/49942" target="_blank" rel="external">jQueryのFAQで推奨されてるアルゴリズムとおんなじ</a></p><p><div style="text-align: right"> By  <a href="/users/25449/tsvetomir-tsonev">Tsvetomir Tsonev</a> | 回答日時： Oct 7 ‘08 at 13:30 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p><a href="http://docs.jquery.com/Selectors/hidden" target="_blank" rel="external"><code>hidden</code></a>セレクタが使えるよ：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">//非表示になってるのすべての要素とマッチする</span></div><div class="line">$(<span class="string">'element:hidden'</span>)</div></pre></td></tr></table></figure><p>それか、<a href="http://docs.jquery.com/Selectors/visible" target="_blank" rel="external"><code>visible</code></a>セレクタ：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Matches all elements that are visible</span></div><div class="line"><span class="comment">//表示されているすべての要素とマッチ。</span></div><div class="line">$(<span class="string">'element:visible'</span>)</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/18846/twernt">twernt</a> | 回答日時： Oct 7 ‘08 at 13:16 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> ( $(element).css(<span class="string">'display'</span>) == <span class="string">'none'</span> )&#123;</div><div class="line">    <span class="comment">// element is hidden</span></div><div class="line">　　<span class="comment">// 要素は隠されてる</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>関数はvisibility属性では機能しないけど。</p><p><div style="text-align: right"> By  <a href="/users/24789/mote">Mote</a> | 回答日時： Oct 7 ‘08 at 13:09 </div><br></p><hr><hr><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><p>どの答えも、僕が質問だと思ってた（そして僕が探していたもの）のと違う答えしてる、つまり_「<code>visibility: hidden</code>を持つアイテムをどうやって扱うの？っていう質問。<br><code>:visible</code>も<code>:hidden</code>もここでは使えない、というのはどちらもドキュメントごとの表示を探してるから。僕がわかる限り、CSSの可視性を処理するセレクタってないよね。僕の解決方法を書いてみる(標準のjQueryセレクタでは、もっといい書き方があるかもだけど)。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$(<span class="string">".item"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> ($(<span class="keyword">this</span>).css(<span class="string">"visibility"</span>) == <span class="string">"hidden"</span>) &#123;</div><div class="line"><span class="comment">//非可視状態を処理する</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="comment">//可視状態を処理する</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/570371/aaronlile">aaronLile</a> | 回答日時： Mar 24 ‘11 at 18:44 </div><br></p><hr><hr><h2 id="回答5"><a href="#回答5" class="headerlink" title="回答5:"></a>回答5:</h2><p><em> <a href="http://learn.jquery.com/using-jquery-core/faq/how-do-i-determine-the-state-of-a-toggled-element/" target="_blank" rel="external">どうやってトグルする要素の状態調べるの？</a></em>より</p><hr><p>要素が折りたたまれているかどうかは、<code>:visible</code>と<code>:hidden</code>セレクタ:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> isVisible = $(<span class="string">'#myDiv'</span>).is(<span class="string">':visible'</span>);</div><div class="line"><span class="keyword">var</span> isHidden = $(<span class="string">'#myDiv'</span>).is(<span class="string">':hidden'</span>);</div></pre></td></tr></table></figure><p>可視状態に基づいて要素に何かするのであれば、セレクタ式に <code>:visible</code>や<code>:hidden</code>を含める。例えば：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">$(<span class="string">'#myDiv:visible'</span>).animate(&#123;<span class="attr">left</span>: <span class="string">'+=200px'</span>&#125;, <span class="string">'slow'</span>);</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/574889/user574889">user574889</a> | 回答日時： Jan 13 ‘11 at 21:13 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/178325/how-do-i-check-if-an-element-is-hidden-in-jquery" target="_blank" rel="external">How do I check if an element is hidden in jQuery?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;code&gt;.hide()&lt;/code&gt;、 &lt;code&gt;.show()&lt;/code&gt;、 &lt;code&gt;.toggle()&lt;/code&gt;関数を使えば要素の可視性を切り替えることができるけど、要素が表示されているか隠れているかはどうやってテストすればいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/21709/philip-morton&quot;&gt;Philip Morton&lt;/a&gt; | 質問日時： Oct 7 ‘08 at 13:03 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://somatome.github.io/tags/javascript/"/>
    
      <category term="jquery" scheme="https://somatome.github.io/tags/jquery/"/>
    
      <category term="dom" scheme="https://somatome.github.io/tags/dom/"/>
    
      <category term="visibility" scheme="https://somatome.github.io/tags/visibility/"/>
    
  </entry>
  
  <entry>
    <title>JavaScriptである文字列に別な文字列（substring）が含まれているかどうかをチェックする方法って？</title>
    <link href="https://somatome.github.io/2017/09/25/how-to-check-whether-a-string-contains-a-substring-in-javascript/"/>
    <id>https://somatome.github.io/2017/09/25/how-to-check-whether-a-string-contains-a-substring-in-javascript/</id>
    <published>2017-09-24T23:46:44.000Z</published>
    <updated>2017-09-25T00:02:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p><code>String.contains()</code>メソッドだと思ったんだけど、ちょっと違うみたい。これをチェックするいい方法ってあるかな？</p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><p>考えられる方法としてはこんな感じ：</p><ol><li><strong>indexOf</strong><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    substring = <span class="string">"oo"</span>;</div><div class="line">string.indexOf(substring) !== <span class="number">-1</span>;</div></pre></td></tr></table></figure></li></ol><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf" target="_blank" rel="external"><code>String.prototype.indexOf</code></a>は、ある文字列の中にある他の文字列の位置を返す。見つからなければ <code>-1</code>を返す。</p><ol><li><strong>(ES6) includes</strong>  - <a href="https://stackoverflow.com/a/14193950/2689455" target="_blank" rel="external">この回答</a>、または<a href="https://stackoverflow.com/a/2385801/2689455" target="_blank" rel="external">この回答</a>を参照</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    substring = <span class="string">"oo"</span>;</div><div class="line">string.includes(substring);</div></pre></td></tr></table></figure><ol><li><strong>search</strong> - <a href="https://stackoverflow.com/a/2385801/2689455" target="_blank" rel="external">この回答参照</a></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    expr = <span class="regexp">/oo/</span>;</div><div class="line">string.search(expr);</div></pre></td></tr></table></figure><ol><li><strong>lodash includes</strong> - <a href="https://stackoverflow.com/a/20575032/2689455" target="_blank" rel="external">この回答参照</a></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    substring = <span class="string">"oo"</span>;</div><div class="line">_.includes(string, substring);</div></pre></td></tr></table></figure><ol><li><strong>RegExp</strong>  -  <a href="https://stackoverflow.com/a/1789980/2689455" target="_blank" rel="external">この回答参照</a></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    expr = <span class="regexp">/oo/</span>;  <span class="comment">// no quotes here</span></div><div class="line">expr.test(string);</div></pre></td></tr></table></figure><ol><li><strong>Match</strong>   -  <a href="https://stackoverflow.com/a/12652006/2689455" target="_blank" rel="external">この回答参照</a></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> string = <span class="string">"foo"</span>,</div><div class="line">    expr = <span class="regexp">/oo/</span>;</div><div class="line">string.match(expr);</div></pre></td></tr></table></figure><hr><p>パフォーマンステスト(<a href="http://jsben.ch/#/RVYk7" target="_blank" rel="external">http://jsben.ch/#/RVYk7</a>)の結果によればでは、indexOfが最速みたいなので、スピードが重要なポイントになる場合は、最良の選択かも。</p><p><div style="text-align: right"> By  <a href="/users/92315/fabien-m%c3%a9nager">Fabien Ménager</a> | 回答日時： Nov 24 ‘09 at 13:05 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>こうやればStringに <code>contains</code>メソッドを簡単に追加できるよ：</p><p>function(it){このthis.indexOfを返します！ }; }<br><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.contains = <span class="function"><span class="keyword">function</span>(<span class="params">it</span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">this</span>.indexOf(it) != <span class="number">-1</span>; &#125;;</div></pre></td></tr></table></figure></p><p>_Note：これを使うのはいろいろ議論の別れるところだけど、自分自身の判断で使用して。</p><p>これ以外だと：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">String</span>.prototype.contains === <span class="string">'undefined'</span>) &#123; <span class="built_in">String</span>.prototype.contains = <span class="function"><span class="keyword">function</span>(<span class="params">it</span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">this</span>.indexOf(it) != <span class="number">-1</span>; &#125;; &#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/7012/avi-flax">Avi Flax</a> | 回答日時： Dec 30 ‘09 at 4:23 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>JavaScriptが大文字と小文字を区別するのに気をつけて。きみのコードだと、</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">indexof()</div></pre></td></tr></table></figure><p>でも実際には</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">indexOf()</div></pre></td></tr></table></figure><p>これを修正し、うまくいくか確認してみて：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (test.indexOf(<span class="string">"title"</span>) !=<span class="number">-1</span>) &#123;</div><div class="line">    alert(elm);</div><div class="line">    foundLinks++;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/14514/victor">Victor</a> | 回答日時： Nov 24 ‘09 at 14:17 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/1789945/how-to-check-whether-a-string-contains-a-substring-in-javascript" target="_blank" rel="external">How to check whether a string contains a substring in JavaScript?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;&lt;code&gt;String.contains()&lt;/code&gt;メソッドだと思ったんだけど、ちょっと違うみたい。これをチェックするいい方法ってあるかな？&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="https://somatome.github.io/tags/javascript/"/>
    
      <category term="string" scheme="https://somatome.github.io/tags/string/"/>
    
      <category term="substring" scheme="https://somatome.github.io/tags/substring/"/>
    
      <category term="contains" scheme="https://somatome.github.io/tags/contains/"/>
    
      <category term="string-matching" scheme="https://somatome.github.io/tags/string-matching/"/>
    
  </entry>
  
  <entry>
    <title>ローカルとリモートの両方でGitブランチを削除するには？</title>
    <link href="https://somatome.github.io/2017/09/25/how-do-i-delete-a-git-branch-both-locally-and-remotely/"/>
    <id>https://somatome.github.io/2017/09/25/how-do-i-delete-a-git-branch-both-locally-and-remotely/</id>
    <published>2017-09-24T23:05:54.000Z</published>
    <updated>2017-09-24T23:33:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="質問："><a href="#質問：" class="headerlink" title="質問："></a>質問：</h2><p>ローカルと、Github上のフォークした自分のリモートプロジェクトのブランチを削除したいんだけど。</p><p>リモートのブランチを削除するためにこれまで試みた方法（失敗した）：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">$ git branch -d remotes/origin/bugfix</div><div class="line">error: branch <span class="string">'remotes/origin/bugfix'</span> not found.</div><div class="line"></div><div class="line">$ git branch -d origin/bugfix</div><div class="line">error: branch <span class="string">'origin/bugfix'</span> not found.</div><div class="line"></div><div class="line">$ git branch -rd origin/bugfix</div><div class="line">Deleted remote branch origin/bugfix (was 2a14ef7).</div><div class="line"></div><div class="line">$ git push</div><div class="line">Everything up-to-date</div><div class="line"></div><div class="line">$ git pull</div><div class="line">From github.com:gituser/gitproject</div><div class="line">* [new branch] bugfix -&amp;gt; origin/bugfix</div><div class="line">Already up-to-date.</div></pre></td></tr></table></figure><p><code>remotes/origin/bugfix</code>ブランチをローカルとリモート両方で削除するにはほか何をしたらいいの？</p><p><div style="text-align: right"> By  <a href="/users/95592/matthew-rankin">Matthew Rankin</a> | 質問日時： Jan 5 ‘10 at 1:12 </div><br></p><a id="more"></a><hr><hr><h2 id="回答1"><a href="#回答1" class="headerlink" title="回答1:"></a>回答1:</h2><h2 id="要旨"><a href="#要旨" class="headerlink" title="要旨"></a>要旨</h2><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">$ git push -d origin &lt;ブランチ名&gt;</div><div class="line">$ gitブランチ-d &lt;ブランチ名&gt;</div></pre></td></tr></table></figure><h2 id="ローカルブランチを削除"><a href="#ローカルブランチを削除" class="headerlink" title="ローカルブランチを削除"></a>ローカルブランチを削除</h2><p><em>local</em>ブランチを削除するには、次のいずれかを使う。</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">$ git branch -d ブランチ名</div><div class="line">$ git branch -D ブランチ名</div></pre></td></tr></table></figure><p><strong>注意：</strong> <code>-d</code>オプションは、<code>--delete</code>のエイリアス。このオプションは、ブランチが既に上流ブランチに完全にマージされている場合にのみ削除するよ。あと<code>--D</code>を使うこともでるけど、これは<code>--delete --force</code>のエイリアスで、「merged statusに関係なく」ブランチを削除するよ。 [出典： <code>man git-branch</code>]</p><h2 id="リモートブランチを削除する-2017年9月8日更新"><a href="#リモートブランチを削除する-2017年9月8日更新" class="headerlink" title="リモートブランチを削除する[2017年9月8日更新]"></a>リモートブランチを削除する[2017年9月8日更新]</h2><p><a href="https://github.com/gitster/git/blob/master/Documentation/RelNotes/1.7.0.txt" target="_blank" rel="external">Git v1.7.0</a>では、<strong> <em> remote </em> </strong>ブランチを削除するには</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">$ git push origin --delete &lt;ブランチ名&gt;</div></pre></td></tr></table></figure><p>こっちの方が覚えやすいかも</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">$ git push origin :&lt;ブランチ名&gt;</div></pre></td></tr></table></figure><p>これは<a href="https://github.com/gitster/git/blob/master/Documentation/RelNotes/1.5.0.txt" target="_blank" rel="external">Git v1.5.0</a>以降で、「リモートブランチやタグを削除するために」追加されたやつ。</p><p><a href="https://github.com/git/git/blob/master/Documentation/RelNotes/2.8.0.txt" target="_blank" rel="external">Git v2.8.0</a>以降では、<code>git push</code>の際、<code>--delete</code>のエイリアスとして<code>--d</code>オプションつけて使うこともできるよ。</p><p>だから、インストールしたGitのバージョンによって、より簡単なシンタックスか難しいシンタックスになるかは変わってくる。</p><p><div style="text-align: right"> By  <a href="/users/95592/matthew-rankin">Matthew Rankin</a> | 回答日時： Jan 5 ‘10 at 1:13 </div><br></p><hr><hr><h2 id="回答2"><a href="#回答2" class="headerlink" title="回答2:"></a>回答2:</h2><p>上のの答えは<em>remote</em>ブランチを削除するのにベストだと思うし、この説明してくれてありがとうって思うけど、この2つのコマンドを簡単な区別するをするために書くと、</p><p><strong> <em>ローカルブランチ</em> </strong>を削除するには：</p><p><code>git branch -d {th​​e_local_branch}</code>(マージされた状態をチェックせずに強制的に削除する場合は<code>-D</code>を使用）</p><p><strong> <em>リモートブランチ</em> </strong>をサーバーから削除するには：</p><p><code>git push origin --delete {the_remote_branch}</code></p><p>参考：<a href="https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote" target="_blank" rel="external">https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote</a></p><p><div style="text-align: right"> By  <a href="/users/385559/eric-brotto">Eric Brotto</a> | 回答日時： Jun 12 ‘12 at 14:51 </div><br></p><hr><hr><h2 id="回答3"><a href="#回答3" class="headerlink" title="回答3:"></a>回答3:</h2><p>リモートブランチを削除するには、次のコマンドを使用してもいいかも。</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git push --delete origin serverfix</div></pre></td></tr></table></figure><p>以下でも同じ</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git push origin：serverfix</div></pre></td></tr></table></figure><p>こっちのほうが覚えやすいかな？</p><p><div style="text-align: right"> By  <a href="/users/447884/pagetribe">pagetribe</a> | 回答日時： Oct 27 ‘11 at 22:22 </div><br></p><hr><hr><h2 id="回答4"><a href="#回答4" class="headerlink" title="回答4:"></a>回答4:</h2><p>ブランチを削除する場合は、最初に削除するブランチ以外のブランチをチェックアウトする</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git checkout &lt;削除する以外のブランチ&gt;</div></pre></td></tr></table></figure><p>ローカルブランチの削除：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git branch -D &lt;削除するブランチ&gt;</div></pre></td></tr></table></figure><p>リモートブランチの削除：</p><figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">git push origin --delete &lt;削除するブランチ&gt;</div></pre></td></tr></table></figure><p><div style="text-align: right"> By  <a href="/users/1351195/praveen-hiremath">Praveen Hiremath</a> | 回答日時： Oct 7 ‘14 at 13:52 </div><br></p><hr><hr><p>Source: <a href="https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-both-locally-and-remotely" target="_blank" rel="external">How do I delete a Git branch both locally and remotely?</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;質問：&quot;&gt;&lt;a href=&quot;#質問：&quot; class=&quot;headerlink&quot; title=&quot;質問：&quot;&gt;&lt;/a&gt;質問：&lt;/h2&gt;&lt;p&gt;ローカルと、Github上のフォークした自分のリモートプロジェクトのブランチを削除したいんだけど。&lt;/p&gt;
&lt;p&gt;リモートのブランチを削除するためにこれまで試みた方法（失敗した）：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git branch -d remotes/origin/bugfix&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error: branch &lt;span class=&quot;string&quot;&gt;&#39;remotes/origin/bugfix&#39;&lt;/span&gt; not found.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git branch -d origin/bugfix&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error: branch &lt;span class=&quot;string&quot;&gt;&#39;origin/bugfix&#39;&lt;/span&gt; not found.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git branch -rd origin/bugfix&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Deleted remote branch origin/bugfix (was 2a14ef7).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git push&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Everything up-to-date&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git pull&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;From github.com:gituser/gitproject&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* [new branch] bugfix -&amp;amp;gt; origin/bugfix&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Already up-to-date.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;remotes/origin/bugfix&lt;/code&gt;ブランチをローカルとリモート両方で削除するにはほか何をしたらいいの？&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align: right&quot;&gt; By  &lt;a href=&quot;/users/95592/matthew-rankin&quot;&gt;Matthew Rankin&lt;/a&gt; | 質問日時： Jan 5 ‘10 at 1:12 &lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://somatome.github.io/tags/git/"/>
    
      <category term="git-branch" scheme="https://somatome.github.io/tags/git-branch/"/>
    
      <category term="git-remote" scheme="https://somatome.github.io/tags/git-remote/"/>
    
  </entry>
  
</feed>
