{"meta":{"title":"Stack Overflow まとめ","subtitle":null,"description":null,"author":"John Doe","url":"https://somatome.github.io"},"pages":[],"posts":[{"title":"iPhone X [Webコミック]","slug":"commic-2017-09-13-apple-iphone-x-juste-a-small-troll","date":"2017-10-13T00:06:14.000Z","updated":"2017-10-13T00:41:25.315Z","comments":true,"path":"2017/10/13/commic-2017-09-13-apple-iphone-x-juste-a-small-troll/","link":"","permalink":"https://somatome.github.io2017/10/13/commic-2017-09-13-apple-iphone-x-juste-a-small-troll/","excerpt":"","text":"１コマ目：「さてこれまでで最大のキーノートスピーチが準備されています！我々は総工費50億ドルのAppleの新しいヘッドクォーターに来ております！」 ２コマ目：「これがあの有名なスティーブ・ジョブズ・シアターです。この素晴らしい空間で我々はもうすぐ史上最高のスマートフォンを目にしようとしています！」 ３コマ目：「来ました！我々の目の前にiPhone Xが姿を表しました！最新のiPhoneがなんと1000ドル以下！この技術的驚異はかならずスマートフォンの世界を革新することでしょう！」４コマ目：「すばらしい、、、、ただすばらしい、、、、」 Source: Apple iPhone X - Juste a small troll","raw":null,"content":null,"categories":[],"tags":[]},{"title":"var functionName = function(){} 対 function functionName(){} [Javascript]","slug":"var-functionname-function-vs-function-functionname","date":"2017-10-12T08:00:01.000Z","updated":"2017-10-12T08:10:53.000Z","comments":true,"path":"2017/10/12/var-functionname-function-vs-function-functionname/","link":"","permalink":"https://somatome.github.io2017/10/12/var-functionname-function-vs-function-functionname/","excerpt":"質問：最近他人のJavascriptのコードをメンテしだして、バグを修正したり、機能を追加したり、コードをきちんと整理して一貫するようにしてる。\nで、前の開発者は関数を宣言するのに2つの方法を使用してて、これらを使い分けるのに理由があるのかどうかよくわからないんだけど。その２つの方法は：\nvar functionOne = function() &#123;    // 何かのコード&#125;;\nfunction functionTwo() &#123;    // 何かのコード&#125;\nこの2つの異なる方法を使用する理由って何？それぞれメリットデメリットってある？もう片方ではできて、他では出来ないことってある？\n By  Richard Garside | 質問日時： 2008年12月3日 11:31 ","text":"質問：最近他人のJavascriptのコードをメンテしだして、バグを修正したり、機能を追加したり、コードをきちんと整理して一貫するようにしてる。 で、前の開発者は関数を宣言するのに2つの方法を使用してて、これらを使い分けるのに理由があるのかどうかよくわからないんだけど。その２つの方法は： var functionOne = function() &#123; // 何かのコード&#125;; function functionTwo() &#123; // 何かのコード&#125; この2つの異なる方法を使用する理由って何？それぞれメリットデメリットってある？もう片方ではできて、他では出来ないことってある？ By Richard Garside | 質問日時： 2008年12月3日 11:31 回答1:The difference is that functionOne is a function expression and so only defined when that line is reached, whereas functionTwo is a function declaration and is defined as soon as its surrounding function or script is executed (due to hoisting).For example, a function expression: functionOneは関数式なので、その行に達すると定義されるけど、 一方でfunctionTwoは関数宣言なので、その周囲の関数またはスクリプトが実行されたら定義される(ホイストによる)。 たとえば、関数式は次のようになる。 // TypeError：undefinedは関数ではないfunctionOne();var functionOne = function() &#123; console.log(\"Hello!\");&#125;; で、関数宣言： // 出力: \"Hello!\"functionTwo();function functionTwo() &#123; console.log(\"Hello!\");&#125; これは、関数宣言を使って条件付きで関数を定義することもできないことを意味してる： if (test) &#123; //エラーまたは不正行為 function functionThree() &#123; doSomething(); &#125;&#125;上は `test`の値にかかわらず` functionThree`を実際に定義してる -- でも`use strict`が有効でない限り、エラーが発生してしまう。 By Greg | 回答日時： 2008年12月3日 11:37 Source: var functionName = function() {} vs function functionName() {}","raw":null,"content":null,"categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/tags/javascript/"},{"name":"idioms","slug":"idioms","permalink":"https://somatome.github.io/tags/idioms/"},{"name":"function","slug":"function","permalink":"https://somatome.github.io/tags/function/"},{"name":"syntax","slug":"syntax","permalink":"https://somatome.github.io/tags/syntax/"}]},{"title":"データフレームのリストを作成するにはどうすればいい？ [R]","slug":"how-do-i-make-a-list-of-data-frames","date":"2017-10-12T08:00:01.000Z","updated":"2017-10-12T09:07:39.000Z","comments":true,"path":"2017/10/12/how-do-i-make-a-list-of-data-frames/","link":"","permalink":"https://somatome.github.io2017/10/12/how-do-i-make-a-list-of-data-frames/","excerpt":"質問：データフレームのリストを作成するのってどうすればいい？\nそしてそのリストからそれぞれのデータフレームにアクセスするのってどうすればいい？\nなんか簡単な例を見つけることができなくって、、、\nd1&lt;-data.frame(y1&lt;-c(1,2,3),y2&lt;-c(4,5,6))d2&lt;-data.frame(y1&lt;-c(3,2,1),y2&lt;-c(6,5,4))\n By  Ben | 質問日時： 2013年7月6日 2:16 ","text":"質問：データフレームのリストを作成するのってどうすればいい？ そしてそのリストからそれぞれのデータフレームにアクセスするのってどうすればいい？ なんか簡単な例を見つけることができなくって、、、 d1&lt;-data.frame(y1&lt;-c(1,2,3),y2&lt;-c(4,5,6))d2&lt;-data.frame(y1&lt;-c(3,2,1),y2&lt;-c(6,5,4)) By Ben | 質問日時： 2013年7月6日 2:16 回答1:これは君の質問とは直接関係ないけど、 関数のコールの中では=じゃなく&lt;-を使うべき。&lt;-を使用すると、どんな環境であろうとy1とy2という変数を作っちゃう。： d1&lt;-data.frame(y1&lt;-c(1,2,3),y2&lt;-c(4,5,6))y1# [1] 1 2 3y2# [1] 4 5 6 これはデータフレーム内の列の名前として作ったのとは別の結果になってしまう： d1# y1....c.1..2..3. y2....c.4..5..6.# 1 1 4# 2 2 5# 3 3 6 一方、 =演算子は、あるベクトルをdata.frameへの引数として紐つけてくれる。 で、君の質問だけど、データフレームのリストを作成するのは簡単： d1 &lt;- data.frame(y1=c(1,2,3),y2=c(4,5,6))d2 &lt;- data.frame(y1=c(3,2,1),y2=c(6,5,4))my.list &lt;- list(d1, d2) 他のリスト要素にアクセスするのと同じように、データフレームにアクセスできるよ。 my.list[[1]]# y1 y2# 1 1 4# 2 2 5# 3 3 6 By Peyton | 回答日時： 2013年7月6日 2:36 Source: How do I make a list of data frames?","raw":null,"content":null,"categories":[],"tags":[{"name":"list","slug":"list","permalink":"https://somatome.github.io/tags/list/"},{"name":"r","slug":"r","permalink":"https://somatome.github.io/tags/r/"},{"name":"dataframe","slug":"dataframe","permalink":"https://somatome.github.io/tags/dataframe/"},{"name":"r-faq","slug":"r-faq","permalink":"https://somatome.github.io/tags/r-faq/"}]},{"title":"デバイスがiPhone Xであるかどうかを検出する [iOS]","slug":"detect-if-the-device-is-iphone-x","date":"2017-10-11T21:55:38.000Z","updated":"2017-10-12T18:47:10.000Z","comments":true,"path":"2017/10/11/detect-if-the-device-is-iphone-x/","link":"","permalink":"https://somatome.github.io2017/10/11/detect-if-the-device-is-iphone-x/","excerpt":"質問：僕のiOSアプリケーションは UINavigationBarの高さ情報を使ってるんだけど、新しいiPhone Xだと問題が起こりそうなんだ。\n誰かiPhone X上でアプリが実行されているかどうかを自動検出する信頼できる方法って知ってる（Objectiv-Cで）？\n編集：\nもちろん、画面のサイズをチェックすることは可能だけど、iOSを検出するために使うTARGET_OS_IPHONEみたいなビルトイン・メソッドって無いかな、、、？\nif (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone) &#123;    CGSize screenSize = [[UIScreen mainScreen] bounds].size;    if (screenSize.height == 812)        NSLog(@&quot;iPhone X&quot;);&#125;\n By  Andrei Herford | 質問日時： 2017年9月13日 8:12 ","text":"質問：僕のiOSアプリケーションは UINavigationBarの高さ情報を使ってるんだけど、新しいiPhone Xだと問題が起こりそうなんだ。 誰かiPhone X上でアプリが実行されているかどうかを自動検出する信頼できる方法って知ってる（Objectiv-Cで）？ 編集： もちろん、画面のサイズをチェックすることは可能だけど、iOSを検出するために使うTARGET_OS_IPHONEみたいなビルトイン・メソッドって無いかな、、、？ if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone) &#123; CGSize screenSize = [[UIScreen mainScreen] bounds].size; if (screenSize.height == 812) NSLog(@&quot;iPhone X&quot;);&#125; By Andrei Herford | 質問日時： 2017年9月13日 8:12 回答1:答えから言うとNo、直接的に検出する方法はないよ。もっと詳細が知りたければこことかここを参照。 もしiPhoneの高さの検出を検出したいなら、2436pxを使うべき デバイス画面のサイズと向き Switft3以上if UIDevice().userInterfaceIdiom == .phone &#123; switch UIScreen.main.nativeBounds.height &#123; case 1136: print(\"iPhone 5 or 5S or 5C\") case 1334: print(\"iPhone 6/6S/7/8\") case 2208: print(\"iPhone 6+/6S+/7+/8+\") case 2436: print(\"iPhone X\") default: print(\"unknown\") &#125; &#125; Objective Cif([[UIDevice currentDevice]userInterfaceIdiom]==UIUserInterfaceIdiomPhone) &#123; switch ((int)[[UIScreen mainScreen] nativeBounds].size.height) &#123; case 1136: printf(&quot;iPhone 5 or 5S or 5C&quot;); break; case 1334: printf(&quot;iPhone 6/6S/7/8&quot;); break; case 2208: printf(&quot;iPhone 6+/6S+/7+/8+&quot;); break; case 2436: printf(&quot;iPhone X&quot;); break; default: printf(&quot;unknown&quot;); &#125;&#125; それかscreenSize.heightをint型の812でなくfloat型の812.0fとして使用するとか if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone) &#123; CGSize screenSize = [[UIScreen mainScreen] bounds].size; if (screenSize.height == 812.0f) NSLog(@&quot;iPhone X&quot;);&#125; 詳細についてはこちら. 更新 デバイスタイプを識別するために userInterfaceIdiomプロパティを使うべきじゃない。iPhoneアプリはiPadにもインストールできるので、その場合、userInterfaceIdiomはUIUserInterfaceIdiomPhoneを返してしまうから。 適切な方法は、 unameを使ってマシン名を取得すること。このスレッドを参照してみて。 By Anbu.Karthik | 回答日時： 2017年9月13日 8:41 回答2:もう一つの方法はこんなの。これは今のところiPhone Xだけが上部にノッチを持ったデバイスだから動くんだけど。僕が使ってる方法は： iphoneX = NO;if (@available(iOS 11.0, *)) &#123; if (_window.safeAreaInsets.top &gt; 0.0) &#123; iphoneX = YES; &#125;&#125; もちろん、横向きでの場合は左右のセーフエリアのインセットをチェックする必要があるかも。 編集：_windowはAppDelegateのUIWindowで、このチェックはアプリケーションdidFinishLaunchingWithOptionsの中で行われる。 By saswanb | 回答日時： 2017年9月14日 19:50 回答3:デバイスモデル/マシン名をチェックして。コードの中でポイントやピクセル数を使わないで！それはハードコードだから！ #import &lt;sys/utsname.h&gt; // import it in your header or implementation file.NSString* deviceName()&#123; struct utsname systemInfo; uname(&amp;systemInfo); return [NSString stringWithCString:systemInfo.machine encoding:NSUTF8StringEncoding];&#125; 結果： @&quot;iPhone10,3&quot; on iPhone X (CDMA)@&quot;iPhone10,6&quot; on iPhone X (GSM) この回答を参照。 By Itachi | 回答日時： 2017年9月20日 7:51 Source: Detect if the device is iPhone X","raw":null,"content":null,"categories":[],"tags":[{"name":"ios","slug":"ios","permalink":"https://somatome.github.io/tags/ios/"},{"name":"objective-c","slug":"objective-c","permalink":"https://somatome.github.io/tags/objective-c/"},{"name":"iphone","slug":"iphone","permalink":"https://somatome.github.io/tags/iphone/"},{"name":"swift","slug":"swift","permalink":"https://somatome.github.io/tags/swift/"},{"name":"iphone-x","slug":"iphone-x","permalink":"https://somatome.github.io/tags/iphone-x/"}]},{"title":"JavaScriptでJSONをパースする方法？ [Javascript]","slug":"parse-json-in-javascript","date":"2017-10-11T08:00:01.000Z","updated":"2017-10-11T14:35:27.000Z","comments":true,"path":"2017/10/11/parse-json-in-javascript/","link":"","permalink":"https://somatome.github.io2017/10/11/parse-json-in-javascript/","excerpt":"質問：JavascriptでJSONをパースしたんだけど。レスポンスとして考えてるのはこんな感じ：\nvar response = '&#123;\"result\":true,\"count\":1&#125;';\nどうやったらresultとかcountとかの値を取ってこれる？\n By          user605334 | 質問日時： 2011年2月8日 16:34 ","text":"質問：JavascriptでJSONをパースしたんだけど。レスポンスとして考えてるのはこんな感じ： var response = '&#123;\"result\":true,\"count\":1&#125;'; どうやったらresultとかcountとかの値を取ってこれる？ By user605334 | 質問日時： 2011年2月8日 16:34 回答1:ほとんどのブラウザはJSON.parseをサポートしてて、ECMA-262第5版(JavaScriptが基づいている仕様)で定義されてる。使い方は簡単： var json = '&#123;\"result\":true,\"count\":1&#125;', obj = JSON.parse(json);alert(obj.count); これを実装することができないブラウザには、json2.jsをどうぞ。 すでにjQueryを使ってる場合は、$.parseJSON関数が（利用可能な場合は）JSON.parseにマップし、古いブラウザでは evalの形式にマップしてくれる。でも、これはJSON.parseでも実行される、余計なチェックをしてしまうので、どんな状況でもいいパフォーマンスが出るこんなやり方をオススメするかな： var json = '&#123;\"result\":true,\"count\":1&#125;', obj = JSON &amp;&amp; JSON.parse(json) || $.parseJSON(json); こうすると、ネイティブのパースする関数に渡す前にjQueryで文字列のサニティチェックを行わせるんじゃなくて、ネイティブのJSON.parseをすぐに使うことができる。 By Andy E | 回答日時： 2011年2月8日 16:38 回答2:古いブラウザでJSON 3を使いたければ、こうやって条件付きでそれをロードすることができるよ： &lt;script&gt; window.JSON || document.write('&lt;script src=\"//cdnjs.cloudflare.com/ajax/libs/json3/3.2.4/json3.min.js\"&gt;&lt;\\/scr'+'ipt&gt;');&lt;/script&gt; これで標準のwindow.JSONオブジェクトはクライアントがどんなブラウザを使っていようと利用可能だよ。 By huwiler | 回答日時： 2013年4月19日 18:52 回答3:これならわかりやすいかな？： var jsontext = '&#123;\"name\":\"x\",\"age\":\"11\"&#125;';var getContact = JSON.parse(jsontext);document.write(getContact.name + \", \" + getContact.age);// Output: x, 11 それか、eval関数を使うこともできるかな。次の例は、eval関数を使った例： var jsontext = '&#123;\"name\":\"x\",\"age\":\"11\"&#125;';var getContact = eval('(' + jsontext + ')');document.write(getContact.name + \", \" + getContact.age);// Output: x, 11 JSON.parse関数はより安全で、eval関数より速いから、JSON.parse関数を使うことをお勧めするよ。 By Joke_Sense10 | 回答日時： 2013年10月1日 7:42 Source: Parse JSON in JavaScript? [duplicate]","raw":null,"content":null,"categories":[],"tags":[{"name":"json","slug":"json","permalink":"https://somatome.github.io/tags/json/"},{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/tags/javascript/"},{"name":"parsing","slug":"parsing","permalink":"https://somatome.github.io/tags/parsing/"}]},{"title":"Pythonには部分文字列を探す文字列用の'contains'メソッドとかってある？ [Python]","slug":"does-python-have-a-string-contains-substring-method","date":"2017-10-11T08:00:01.000Z","updated":"2017-10-11T14:31:51.000Z","comments":true,"path":"2017/10/11/does-python-have-a-string-contains-substring-method/","link":"","permalink":"https://somatome.github.io2017/10/11/does-python-have-a-string-contains-substring-method/","excerpt":"質問：string.contains とか string.indexofみたいなメソッドをPythonで探してるんだけど。やりたい事は：\nif not somestring.contains(\"blah\"):   continue\n By  Blankman | 質問日時： Aug 9 ‘10 at 2:52 ","text":"質問：string.contains とか string.indexofみたいなメソッドをPythonで探してるんだけど。やりたい事は： if not somestring.contains(\"blah\"): continue By Blankman | 質問日時： Aug 9 ‘10 at 2:52 回答1:in演算子を使うといいよ： if \"blah\" not in somestring: continue By Michael Mrozek | 回答日時： Aug 9 ‘10 at 2:56 回答2:部分文字列検索の場合は string.find(&quot;substring&quot;)を使うことができるよ。 でもfind、index、inを使う時はちょっと気をつけて。どうしてかって言うと、それらは部分文字列検索だから。言い換えれば、： s = \"This be a string\"if s.find(\"is\") == -1: print \"No 'is' here!\"else: print \"Found 'is' in the string.\" これはFound &#39;is&#39; in the string.を出力するはず。同様に if &quot;is&quot; in s:はTrueと評価されるはず。これは君が望むものかどうかわからないけど。 By eldarerathis | 回答日時： Aug 9 ‘10 at 2:55 Source: Does Python have a string ‘contains’ substring method?","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/tags/python/"},{"name":"string","slug":"string","permalink":"https://somatome.github.io/tags/string/"},{"name":"substring","slug":"substring","permalink":"https://somatome.github.io/tags/substring/"},{"name":"contains","slug":"contains","permalink":"https://somatome.github.io/tags/contains/"}]},{"title":"サイズがバラバラなデータフレームを作成する [R]","slug":"create-a-data-frame-of-unequal-lengths","date":"2017-10-10T13:59:28.000Z","updated":"2017-10-10T13:59:28.000Z","comments":true,"path":"2017/10/10/create-a-data-frame-of-unequal-lengths/","link":"","permalink":"https://somatome.github.io2017/10/10/create-a-data-frame-of-unequal-lengths/","excerpt":"質問：データフレームって普通サイズが揃ってるけど、サイズの違うデータフレームって作る方法ある？１つのリストのバラバラな要素として保存するとかはしたくないんだ。なんでかって言うと、これを色んな人にCSVファイルとして送らないといけなくって、それをやるのはデータフレームが一番簡単だと思うから。\nx = c(rep(\"one\",2))y = c(rep(\"two\",10))z = c(rep(\"three\",5))cbind(x,y,z)\n上のコードでは、cbind()関数は短いcolumnをリサイクルして要素が10個あるようにしてるけど、これを要素が2,5,10個になるようにしたいんだ。以下の方法も試したけどあんまり効率が良くない。\ndf = data.frame(one=c(rep(\"one\",2),rep(\"\",8)),                 two=c(rep(\"two\",10)), three=c(rep(\"three\",5), rep(\"\",5)))\n By  ATMathew | 質問日時： 2011年8月25日 19:58 ","text":"質問：データフレームって普通サイズが揃ってるけど、サイズの違うデータフレームって作る方法ある？１つのリストのバラバラな要素として保存するとかはしたくないんだ。なんでかって言うと、これを色んな人にCSVファイルとして送らないといけなくって、それをやるのはデータフレームが一番簡単だと思うから。 x = c(rep(\"one\",2))y = c(rep(\"two\",10))z = c(rep(\"three\",5))cbind(x,y,z) 上のコードでは、cbind()関数は短いcolumnをリサイクルして要素が10個あるようにしてるけど、これを要素が2,5,10個になるようにしたいんだ。以下の方法も試したけどあんまり効率が良くない。 df = data.frame(one=c(rep(\"one\",2),rep(\"\",8)), two=c(rep(\"two\",10)), three=c(rep(\"three\",5), rep(\"\",5))) By ATMathew | 質問日時： 2011年8月25日 19:58 回答1:たぶん君の聞いてるのとは違うと思うけど、こんなのはどう？（別の方法は多分あると思うけど） まず、ベクトルの長さが異なる場合、データは実際にテーブル状にはなってないよね。 CSVファイルを別のCSVファイルに保存するのはどう？複数のオブジェクトを格納できるasciiフォーマットもいいかも(json、XML)。 もしテーブル状であるのがいいなら、NAで埋めてしまえばいい。 x = 1:5y = 1:12max.len = max(length(x), length(y))x = c(x, rep(NA, max.len - length(x)))y = c(y, rep(NA, max.len - length(y)))x [1] 1 2 3 4 5 NA NA NA NA NA NA NAy [1] 1 2 3 4 5 6 7 8 9 10 11 12 長さ位の違う列を持つ data.frameがいいなら、チェックをしないようにするとか。でもこれは自己責任で。 &gt; x = 1:5&gt; y = 1:12&gt; df = list(x=x, y=y)&gt; attributes(df) = list(names = names(df), row.names=1:max(length(x), length(y)), class='data.frame')&gt; df x y1 1 12 2 23 3 34 4 45 5 56 &lt;NA&gt; 67 &lt;NA&gt; 7 [ reached getOption(\"max.print\") -- omitted 5 rows ]]Warning message:In format.data.frame(x, digits = digits, na.encode = FALSE) : corrupt data frame: columns will be truncated or padded with NAs By Owen | 回答日時： 2011年8月25日 20:11 回答2:こんな風に出来るかも L &lt;- list(x,y,z)cfun &lt;- function(L) &#123; pad.na &lt;- function(x,len) &#123; c(x,rep(NA,len-length(x))) &#125; maxlen &lt;- max(sapply(L,length)) do.call(data.frame,lapply(L,pad.na,len=maxlen))&#125;(テストはしてない)。 By Ben Bolker | 回答日時： 2011年8月25日 20:08 回答3:パディングに対するもう1つのアプローチは： na.pad &lt;- function(x,len)&#123; x[1:len]&#125;makePaddedDataFrame &lt;- function(l,...)&#123; maxlen &lt;- max(sapply(l,length)) data.frame(lapply(l,na.pad,len=maxlen),...)&#125;x = c(rep(\"one\",2))y = c(rep(\"two\",10))z = c(rep(\"three\",5))makePaddedDataFrame(list(x=x,y=y,z=z)) na.pad()関数は、存在しない要素を参照しようとすると自動的にNAで埋めたベクトルを返すRの機能を利用してる。 makePaddedDataFrame()は一番長いものを見つけて、残りの部分を一致する長さに埋めるってことをやってる。 By Peter M | 回答日時： 2011年8月25日 20:19 Source: Create a Data Frame of Unequal Lengths","raw":null,"content":null,"categories":[],"tags":[{"name":"r","slug":"r","permalink":"https://somatome.github.io/tags/r/"},{"name":"dataframe","slug":"dataframe","permalink":"https://somatome.github.io/tags/dataframe/"}]},{"title":"変数を使用してオブジェクトプロパティに動的にアクセスする方法？ [Javascript]","slug":"dynamically-access-object-property-using-variable","date":"2017-10-10T13:59:28.000Z","updated":"2017-10-10T14:19:17.000Z","comments":true,"path":"2017/10/10/dynamically-access-object-property-using-variable/","link":"","permalink":"https://somatome.github.io2017/10/10/dynamically-access-object-property-using-variable/","excerpt":"質問：動的な変数名を使ってオブジェクトのプロパティにアクセスしようとしてるんだけど、これって可能？\nconst something = &#123; bar: \"Foobar!\" &#125;;const foo = 'bar';something.foo; // このsomething.bar, \"Foobar!\"を取得したい\n By  RichW | 質問日時： 2010年11月22日 11:23 ","text":"質問：動的な変数名を使ってオブジェクトのプロパティにアクセスしようとしてるんだけど、これって可能？ const something = &#123; bar: \"Foobar!\" &#125;;const foo = 'bar';something.foo; // このsomething.bar, \"Foobar!\"を取得したい By RichW | 質問日時： 2010年11月22日 11:23 回答1:プロパティにアクセスするには2つの方法がある ドット表記： something.bar ブラケット記法： something [&#39;bar&#39;] 角かっこの間の値は、任意の式。だから、プロパティ名が変数に格納されている場合は、ブラケット表記を使用する必要があるよ。 const foo = 'bar';something[foo]; By Jan Hančič | 回答日時： 2010年11月22日 11:25 回答2:javascriptでは次の形でアクセスできるよ： ドット表記 - foo.bar 大括弧 - foo [someVar]または foo [&quot; string &quot;] でも2番目のケースだけがプロパティに動的にアクセスできる。 var foo = &#123; pName1 : 1, pName2 : [1, &#123;foo : bar &#125;, 3] , ...&#125;var name = \"pName\"var num = 1;foo[name + num]; // 1// --var a = 2;var b = 1;var c = \"foo\";foo[name + a][b][c]; // bar By Sonique | 回答日時： 2014年7月1日 15:40 回答3:以下は、オブジェクトのプロパティにアクセスする方法のES6での例。2つの文字列を連結して動的に生成されたプロパティ名を使用してアクセスする方法。 var suffix = \" name\";var person = &#123; [\"first\" + suffix]: \"Nicholas\", [\"last\" + suffix]: \"Zakas\"&#125;;console.log(person[\"first name\"]); // \"Nicholas\"console.log(person[\"last name\"]); // \"Zakas\" これは計算されたプロパティ名 Computed property namesって呼ばれてる。 By zloctb | 回答日時： 2016年8月2日 19:46 Source: Dynamically access object property using variable","raw":null,"content":null,"categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/tags/javascript/"},{"name":"object","slug":"object","permalink":"https://somatome.github.io/tags/object/"},{"name":"properties","slug":"properties","permalink":"https://somatome.github.io/tags/properties/"}]},{"title":"ディレクトリが存在しない場合、どうやって作ったらいいの？ [Python]","slug":"how-can-i-create-a-directory-if-it-does-not-exist","date":"2017-09-29T20:05:53.000Z","updated":"2017-09-29T20:48:34.000Z","comments":true,"path":"2017/09/29/how-can-i-create-a-directory-if-it-does-not-exist/","link":"","permalink":"https://somatome.github.io2017/09/29/how-can-i-create-a-directory-if-it-does-not-exist/","excerpt":"質問：ファイルが書き込まれるディレクトリが存在するかどうかを調べて、もし存在しない場合は、Pythonを使ってディレクトリを作るための最もエレガントな方法って何？以下は試したんだけど： \nimport osfile_path = \"/my/directory/filename.txt\"directory = os.path.dirname(file_path)try:    os.stat(directory)except:    os.mkdir(directory)       f = file(filename)\nどういうわけかos.path.existsっていうのがあるのを知らなかったので、こうしたんだけど： \ndef ensure_dir(file_path):    directory = os.path.dirname(file_path)    if not os.path.exists(directory):        os.makedirs(directory)\nこれが自動的に行われるようにするような、 “open”のためのフラグってある？ \n By  Parand | 質問日時： 2008年11月7日 18:56 ","text":"質問：ファイルが書き込まれるディレクトリが存在するかどうかを調べて、もし存在しない場合は、Pythonを使ってディレクトリを作るための最もエレガントな方法って何？以下は試したんだけど： import osfile_path = \"/my/directory/filename.txt\"directory = os.path.dirname(file_path)try: os.stat(directory)except: os.mkdir(directory) f = file(filename) どういうわけかos.path.existsっていうのがあるのを知らなかったので、こうしたんだけど： def ensure_dir(file_path): directory = os.path.dirname(file_path) if not os.path.exists(directory): os.makedirs(directory) これが自動的に行われるようにするような、 “open”のためのフラグってある？ By Parand | 質問日時： 2008年11月7日 18:56 回答1:２つ答えがあって、それぞれに良し悪しがあるんだけど、僕が書くなら： os.path.existsを試してみて、ディレクトリを作るにはos.makedirsはどうかな。 if not os.path.exists(directory): os.makedirs(directory) でもこれってちょっとややこしいんだ — もしディレクトリが os.path.existsとos.makedirs呼び出しの間に作られたら、os.makedirsはOSErrorで失敗する。残念だけど、助けを出すOSErrorとそれを実行し続けることはフールプルーフ(foolproof)じゃない。なぜなら、例えばアクセス許可がない場合とかディスク容量が無いとかの他の要因でディレクトリ作成が失敗してもそれを無視するからね。 1つのオプションは OSErrorをトラップし、埋め込まれたエラーコードを調べること。(PythonのOSErrorから情報を取得するためのクロスプラットフォームの方法はありますか？参照）： import os, errnotry: os.makedirs(directory)except OSError as e: if e.errno != errno.EEXIST: raise あるいは、2つ目の os.path.existsっていうのも考えられるけど、仮に別の人が一つ目のチェックの後にディレクトリを作って、２つ目のチェックの前に削除してしまう、みたいな場合でもうまくいかない可能性がある。 アプリケーションによって、同時操作の危険性はファイルアクセス権とかの他の要因によって引き起こされる危険性よりも高かったり低かったり刷るから、開発者は実装を選ぶ前に開発されてる特定のアプリケーションと期待されてる環境の詳細をよく知ってる必要があるよね。 By Blair Conrad | 回答日時： 2008年11月7日 19:06 回答2:try exceptとerrnoモジュールの正しいエラーコードを使えば、競合状態(race condition)の可能性を排除できるし、クロスプラットフォームでもあるよ： import osimport errnodef make_sure_path_exists(path): try: os.makedirs(path) except OSError as exception: if exception.errno != errno.EEXIST: raise つまり、ディレクトリを作成しようとしますが、すでに存在する場合はエラーを無視する。一方、その他のエラーは報告される。たとえば、’a’というディレクトリをあらかじめ作成しておき、その中からすべての権限を削除すると、errno.EACCESでOSErrorが発生するよ(パーミッションが拒否されました。エラー13)。 By Heikki Toivonen | 回答日時： 2011年2月17日 17:17 回答3:私は個人的にはos.path.exists()よりも os.path.isdir()を使うのをおすすめするかな： &gt;&gt;&gt; os.path.exists('/ tmp/dirname')True&gt;&gt;&gt; os.path.exists('/ tmp/dirname/filename.etc')True&gt;&gt;&gt; os.path.isdir('/ tmp/dirname/filename.etc')False&gt;&gt;&gt; os.path.isdir('/ tmp/fakedirname')False これがあるとして、 &gt;&gt;&gt; dir = raw_input(\":: \") そして、こんなバカみたいなユーザー入力があると： :: /tmp/dirname/filename.etc もしos.path.exists()でテストした場合、引数がos.makedirs()に渡されるから、filename.etcという名前のディレクトリができてしまうことになる。 By crimsonstone | 回答日時： 2009年1月14日 17:57 Source: How can I create a directory if it does not exist?","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/tags/python/"},{"name":"exception","slug":"exception","permalink":"https://somatome.github.io/tags/exception/"},{"name":"directory","slug":"directory","permalink":"https://somatome.github.io/tags/directory/"}]},{"title":"git pullで強制的にローカルファイルを上書きするには？ [Git]","slug":"how-do-i-force-git-pull-to-overwrite-local-files","date":"2017-09-29T17:42:38.000Z","updated":"2017-10-02T22:25:48.181Z","comments":true,"path":"2017/09/29/how-do-i-force-git-pull-to-overwrite-local-files/","link":"","permalink":"https://somatome.github.io2017/09/29/how-do-i-force-git-pull-to-overwrite-local-files/","excerpt":"質問：git pullでローカルファイルを強制的に上書きするにはどうしたらいいの？\nやろうとしてるのはこんな感じ：\n\nチームメンバーが取り組んでいるウェブサイトのテンプレートを変更\n彼らは画像ディレクトリに画像を追加(ただし、ソース管理の下に追加することは忘れてる)\n彼らは僕に「後で」メールで画像を送ってくる\nで、僕が画像をソースコントロールの下に追加して、GitHubに他の変更と一緒に押し込んでる\nでもGitはファイルを上書きしたくないので彼らはGitHubから更新をpullできない\n\n出て来るエラーは次の通り：\n\nerror: Untracked working tree file ‘public/images/icon.gif’ would be overwritten by merge.(訳：エラー：未処理の作業ツリーファイル’public/images/icon.gif’がマージによって上書きされます。)\n\nGitにそれらを上書きさせるにはどうすればいい？その人(上書きされる人)はデザイナーで、通常は僕がそれらの競合を手作業で解決するから、サーバーには最新のバージョンがあって、彼らはただ彼らのコンピュータ内のファイルをで更新するだけでいいんだ。\n By  Jakub Troszok | 質問日時： 2009年7月14日 14:58 ","text":"質問：git pullでローカルファイルを強制的に上書きするにはどうしたらいいの？ やろうとしてるのはこんな感じ： チームメンバーが取り組んでいるウェブサイトのテンプレートを変更 彼らは画像ディレクトリに画像を追加(ただし、ソース管理の下に追加することは忘れてる) 彼らは僕に「後で」メールで画像を送ってくる で、僕が画像をソースコントロールの下に追加して、GitHubに他の変更と一緒に押し込んでる でもGitはファイルを上書きしたくないので彼らはGitHubから更新をpullできない 出て来るエラーは次の通り： error: Untracked working tree file ‘public/images/icon.gif’ would be overwritten by merge.(訳：エラー：未処理の作業ツリーファイル’public/images/icon.gif’がマージによって上書きされます。) Gitにそれらを上書きさせるにはどうすればいい？その人(上書きされる人)はデザイナーで、通常は僕がそれらの競合を手作業で解決するから、サーバーには最新のバージョンがあって、彼らはただ彼らのコンピュータ内のファイルをで更新するだけでいいんだ。 By Jakub Troszok | 質問日時： 2009年7月14日 14:58 回答1:重要：ローカルで変更があった場合、それらは失われる。--hardオプションがあろうがなかろうが、プッシュされていないローカルコミットは失われる[*]Gitによって管理されてないファイルがある場合(例えば、アップロードされたユーザコンテント）、これらのファイルは影響を受けません。 僕ははこれが一番いい方法だと思う： git fetch --all 次に、2つのオプションがある。 git reset --hard origin/master または、他のブランチにいる場合： git reset --hard origin/&lt;branch_name&gt; 説明：git fetchは、マージやリベースを試みずにリモートから最新のものをダウンロードする。 次に、 git resetはマスターブランチを君がちょうど取得したものにリセットする。--hardオプションは作業ツリー内のすべてのファイルをorigin/master内のファイルに合わせて変更 [*]：リセットする前に masterからブランチを作成することによって現在のローカルコミットを維持することは可能であることは知っておくべきだと思う： git checkout mastergit branch new-branch-to-save-current-commitsgit fetch --allgit reset --hard origin/master この後、すべての古いコミットは new-branch-to-save-current-commitsに保存される。ただしコミットされていない変更は(stagedのものでさえも)失われます。だから必要なものを隠して、コミットしてね。 By RNA | 回答日時： 2012年1月17日 0:02 回答2:これを試してみれば？： git reset --hard HEADgit pull それで望む挙動になると思う。 By Travis R | 回答日時： 2010年5月9日 19:45 回答3:警告： git cleanはあなたの追跡されていないファイル/ディレクトリをすべて削除し、元に戻してしまうのに注意。 場合によっては clean -fが役に立たないこともある。untrackedなディレクトリがある場合、-dオプションも必要だよ： git reset --hard HEADgit clean -f -dgit pull 警告： git cleanはあなたの追跡されていないファイル/ディレクトリをすべて削除し、元に戻してしまうのに注意。 By David Avsajanishvili | 回答日時： 2011年3月19日 9:10 Source: How do I force “git pull” to overwrite local files?","raw":null,"content":null,"categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://somatome.github.io/tags/git/"},{"name":"version-control","slug":"version-control","permalink":"https://somatome.github.io/tags/version-control/"},{"name":"overwrite","slug":"overwrite","permalink":"https://somatome.github.io/tags/overwrite/"},{"name":"git-pull","slug":"git-pull","permalink":"https://somatome.github.io/tags/git-pull/"},{"name":"git-fetch","slug":"git-fetch","permalink":"https://somatome.github.io/tags/git-fetch/"}]},{"title":"JavaScriptの配列から特定の要素を削除するにはどうすればいいの？ [Javascript]","slug":"how-do-i-remove-a-particular-element-from-an-array-in-javascript","date":"2017-09-28T23:38:53.000Z","updated":"2017-09-29T17:50:19.000Z","comments":true,"path":"2017/09/29/how-do-i-remove-a-particular-element-from-an-array-in-javascript/","link":"","permalink":"https://somatome.github.io2017/09/29/how-do-i-remove-a-particular-element-from-an-array-in-javascript/","excerpt":"質問：整数の配列があって、要素を追加するために`.push()``メソッドを使用してるとする。\nここで、配列から特定の要素を削除する簡単な方法ってある？ array.remove(int);みたいな感じの。\nただし、JavaScript のみ を使用するとして。フレームワークは使えないんだ。\n By  Walker | 質問日時： 2011年4月23日 22:17 ","text":"質問：整数の配列があって、要素を追加するために`.push()``メソッドを使用してるとする。 ここで、配列から特定の要素を削除する簡単な方法ってある？ array.remove(int);みたいな感じの。 ただし、JavaScript のみ を使用するとして。フレームワークは使えないんだ。 By Walker | 質問日時： 2011年4月23日 22:17 回答1:まず、削除したい要素の indexを見つけよう： var array = [2, 5, 9];var index = array.indexOf(5); _注：indexOfのブラウザサポートは限られてる。Internet Explorer 7および8ではサポートされてないよ。 次に、spliceで削除する： if (index &gt; -1) &#123; array.splice(index, 1);&#125; spliceの2番目のパラメータは削除する要素の数。spliceは配列の場所を変えて、削除された要素を含む新しい配列を返す。 サポートされていないブラウザで indexOfが必要な場合は、以下のpolyfillを試してみて。詳しくはここのpolyfillを参照。 Array.prototype.indexOf || (Array.prototype.indexOf = function(d, e) &#123; var a; if (null == this) throw new TypeError('\"これ\" はNULLまたは定義されていない'); var c = Object(this), b = c.length &gt;&gt;&gt; 0; if (0 === b) return -1; a = +e || 0; Infinity === Math.abs(a) &amp;&amp; (a = 0); if (a &gt;= b) return -1; for (a = Math.max(0 &lt;= a ? a : b - Math.abs(a), 0); a &lt; b;) &#123; if (a in c &amp;&amp; c[a] === d) return a; a++ &#125; return -1&#125;); By Tom Wadley | 回答日時： 2011年4月23日 22:23 回答2:array.remove(int)がどのように動作することを期待しているのか分からないけど、あなたが欲しいかもと思う答えは3つの可能性があるかな： インデックスがiである配列の要素を削除するには： array.splice(i, 1); 値 numberを持つすべての要素を配列から削除する場合は、次のようにします。 for(var i = array.length - 1; i &gt;= 0; i--) &#123; if(array[i] === number) &#123; array.splice(i, 1); &#125;&#125; インデックスのある要素iを削除したくて、でも他の要素のインデックスを変更したくないのなら、 delete array[i]; By Peter Olson | 回答日時： 2011年4月23日 22:20 Source: How do I remove a particular element from an array in JavaScript?","raw":null,"content":null,"categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/tags/javascript/"},{"name":"arrays","slug":"arrays","permalink":"https://somatome.github.io/tags/arrays/"}]},{"title":"JSONでコメントって使用できる？ [JSON]","slug":"can-comments-be-used-in-json","date":"2017-09-28T23:20:46.000Z","updated":"2017-09-29T01:23:37.828Z","comments":true,"path":"2017/09/29/can-comments-be-used-in-json/","link":"","permalink":"https://somatome.github.io2017/09/29/can-comments-be-used-in-json/","excerpt":"質問：JSONファイル内でコメントって使用できる？もしそうなら、どうやるの？\n By  Michael Gundlach | 質問日時： 2008年10月28日 20:39 ","text":"質問：JSONファイル内でコメントって使用できる？もしそうなら、どうやるの？ By Michael Gundlach | 質問日時： 2008年10月28日 20:39 回答1:できるとは思わないなー。JSONはすべてデータである必要があるから、コメントを追加するとそれもデータになるよ。 JSONデータを使用するアプリケーションでは無視される（例えば）”_comment” という指定のデータ要素を持つことができると思うけど。 JSONを生成/受信するプロセスの中にコメントを入れておいたほうがいいんじゃないかな。だってそのプロセスはJSONデータが何かを（少なくともJSONの構造については）事前に知っているはずなので。 でも、もしどうしてもって言うのなら： &#123; \"_comment\": \"コメントはここに..\", \"glossary\": &#123; \"title\": \"example glossary\", \"GlossDiv\": &#123; \"title\": \"S\", \"GlossList\": &#123; \"GlossEntry\": &#123; \"ID\": \"SGML\", \"SortAs\": \"SGML\", \"GlossTerm\": \"Standard Generalized Markup Language\", \"Acronym\": \"SGML\", \"Abbrev\": \"ISO 8879:1986\", \"GlossDef\": &#123; \"para\": \"A meta-markup language, used to create markup languages such as DocBook.\", \"GlossSeeAlso\": [\"GML\", \"XML\"] &#125;, \"GlossSee\": \"markup\" &#125; &#125; &#125; &#125;&#125; By Eli | 回答日時： 2008年10月28日 21:01 回答2:ダメ。 // ...とか / * ... * /の形式のコメントはJSONには無いよ。以下を参照： http://www.json.org RFC 4627：JavaScript Object Notation(JSON)のapplication/jsonメディアタイプ RFC 7159JavaScript Object Notation(JSON)データ交換フォーマット - 廃止：4627,7158 By stakx | 回答日時： 2010年11月15日 9:32 回答3:コメントは設計上JSONから削除されたよ。 私はJSONからコメントを削除しました。なぜなら、構文解析ディレクティブを保持するのにJSONのコメントを使用してる人を見たことがあるから。このやり方は相互運用性を破壊してしまう。 私は、コメントが無いことによって落胆する人々がいることも知ってるけど、でもコメントはあるべきじゃない。 JSONを使用したconfigurationファイルがあるとする（そしてそれに注釈を付けたい）。好きなコメントをすべて挿入したらいい。でもその後JSONパーサに渡す前にJSMinでパイプ処理してください。 出典：G +でのDouglas Crockfordの公式声明 By Artur Czajka | 回答日時： 2012年6月11日 8:52 Source: Can comments be used in JSON?","raw":null,"content":null,"categories":[],"tags":[{"name":"json","slug":"json","permalink":"https://somatome.github.io/tags/json/"},{"name":"comments","slug":"comments","permalink":"https://somatome.github.io/tags/comments/"}]},{"title":"JavaScriptでの比較で、等号演算子（== vs ===）のどっちを使うべき？ [Javascript]","slug":"which-equals-operator-vs-should-be-used-in-javascript-comparisons","date":"2017-09-28T22:43:32.000Z","updated":"2017-10-02T19:23:02.367Z","comments":true,"path":"2017/09/28/which-equals-operator-vs-should-be-used-in-javascript-comparisons/","link":"","permalink":"https://somatome.github.io2017/09/28/which-equals-operator-vs-should-be-used-in-javascript-comparisons/","excerpt":"質問：JSLintを使ってて、if文の中でidSele_UNVEHtype.value.length == 0を比較する時とか、==(2つの等号)を===(3つの等号)で置き換えろ、ってサジェストが出るんだけど、==を===に置き換えるとパフォーマンス上のメリットとかってある？\n比較演算子をいっぱい使ってるので、パフォーマンスの改善は歓迎なんだけど。。。\n型変換が行われない場合は、==を置き換えるメリットってある？\n By  bcasp | 質問日時： 2008年12月11日 14:19 ","text":"質問：JSLintを使ってて、if文の中でidSele_UNVEHtype.value.length == 0を比較する時とか、==(2つの等号)を===(3つの等号)で置き換えろ、ってサジェストが出るんだけど、==を===に置き換えるとパフォーマンス上のメリットとかってある？ 比較演算子をいっぱい使ってるので、パフォーマンスの改善は歓迎なんだけど。。。 型変換が行われない場合は、==を置き換えるメリットってある？ By bcasp | 質問日時： 2008年12月11日 14:19 回答1:型変換が行われていないことを除けば、同一性(===)演算子は、等価(==)と同じように動作するよ。等しいとみなされるためには型は同じでなければだめ。 リファレンス：Javascriptチュートリアル：比較オペレータ ==演算子は、必要な型を実行した後、等価性を比較する。===&#39; 演算子はその変換をしないので、2つの値が同じ型じゃない時、===は単にfalse`を返す。どちらもおんなじぐらい速いかな。 ダグラス・クロフォードの優れた本JavaScript：The Good Partsを引用すると、 JavaScriptには、2種類の等価演算子、===と!==、そして出来の悪い双子 ==と !=がある。良い子の方は、君が期待する方法で動作するだろう。もし2つのオペランドが同じ型で同じ値を持つなら、===はtrueを返し、!==はfalseを返す。邪悪な双子の方はオペランドの型が同じなら同じように働くけど、型が異なる場合は値を強制しようとする。このルールはは複雑で覚えてなんかいられない。下は一例： &gt; '' == '0' // false&gt; 0 == '' // true&gt; 0 == '0' // true&gt;&gt; false == 'false' // false&gt; false == '0' // true&gt;&gt; false == undefined // false&gt; false == null // false&gt; null == undefined // true&gt;&gt; ' \\t\\r\\n ' == 0 // true&gt; &gt; 推移性の欠如は気をつけるべき。僕のアドバイスは悪い双子をを使わないことだ。代わりに、常に===と !==を使用すること。===演算子では上でのすべての比較にfalseを返すから。 ###更新： 参照までに、(特別な場合を除き)型==と===はお互い一貫して同じように動作するよ。別のもの。 var a = [1,2,3];var b = [1,2,3];var c = &#123; x: 1, y: 2 &#125;;var d = &#123; x: 1, y: 2 &#125;;var e = \"text\";var f = \"te\" + \"xt\";a == b // falsea === b // falsec == d // falsec === d // falsee == f // truee === f // true 特殊なケースは、リテラルを評価するオブジェクトと比較する場合。toStringやvalueOfメソッドのために同じリテラルに変換する。例えば、文字列リテラルと、Stringコンストラクタによって作られた文字列オブジェクトの比較を見てみよう： \"abc\" == new String(\"abc\") // true\"abc\" === new String(\"abc\") // false ここで、 ==演算子は2つのオブジェクトの値をチェックし、trueだけど、===はそれらが同じ型ではないのでfalse。どちらが正しいか？それは君が比較しようとしているものに依存するね。僕のアドバイスは、そんな質問は忘れて、文字列オブジェクトを作るためにStringコンストラクタを使わないこと。 参照http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3 By Bill the Lizard | 回答日時： 2008年12月11日 14:25 回答2:==演算子(Equality)を使うと、 true == 1; // true、 'true'は1に変換されて比較される\"2\" == 2; // true、 \"2\"が2に変換されて比較されるため ===演算子(Identity)を使用すると、 true === 1; //false\"2\" === 2; //false これは、等価演算子==は型強制を行うため。つまり、インタプリタは暗黙的に比較する前に値を変換しようとする。 一方、アイデンティティ演算子 ===は型強制をしない、だから比較の際には値を変換しないよ。 Source: Which equals operator (== vs ===) should be used in JavaScript comparisons?","raw":null,"content":null,"categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/tags/javascript/"},{"name":"operators","slug":"operators","permalink":"https://somatome.github.io/tags/operators/"},{"name":"equality","slug":"equality","permalink":"https://somatome.github.io/tags/equality/"},{"name":"equality-operator","slug":"equality-operator","permalink":"https://somatome.github.io/tags/equality-operator/"},{"name":"identity-operator","slug":"identity-operator","permalink":"https://somatome.github.io/tags/identity-operator/"}]},{"title":"Gitリポジトリを以前のコミットに戻すには？ [Git]","slug":"how-to-revert-git-repository-to-a-previous-commit","date":"2017-09-28T20:17:49.000Z","updated":"2017-09-28T23:15:08.970Z","comments":true,"path":"2017/09/28/how-to-revert-git-repository-to-a-previous-commit/","link":"","permalink":"https://somatome.github.io2017/09/28/how-to-revert-git-repository-to-a-previous-commit/","excerpt":"質問：現在の状態から、あるコミットの時点でのスナップショットに戻すのってどうやればいいの？git logをすると、こんなのが出力されるんだけど：$ git logcommit a867b4af366350be2e7c21b8de9cc6504678a61b`Author: Me &lt;me@me.com&gt;Date:   Thu 11月 4 18:59:41 2010 -0400なんとかかんとか...commit 25eee4caef46ae64aa08e8ab3f988bc917ee1ce4Author: Me &lt;me@me.com&gt;Date:   Thu 11月 4 05:13:39 2010 -0400なんとかかんとかかんとか...commit 0766c053c0ea2035e90f504928f8df3c9363b8bdAuthor: Me &lt;me@me.com&gt;Date:   Thu 11月 4 00:55:06 2010 -0400さらになんとかかんとか...commit 0d1d7fc32e5a947fbd92ee598033d85bfc445a50Author: Me &lt;me@me.com&gt;Date:   Wed 11月 3 23:56:08 2010 -0400そう、もっともっとなんとかかんとか...\nどうやってここから11月3日、つまりコミット0d1d7fc…に戻せばいいの？\n By  Crazy Serb | 質問日時： 2010年11月6日 16:58 ","text":"質問：現在の状態から、あるコミットの時点でのスナップショットに戻すのってどうやればいいの？git logをすると、こんなのが出力されるんだけど：$ git logcommit a867b4af366350be2e7c21b8de9cc6504678a61b`Author: Me &lt;me@me.com&gt;Date: Thu 11月 4 18:59:41 2010 -0400なんとかかんとか...commit 25eee4caef46ae64aa08e8ab3f988bc917ee1ce4Author: Me &lt;me@me.com&gt;Date: Thu 11月 4 05:13:39 2010 -0400なんとかかんとかかんとか...commit 0766c053c0ea2035e90f504928f8df3c9363b8bdAuthor: Me &lt;me@me.com&gt;Date: Thu 11月 4 00:55:06 2010 -0400さらになんとかかんとか...commit 0d1d7fc32e5a947fbd92ee598033d85bfc445a50Author: Me &lt;me@me.com&gt;Date: Wed 11月 3 23:56:08 2010 -0400そう、もっともっとなんとかかんとか... どうやってここから11月3日、つまりコミット0d1d7fc…に戻せばいいの？ By Crazy Serb | 質問日時： 2010年11月6日 16:58 回答1:これは”元に戻す”がどういう意味かによるかな。 一時的に別のコミットに切り替えるもし一時的にそれに戻して、なんか作業して、また元に戻ってきたいのなら、望みのコミットをチェックアウトすればいい： # これはHEADを切り離す、つまり、ブランチをチェックアウトしないままにする：git checkout 0d1d7fc32 または、そこに戻してる間にコミットしたい場合は、そこにいる間に新しいブランチを作るべき： git checkout -b old-state 0d1d7fc32 元の場所に戻るには、もう一度あなたがいた支店をチェックしてください。 (Ifブランチを切り替えるときはいつものように変更を加えました。必要に応じてそれらと一緒に。あなたはそれらを捨てるようにリセットすることができます。あなたは隠れて、チェックアウトして、あなたと一緒に連れていってください。それらをブランチにコミットすることができますそこに支店が必要な場合はそこに。) ##非公開のコミットをハード削除する 一方で、あなたが本当にやったことすべてを取り除きたいのであればそれ以来、2つの可能性があります。 1つ、あなたがこれらのコミットは、単にリセットします： ＃これにより、ローカルの変更はすべて破棄されます。 ＃コミットしたくない作業が残っている場合は、実行しないでください。 git reset --hard 0d1d7fc32 ＃あるいは、保存する作業がある場合： git stash git reset --hard 0d1d7fc32 git stash pop ＃これは変更を保存し、リセット後にそのパッチを再適用します。 ＃マージの競合が発生する可能性があります。 ＃あなたがリセットしたコミットから変更されました。 面倒なことがあれば、あなたはすでにローカルの変更を投げ捨てましたが、もう一度リセットすることで、以前の場所に戻ってください。 ##新しいコミットでコミットされたコミットを元に戻す 一方、あなたが作品を発表した場合、おそらくブランチをリセットすると、効果的に履歴を書き換えられるからです。その場合、あなたは確かにコミットを元に戻すことができます。 Gitを使うと、元に戻すことは非常に特殊です意味：逆パッチでコミットを作成して取り消します。このようにして履歴を書き換えないでください。 ＃これは3つの別々の復帰コミットを作成します： git revert a867b4af 25eee4ca 0766c053 ＃それはまた範囲を取る。これは最後の2つのコミットを元に戻します： git revert HEAD〜2..HEAD ＃同様に、コミットハッシュを使用して一連のコミットを元に戻すことができます。 git revert a867b4af..0766c053 ＃マージコミットを元に戻す git revert -m 1 &lt;merge_commit_sha&gt; ＃ちょうど1つを得るには、 `rebase -i`を使って後でそれらを押しつぶすことができます ＃または、手動で行うこともできます(リポジトリのトップレベルでこれを行うことを忘れないでください) ＃HEADを変更せずに、あなたのインデックスと作業ツリーを目的の状態にする： git checkout 0d1d7fc32。 ＃次にコミットします。あなたがやったことを説明する良いメッセージを書いてください git commit git-revertマンページ実際にはその説明で多くのことをカバーしています。もう一つの役に立つリンクは[thisgit-scm.comブログ投稿でgit-revertについて議論する(http：// git-scm.com/blog/2010/03/02/undoing-merges.html)。 あなたが結局元に戻したくないと決めたら、元に戻すことができます(ここで説明したように)、または元に戻す前にリセットすることができます(前のセクション)。 この回答は、この場合に役立ちます：HEADを元の場所に戻す方法は？ (分離されたhead) # This will destroy any local modifications.# Don&apos;t do it if you have uncommitted work you want to keep.git reset --hard 0d1d7fc32# Alternatively, if there&apos;s work to keep:git stashgit reset --hard 0d1d7fc32git stash pop# This saves the modifications, then reapplies that patch after resetting.# You could get merge conflicts, if you&apos;ve modified things which were# changed since the commit you reset to. # This will create three separate revert commits:git revert a867b4af 25eee4ca 0766c053# It also takes ranges. This will revert the last two commits:git revert HEAD~2..HEAD#Similarly, you can revert a range of commits using commit hashes:git revert a867b4af..0766c053# Reverting a merge commitgit revert -m 1 &lt;merge_commit_sha&gt;# To get just one, you could use `rebase -i` to squash them afterwards# Or, you could do it manually (be sure to do this at top level of the repo)# get your index and work tree into the desired state, without changing HEAD:git checkout 0d1d7fc32 .# Then commit. Be sure and write a good message describing what you just didgit commit By Jefromi | 回答日時： Nov 6 2010 at 17:04 回答2:作業コピーを最新のコミットに戻す以前のコミットに戻し、変更を無視するには： git reset --hard HEAD HEADは現在のブランチの最後のコミットね。 作業コピーを古いコミットに戻す直近のコミットよりも古いコミットに戻すには： # インデックスを以前のコミットにリセットする。 '56e05fced'は適宜書き換えてgit reset 56e05fced# ポインタを前のHEADに戻すgit reset --soft HEAD@&#123;1&#125;git commit -m \"56e05fcedに戻す\"# 新しいコミットを反映するように作業コピーを更新するgit reset --hard 元ネタは同じような質問のページ: SHAハッシュで以前のコミットに戻る方法？ By boulder_ruby | 回答日時： Aug 21 ‘12 at 6:19 回答3:複雑でヤバい答えがたくさんあるけど、実際は簡単： git revert --no-commit 0766c053..HEADgit commit これは、HEADからコミットハッシュに戻ってすべてを元に戻すよ。つまり、すべてのコミットがその状態に戻ったかのように作業ツリー内のそのコミット状態を再び作成してる。。それから現在のツリーをコミットすると、「元に戻した」コミットと本質的に同等の新しいコミットをするよ。 (--no-commitフラグは、すべてのコミットを一度に元に戻す - そうじゃければ範囲内の各コミットのコメントを入れるように促される、これはコミット履歴を不要な新しいコミットのゴミで汚しちゃうけど) 重要なのは、これは以前の状態にロールバックする安全かつ簡単な方法だってこと。履歴は壊されることなく、すでに公開されているコミットに使用することができる。 By Yarin | 回答日時： Feb 12 ‘14 at 4:18 回答4:僕にとっては（たぶん他の人にも）、一番いいのはGitリセットオプションだよ： git reset --hard &lt;commidId&gt; &amp;amp;&amp;amp; git clean -f これは僕にとって最高の選択肢だった！シンプルで、速く、効果的！ 注意： でも古いコミットのコピーを持っている他の人とブランチを共有している場合は、この方法は使わないこと！ あと、あんまりヤバくない方法がお好みの時は、 git clean -i By Pogrindis | 回答日時： Oct 22 ‘13 at 11:53 Source: How to revert Git repository to a previous commit?","raw":null,"content":null,"categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://somatome.github.io/tags/git/"},{"name":"git-checkout","slug":"git-checkout","permalink":"https://somatome.github.io/tags/git-checkout/"},{"name":"git-reset","slug":"git-reset","permalink":"https://somatome.github.io/tags/git-reset/"},{"name":"git-revert","slug":"git-revert","permalink":"https://somatome.github.io/tags/git-revert/"}]},{"title":"ローカルGitブランチの名前を変更するにはどうすればいい？ [Git]","slug":"how-do-i-rename-a-local-git-branch","date":"2017-09-26T10:40:46.000Z","updated":"2017-09-26T10:56:29.115Z","comments":true,"path":"2017/09/26/how-do-i-rename-a-local-git-branch/","link":"","permalink":"https://somatome.github.io2017/09/26/how-do-i-rename-a-local-git-branch/","excerpt":"質問：ローカルとリモートの両方のGitリポジトリのMaster branchの名前を変更するに書いてあるように、リモートブランチの名前は変更したくないんだけど。\nリモートブランチにプッシュされていないローカルブランチの名前を変更するにはどうしたらいいの？\n By  Forrest | 質問日時： Jul 6 ‘11 at 3:20 ","text":"質問：ローカルとリモートの両方のGitリポジトリのMaster branchの名前を変更するに書いてあるように、リモートブランチの名前は変更したくないんだけど。 リモートブランチにプッシュされていないローカルブランチの名前を変更するにはどうしたらいいの？ By Forrest | 質問日時： Jul 6 ‘11 at 3:20 回答1:あるブランチを指定してそのブランチの名前を変更する場合は、次のようにやればいいよ。 git branch -m &lt;oldname&gt; &lt;newname&gt; 今使ってるブランチの名前を変更するには、次のように git branch -m &lt;newname&gt; これを覚えておくには、 -mは”move”(またはmv)、つまりファイル名の変更だ、って覚えておくといいかも。 By siride | 回答日時： Jul 6 ‘11 at 3:21 回答2:git branch -m old_branch_name new_branch_name このコマンドで名前を変えられるけど、この名前を変更したブランチを使う時は注意。なぜなら、これはまだ古い上流ブランチを参照してるから（もしそれが存在するのであれば）。 ローカルブランチを(例えば)new_branch_nameに名前を変更した後、変更をマスターにプッシュしたい場合は： git push origin new_branch_name：master(この変更はマスターブランチに行くけど、君のローカルブランチ名はnew_branch_nameだよ) 詳細については、「ローカルGitブランチ名の名前を変更する方法」を参照。 By Madhan Ayyasamy | 回答日時： Jan 21 ‘13 at 9:49 回答3:ブランチの名前を変更する手順は次のとおり。 1. 名前を変更する必要があるブランチに移動2. git branch -m &lt;new_name&gt;3. git push origin :&lt;old_name&gt;4. git push origin &lt;new_name&gt;:refs/heads/&lt;new_name&gt; 追記(2017/01/12)：コマンド git statusを実行して、新しく作成したブランチが、古いものじゃなくそれ自身（新しいもの）を指していることを確認すること。まだ古いブランチへの参照してる場合は、以下のように上流でのを設定を解除する必要があるよ。 git branch --unset-upstream By Milind Anantwar | 回答日時： Apr 15 ‘15 at 12:50 Source: How do I rename a local Git branch?","raw":null,"content":null,"categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://somatome.github.io/tags/git/"},{"name":"git-branch","slug":"git-branch","permalink":"https://somatome.github.io/tags/git-branch/"}]},{"title":"Python forループのインデックスへのアクセス方法 [Python]","slug":"accessing-the-index-in-python-for-loops","date":"2017-09-25T14:24:08.000Z","updated":"2017-09-25T18:43:37.422Z","comments":true,"path":"2017/09/25/accessing-the-index-in-python-for-loops/","link":"","permalink":"https://somatome.github.io2017/09/25/accessing-the-index-in-python-for-loops/","excerpt":"質問：例えばこんなリストがあったとき、このリストのインデックスにアクセスするにはどうしたらいいの？\nints = [8, 23, 45, 12, 78]\nこれをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？\n By  Joan Venge | 質問日時： Feb 6 ‘09 at 22:47 ","text":"質問：例えばこんなリストがあったとき、このリストのインデックスにアクセスするにはどうしたらいいの？ ints = [8, 23, 45, 12, 78] これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？ By Joan Venge | 質問日時： Feb 6 ‘09 at 22:47 回答1:インデックス変数とかの追加の状態変数を使用するのはあんまりPythonっぽく無いんだ(CとかPHPなどの言語だと普通だけど)。 より良い方法は組み込み関数を使うこと：enumerate()]、Python2と3の両方で利用できるよ： for idx, val in enumerate(ints): print(idx, val) 詳しく知りたければPEP 279を参照してみて。 By Mike Hordecki | 回答日時： Feb 6 ‘09 at 22:52 回答2: これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？ enumerateを使おう： for index, item in enumerate(items): print(index, item) あとインデックスはゼロから始まるので、これで0〜4になることに注意。もし、あんたがカウントをしたいっていうのなら、こんな感じに説明するかな。 慣習的じゃないやり方君が求めているのは、以下のPythonicなやり方だろ。これはほとんどの低レベル言語のプログラマーはこのアルゴリズムを使うと思う： index = 0 # Pythonのインデックスはゼロから始まるfor item in items: # Pythonのforループは \"for each\"ループ print(index, item) index += 1 それかfor-eachループを持たない言語だと： index = 0while index &amp;lt; len(items): print(index, items[index]) index += 1 それか、ときどきより一般的に(慣習的じゃない)やり方： for index in range(len(items)): print(index, items[index]) 列挙関数enumerateを使うPythonのenumerate関数は、インデックスのための計算処理を隠して、変数をカプセル化することで視覚的にごちゃごちゃしたのを減らす効果がある。こんな感じ： for index, item in enumerate(items, start=0): # default is zero print(index, item) このコードサンプルは、Pythonの慣習的な書き方と、そうじゃない書き方の違いを表すかなり典型的な例。慣用的なコードは洗練されている(でもそんな複雑じゃない)Python。この慣用コードは、言語の設計者が意図した書き方、つまり、通常このコードはあんまり読みやすくないけど、より効率的。 カウントするたとえインデックスが必要じゃなくても、iterationsのカウントが１から始まって、最後は自分のカウントする数になってほしい(時にはあった方がいい)時がある。 for count, item in enumerate(items, start=1): # default is zero print(item)print('there were &#123;0&#125; items printed'.format(count)) カウントする、っていうのは君が求めているもの以上のもの(インデックスだけじゃなくて)だとおもうけど、念のため。 結論 Pythonのインデックスはゼロから始まる 反復処理中にこれらのインデックスを反復可能コードから取得するには、列挙関数を使用します 列挙型を慣用的な方法で(タプルのアンパックと一緒に)使用すると、読みやすくメンテナンス可能なコードが作れる。 だから、こうすべき： for index, item in enumerate(items, start=0): # Pythonのインデックスはゼロから始まる print(index, item) By Aaron Hall♦ | 回答日時： Jan 21 ‘15 at 17:11 回答3:0以外の1から始めるのはかなり簡単： for index in enumerate(iterable, start=1): print index 注意インデックスはここではタプル (idx、item)だよ。ちょっとややこしいかもだけど。 By Clayton | 回答日時： May 27 ‘14 at 10:04 回答4:for i in range(len(ints)): print i, ints[i] By David Hanak | 回答日時： Feb 6 ‘09 at 22:49 Source: Accessing the index in Python ‘for’ loops","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/tags/python/"},{"name":"list","slug":"list","permalink":"https://somatome.github.io/tags/list/"},{"name":"loops","slug":"loops","permalink":"https://somatome.github.io/tags/loops/"}]},{"title":"ディレクトリの全部のファイルを一覧表示するのってどうすればいい？ [Python]","slug":"how-do-i-list-all-files-of-a-directory","date":"2017-09-25T14:23:48.000Z","updated":"2017-10-03T21:15:55.000Z","comments":true,"path":"2017/09/25/how-do-i-list-all-files-of-a-directory/","link":"","permalink":"https://somatome.github.io2017/09/25/how-do-i-list-all-files-of-a-directory/","excerpt":"質問：Pythonでディレクトリ内のすべてのファイルをリストアップして、リストに追加するのってどうやるの？\n By  duhhunjonn | 質問日時： Jul 8 ‘10 at 19:31 ","text":"質問：Pythonでディレクトリ内のすべてのファイルをリストアップして、リストに追加するのってどうやるの？ By duhhunjonn | 質問日時： Jul 8 ‘10 at 19:31 回答1:os.listdir()でディレクトリにある全てのもの（つまりファイルとディレクトリ）を取得できるよ。 ファイルのみが必要な場合は、os.path： from os import listdirfrom os.path import isfile, joinonlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))] それか、os.walk()も使えるかな。これは、訪問先のディレクトリごとに2つのリストを生成する — ファイルとディレクトリに分けてくれるんだ。トップディレクトリのみが必要な場合は、１回目のループでbreakすればいいよ。 from os import walkf = []for (dirpath, dirnames, filenames) in walk(mypath): f.extend(filenames) break 最後に、下の例のように、あるリストを別のリストに追加するには、.extend()を使うか、下の方法みたいにするか： &gt;&gt;&gt; q = [1, 2, 3]&gt;&gt;&gt; w = [4, 5, 6]&gt;&gt;&gt; q = q + w&gt;&gt;&gt; q[1, 2, 3, 4, 5, 6] 個人的には、 .extend()の方が好みだけど。 By pycruft | 回答日時： Jul 8 ‘10 at 21:01 回答2:僕ははglobモジュールを使用する方が好きかな。パターンマッチングと展開が行われるから。 import globprint(glob.glob(\"/home/adam/*.txt\")) 上は、クエリーされたファイルを含むリストを返すよ： ['/home/adam/file1.txt', '/home/adam/file2.txt', .... ] By adamk | 回答日時： Jul 9 ‘10 at 18:13 回答3:import osos.listdir(\"somedirectory\") これは、”somedirectory”内のすべてのファイルとディレクトリのリストを返す。 By sepp2k | 回答日時： Jul 8 ‘10 at 19:35 Source: How do I list all files of a directory?","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/tags/python/"},{"name":"directory","slug":"directory","permalink":"https://somatome.github.io/tags/directory/"}]},{"title":"append vs. extend [Python]","slug":"append-vs-extend","date":"2017-09-25T14:23:42.000Z","updated":"2017-09-25T15:02:13.000Z","comments":true,"path":"2017/09/25/append-vs-extend/","link":"","permalink":"https://somatome.github.io2017/09/25/append-vs-extend/","excerpt":"質問：リストメソッドの append()と extend()の違いって何？\n By  Claudiu | 質問日時： Oct 31 ‘08 at 5:55 ","text":"質問：リストメソッドの append()と extend()の違いって何？ By Claudiu | 質問日時： Oct 31 ‘08 at 5:55 回答1:append：最後にオブジェクトを追加する x = [1, 2, 3]x.append([4, 5])print (x) は以下を出力 [1、2、3、[4、5]] extend：iterableから要素を追加してリストを拡張 x = [1, 2, 3]x.extend([4, 5])print (x) は以下を出力 [1、2、3、4、5] By kender | 回答日時： Oct 31 ‘08 at 6:02 回答2:appendは要素をリストに追加する、extendは最初のリストを別のリスト(かリストじゃない別の繰り返し可能なiterable)に連結させる &gt;&gt;&gt; li = ['a', 'b', 'mpilgrim', 'z', 'example']&gt;&gt;&gt; li['a', 'b', 'mpilgrim', 'z', 'example']&gt;&gt;&gt; li.append(\"new\") &gt;&gt;&gt; li['a', 'b', 'mpilgrim', 'z', 'example', 'new']&gt;&gt;&gt; li.insert(2, \"new\") &gt;&gt;&gt; li['a', 'b', 'new', 'mpilgrim', 'z', 'example', 'new']&gt;&gt;&gt; li.extend([\"two\", \"elements\"]) &gt;&gt;&gt; li['a', 'b', 'new', 'mpilgrim', 'z', 'example', 'new', 'two', 'elements'] Dive intoPythonより By Harley Holcombe | 回答日時： Oct 31 ‘08 at 5:57 回答3:この文脈だと、文字列も繰り返し可能ってことを覚えておくといいかな &gt;&gt;&gt; a = [1, 2]&gt;&gt;&gt; a[1, 2]&gt;&gt;&gt; a.extend('hey')&gt;&gt;&gt; a[1, 2, 'h', 'e', 'y'] By tatsujin | 回答日時： Nov 4 ‘08 at 15:19 Source: append vs. extend","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/tags/python/"},{"name":"list","slug":"list","permalink":"https://somatome.github.io/tags/list/"},{"name":"data-structures","slug":"data-structures","permalink":"https://somatome.github.io/tags/data-structures/"},{"name":"append","slug":"append","permalink":"https://somatome.github.io/tags/append/"},{"name":"extend","slug":"extend","permalink":"https://somatome.github.io/tags/extend/"}]},{"title":"リストが空であるかどうかをチェックする最良の方法って？ [Python]","slug":"best-way-to-check-if-a-list-is-empty","date":"2017-09-25T14:23:37.000Z","updated":"2017-09-26T03:16:50.544Z","comments":true,"path":"2017/09/25/best-way-to-check-if-a-list-is-empty/","link":"","permalink":"https://somatome.github.io2017/09/25/best-way-to-check-if-a-list-is-empty/","excerpt":"質問：例えばこんなのがあった時、a = []\nどうやってこの変数がカラだってチェックすればいいの？\n By  Ray Vega | 質問日時： Sep 10 ‘08 at 6:20 ","text":"質問：例えばこんなのがあった時、a = [] どうやってこの変数がカラだってチェックすればいいの？ By Ray Vega | 質問日時： Sep 10 ‘08 at 6:20 回答1:if not a: print(\"リストは空\") 空リストの暗黙的なブーリアン性を使うのってとってもPythonic。 By Patrick | 回答日時： Sep 10 ‘08 at 6:28 回答2:それをするためのPythonicな方法は、PEP 8スタイルガイドにあるよ： シーケンス(文字列、リスト、タプル)の場合、空のシーケンスはfalseだってことを使う： &lt;b&gt;Yes:&lt;/b&gt; if not seq: if seq:&lt;b&gt;No:&lt;/b&gt; if len(seq): if not len(seq): By Harley Holcombe | 回答日時： Sep 10 ‘08 at 10:33 回答3:明示的なやり方が好きかな： if len(li) == 0: print('the list is empty') この方法だと、liがシーケンス(リスト)で、サイズを調べたいことが100％明確だし。。ここでの問題は if not li:...は、liはブール変数かも、っていう間違った印象を与えかねないこと。 By Jabba | 回答日時： Sep 5 ‘11 at 0:30 Source: Best way to check if a list is empty","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/tags/python/"},{"name":"list","slug":"list","permalink":"https://somatome.github.io/tags/list/"}]},{"title":"Pythonで外部コマンドを呼び出す [Python]","slug":"calling-an-external-command-in-python","date":"2017-09-25T14:23:15.000Z","updated":"2017-09-25T15:41:11.000Z","comments":true,"path":"2017/09/25/calling-an-external-command-in-python/","link":"","permalink":"https://somatome.github.io2017/09/25/calling-an-external-command-in-python/","excerpt":"質問：Pythonスクリプトから外部コマンド(UNIXシェルとかWindowsのコマンドプロンプトで入力したみたいに)ってどうやって呼び出せるの？\n By  freshWoWer | 質問日時： Sep 18 ‘08 at 1:35 ","text":"質問：Pythonスクリプトから外部コマンド(UNIXシェルとかWindowsのコマンドプロンプトで入力したみたいに)ってどうやって呼び出せるの？ By freshWoWer | 質問日時： Sep 18 ‘08 at 1:35 回答1:標準ライブラリのsubprocess モジュールを参照： from subprocess import callcall([\"ls\", \"-l\"]) subprocessはsystemと比較して、より柔軟性があることが利点。（stdout、stderr、 “実際の”ステータスコード、より良いエラー処理、等…)。 公式ドキュメントもsubprocessモジュールを代替のos.system()として推奨してる。 subprocessモジュールは、新しいプロセスを産み出して、その結果を処理するため強力な機能を提供する。このモジュールを使用することは、この関数os.system()]を使うのより望ましい。 subprocessドキュメントの「古い関数をsubprocessモジュールで置き換えるの部分はいろいろ役に立つレシピがあるかも。 subprocessモジュールの公式文書は： Python 2 - subprocess Python 3 - subprocess By David Cournapeau | 回答日時： Sep 18 ‘08 at 1:39 回答2:僕なら普通こう書く、 import subprocessp = subprocess.Popen('ls', shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)for line in p.stdout.readlines(): print line,retval = p.wait() パイプ内の stdoutデータは自由に使える。実際には、それらのパラメータ(stdout =、 stderr =)は省略できるけど。その場合はos.system()のように振る舞う。 By EmmEff | 回答日時： Sep 18 ‘08 at 18:20 Source: Calling an external command in Python","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/tags/python/"},{"name":"shell","slug":"shell","permalink":"https://somatome.github.io/tags/shell/"},{"name":"command","slug":"command","permalink":"https://somatome.github.io/tags/command/"},{"name":"subprocess","slug":"subprocess","permalink":"https://somatome.github.io/tags/subprocess/"},{"name":"external","slug":"external","permalink":"https://somatome.github.io/tags/external/"}]},{"title":"__name__ == \"__main__\"って何やってるの？","slug":"what-does-if-name-main-do","date":"2017-09-25T14:23:09.000Z","updated":"2017-10-02T01:13:57.967Z","comments":true,"path":"2017/09/25/what-does-if-name-main-do/","link":"","permalink":"https://somatome.github.io2017/09/25/what-does-if-name-main-do/","excerpt":"質問：if __name__ == &quot;__main__&quot;: ってこの場合で何やってるの？# Threading exampleimport time, threaddef myfunction(string, sleeptime, lock, *args):    while 1:        lock.acquire()        time.sleep(sleeptime)        lock.release()        time.sleep(sleeptime)if __name__ == \"__main__\":    lock = thread.allocate_lock()    thread.start_new_thread(myfunction, (\"Thread #: 1\", 2, lock))    thread.start_new_thread(myfunction, (\"Thread #: 2\", 2, lock))\n By  Devoted | 質問日時： Jan 7 ‘09 at 4:11 ","text":"質問：if __name__ == &quot;__main__&quot;: ってこの場合で何やってるの？# Threading exampleimport time, threaddef myfunction(string, sleeptime, lock, *args): while 1: lock.acquire() time.sleep(sleeptime) lock.release() time.sleep(sleeptime)if __name__ == \"__main__\": lock = thread.allocate_lock() thread.start_new_thread(myfunction, (\"Thread #: 1\", 2, lock)) thread.start_new_thread(myfunction, (\"Thread #: 2\", 2, lock)) By Devoted | 質問日時： Jan 7 ‘09 at 4:11 回答1:Pythonインタプリタがソースファイルを読み込むと、ファイル内のすべてのコードが実行される。 コードを実行する前に、いくつかの特殊変数を定義するんだ。たとえば、Pythonインタプリタがそのモジュール(＝ソースファイル)をメインプログラムとして走らせているとすると、特殊な __name__変数を値&quot; __main __ &quot;として設定する。このファイルが別のモジュールからインポートされている場合は、 __name__はモジュールの名前に設定されるってわけなんだ。 君のスクリプトの場合、それがメインとして実行されていると仮定しよう。で、例えば、コマンドラインでこう呼び出したとする： python threading_example.py 特殊変数を設定した後、import文を読み込み、それらのモジュールをロードする。次に、 defブロックを評価し、関数オブジェクトの作成とそれを指しているmyfunctionという変数の作成を行う。その後、if文を読み込み、__name__は&quot;__main __&quot;と等しいことを知り、その中のブロックを実行する。 One reason for doing this is that sometimes you write a module (a .py file) where it can be executed directly. Alternatively, it can also be imported and used in another module. By doing the main check, you can have that code only execute when you want to run the module as a program and not have it execute when someone just wants to import your module and call your functions themselves. これを行う1つの理由は、直接実行することができるモジュール(.pyファイル)を時々書く必要があるから、って言う理由。それ以外の時はインポートして、他のモジュールとして使うこともできる。メイン関数のチェックを行うことで、そのモジュールをプログラムとして実行したい時にのみ実行されるコードを持つことができるし、また、誰かがあなたのモジュールをインポートしてあなたの関数を呼び出そうとしているときは実行されない。 詳しくはこのページを参照してみて。 By Mr Fooz | 回答日時： Jan 7 ‘09 at 4:26 Source: What does if name == “main”: do?","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/tags/python/"},{"name":"module","slug":"module","permalink":"https://somatome.github.io/tags/module/"},{"name":"namespaces","slug":"namespaces","permalink":"https://somatome.github.io/tags/namespaces/"},{"name":"main","slug":"main","permalink":"https://somatome.github.io/tags/main/"},{"name":"idioms","slug":"idioms","permalink":"https://somatome.github.io/tags/idioms/"}]},{"title":"jQueryで要素が非表示になっているかどうかを確認するのってどうすればいい？？","slug":"how-do-i-check-if-an-element-is-hidden-in-jquery","date":"2017-09-25T05:10:14.000Z","updated":"2017-09-25T05:30:11.154Z","comments":true,"path":"2017/09/25/how-do-i-check-if-an-element-is-hidden-in-jquery/","link":"","permalink":"https://somatome.github.io2017/09/25/how-do-i-check-if-an-element-is-hidden-in-jquery/","excerpt":"質問：.hide()、 .show()、 .toggle()関数を使えば要素の可視性を切り替えることができるけど、要素が表示されているか隠れているかはどうやってテストすればいいの？\n By  Philip Morton | 質問日時： Oct 7 ‘08 at 13:03 ","text":"質問：.hide()、 .show()、 .toggle()関数を使えば要素の可視性を切り替えることができるけど、要素が表示されているか隠れているかはどうやってテストすればいいの？ By Philip Morton | 質問日時： Oct 7 ‘08 at 13:03 回答1:１つの要素についての質問だから、このコードがいいかな $(element).is(\":visible\"); [下の人の提案]と同じだけど、１つの要素についてのもの;そしてこれはjQueryのFAQで推奨されてるアルゴリズムとおんなじ By Tsvetomir Tsonev | 回答日時： Oct 7 ‘08 at 13:30 回答2:hiddenセレクタが使えるよ： //非表示になってるのすべての要素とマッチする$('element:hidden') それか、visibleセレクタ： // Matches all elements that are visible//表示されているすべての要素とマッチ。$('element:visible') By twernt | 回答日時： Oct 7 ‘08 at 13:16 回答3:if ( $(element).css('display') == 'none' )&#123; // element is hidden // 要素は隠されてる&#125; 関数はvisibility属性では機能しないけど。 By Mote | 回答日時： Oct 7 ‘08 at 13:09 回答4:どの答えも、僕が質問だと思ってた（そして僕が探していたもの）のと違う答えしてる、つまり_「visibility: hiddenを持つアイテムをどうやって扱うの？っていう質問。:visibleも:hiddenもここでは使えない、というのはどちらもドキュメントごとの表示を探してるから。僕がわかる限り、CSSの可視性を処理するセレクタってないよね。僕の解決方法を書いてみる(標準のjQueryセレクタでは、もっといい書き方があるかもだけど)。 $(\".item\").each(function() &#123; if ($(this).css(\"visibility\") == \"hidden\") &#123; //非可視状態を処理する &#125; else &#123; //可視状態を処理する &#125;&#125;); By aaronLile | 回答日時： Mar 24 ‘11 at 18:44 回答5: どうやってトグルする要素の状態調べるの？より 要素が折りたたまれているかどうかは、:visibleと:hiddenセレクタ: var isVisible = $('#myDiv').is(':visible');var isHidden = $('#myDiv').is(':hidden'); 可視状態に基づいて要素に何かするのであれば、セレクタ式に :visibleや:hiddenを含める。例えば： $('#myDiv:visible').animate(&#123;left: '+=200px'&#125;, 'slow'); By user574889 | 回答日時： Jan 13 ‘11 at 21:13 Source: How do I check if an element is hidden in jQuery?","raw":null,"content":null,"categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/tags/javascript/"},{"name":"jquery","slug":"jquery","permalink":"https://somatome.github.io/tags/jquery/"},{"name":"dom","slug":"dom","permalink":"https://somatome.github.io/tags/dom/"},{"name":"visibility","slug":"visibility","permalink":"https://somatome.github.io/tags/visibility/"}]},{"title":"JavaScriptである文字列に別な文字列（substring）が含まれているかどうかをチェックする方法って？","slug":"how-to-check-whether-a-string-contains-a-substring-in-javascript","date":"2017-09-24T23:46:44.000Z","updated":"2017-09-25T00:02:24.529Z","comments":true,"path":"2017/09/25/how-to-check-whether-a-string-contains-a-substring-in-javascript/","link":"","permalink":"https://somatome.github.io2017/09/25/how-to-check-whether-a-string-contains-a-substring-in-javascript/","excerpt":"質問：String.contains()メソッドだと思ったんだけど、ちょっと違うみたい。これをチェックするいい方法ってあるかな？","text":"質問：String.contains()メソッドだと思ったんだけど、ちょっと違うみたい。これをチェックするいい方法ってあるかな？ 回答1:考えられる方法としてはこんな感じ： indexOfvar string = \"foo\", substring = \"oo\";string.indexOf(substring) !== -1; String.prototype.indexOfは、ある文字列の中にある他の文字列の位置を返す。見つからなければ -1を返す。 (ES6) includes - この回答、またはこの回答を参照 var string = \"foo\", substring = \"oo\";string.includes(substring); search - この回答参照 var string = \"foo\", expr = /oo/;string.search(expr); lodash includes - この回答参照 var string = \"foo\", substring = \"oo\";_.includes(string, substring); RegExp - この回答参照 var string = \"foo\", expr = /oo/; // no quotes hereexpr.test(string); Match - この回答参照 var string = \"foo\", expr = /oo/;string.match(expr); パフォーマンステスト(http://jsben.ch/#/RVYk7)の結果によればでは、indexOfが最速みたいなので、スピードが重要なポイントになる場合は、最良の選択かも。 By Fabien Ménager | 回答日時： Nov 24 ‘09 at 13:05 回答2:こうやればStringに containsメソッドを簡単に追加できるよ： function(it){このthis.indexOfを返します！ }; }String.prototype.contains = function(it) &#123; return this.indexOf(it) != -1; &#125;; _Note：これを使うのはいろいろ議論の別れるところだけど、自分自身の判断で使用して。 これ以外だと： if (typeof String.prototype.contains === 'undefined') &#123; String.prototype.contains = function(it) &#123; return this.indexOf(it) != -1; &#125;; &#125; By Avi Flax | 回答日時： Dec 30 ‘09 at 4:23 回答3:JavaScriptが大文字と小文字を区別するのに気をつけて。きみのコードだと、 indexof() でも実際には indexOf() これを修正し、うまくいくか確認してみて： if (test.indexOf(\"title\") !=-1) &#123; alert(elm); foundLinks++;&#125; By Victor | 回答日時： Nov 24 ‘09 at 14:17 Source: How to check whether a string contains a substring in JavaScript?","raw":null,"content":null,"categories":[],"tags":[{"name":"string","slug":"string","permalink":"https://somatome.github.io/tags/string/"},{"name":"substring","slug":"substring","permalink":"https://somatome.github.io/tags/substring/"},{"name":"contains","slug":"contains","permalink":"https://somatome.github.io/tags/contains/"},{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/tags/javascript/"},{"name":"string-matching","slug":"string-matching","permalink":"https://somatome.github.io/tags/string-matching/"}]},{"title":"ローカルとリモートの両方でGitブランチを削除するには？","slug":"how-do-i-delete-a-git-branch-both-locally-and-remotely","date":"2017-09-24T23:05:54.000Z","updated":"2017-09-24T23:33:09.980Z","comments":true,"path":"2017/09/25/how-do-i-delete-a-git-branch-both-locally-and-remotely/","link":"","permalink":"https://somatome.github.io2017/09/25/how-do-i-delete-a-git-branch-both-locally-and-remotely/","excerpt":"質問：ローカルと、Github上のフォークした自分のリモートプロジェクトのブランチを削除したいんだけど。\nリモートのブランチを削除するためにこれまで試みた方法（失敗した）：\n$ git branch -d remotes/origin/bugfixerror: branch 'remotes/origin/bugfix' not found.$ git branch -d origin/bugfixerror: branch 'origin/bugfix' not found.$ git branch -rd origin/bugfixDeleted remote branch origin/bugfix (was 2a14ef7).$ git pushEverything up-to-date$ git pullFrom github.com:gituser/gitproject* [new branch] bugfix -&amp;gt; origin/bugfixAlready up-to-date.\nremotes/origin/bugfixブランチをローカルとリモート両方で削除するにはほか何をしたらいいの？\n By  Matthew Rankin | 質問日時： Jan 5 ‘10 at 1:12 ","text":"質問：ローカルと、Github上のフォークした自分のリモートプロジェクトのブランチを削除したいんだけど。 リモートのブランチを削除するためにこれまで試みた方法（失敗した）： $ git branch -d remotes/origin/bugfixerror: branch 'remotes/origin/bugfix' not found.$ git branch -d origin/bugfixerror: branch 'origin/bugfix' not found.$ git branch -rd origin/bugfixDeleted remote branch origin/bugfix (was 2a14ef7).$ git pushEverything up-to-date$ git pullFrom github.com:gituser/gitproject* [new branch] bugfix -&amp;gt; origin/bugfixAlready up-to-date. remotes/origin/bugfixブランチをローカルとリモート両方で削除するにはほか何をしたらいいの？ By Matthew Rankin | 質問日時： Jan 5 ‘10 at 1:12 回答1:要旨$ git push -d origin &lt;ブランチ名&gt;$ gitブランチ-d &lt;ブランチ名&gt; ローカルブランチを削除localブランチを削除するには、次のいずれかを使う。 $ git branch -d ブランチ名$ git branch -D ブランチ名 注意： -dオプションは、--deleteのエイリアス。このオプションは、ブランチが既に上流ブランチに完全にマージされている場合にのみ削除するよ。あと--Dを使うこともでるけど、これは--delete --forceのエイリアスで、「merged statusに関係なく」ブランチを削除するよ。 [出典： man git-branch] リモートブランチを削除する[2017年9月8日更新]Git v1.7.0では、 remote ブランチを削除するには $ git push origin --delete &lt;ブランチ名&gt; こっちの方が覚えやすいかも $ git push origin :&lt;ブランチ名&gt; これはGit v1.5.0以降で、「リモートブランチやタグを削除するために」追加されたやつ。 Git v2.8.0以降では、git pushの際、--deleteのエイリアスとして--dオプションつけて使うこともできるよ。 だから、インストールしたGitのバージョンによって、より簡単なシンタックスか難しいシンタックスになるかは変わってくる。 By Matthew Rankin | 回答日時： Jan 5 ‘10 at 1:13 回答2:上のの答えはremoteブランチを削除するのにベストだと思うし、この説明してくれてありがとうって思うけど、この2つのコマンドを簡単な区別するをするために書くと、 ローカルブランチ を削除するには： git branch -d {th​​e_local_branch}(マージされた状態をチェックせずに強制的に削除する場合は-Dを使用） リモートブランチ をサーバーから削除するには： git push origin --delete {the_remote_branch} 参考：https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote By Eric Brotto | 回答日時： Jun 12 ‘12 at 14:51 回答3:リモートブランチを削除するには、次のコマンドを使用してもいいかも。 git push --delete origin serverfix 以下でも同じ git push origin：serverfix こっちのほうが覚えやすいかな？ By pagetribe | 回答日時： Oct 27 ‘11 at 22:22 回答4:ブランチを削除する場合は、最初に削除するブランチ以外のブランチをチェックアウトする git checkout &lt;削除する以外のブランチ&gt; ローカルブランチの削除： git branch -D &lt;削除するブランチ&gt; リモートブランチの削除： git push origin --delete &lt;削除するブランチ&gt; By Praveen Hiremath | 回答日時： Oct 7 ‘14 at 13:52 Source: How do I delete a Git branch both locally and remotely?","raw":null,"content":null,"categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://somatome.github.io/tags/git/"},{"name":"git-branch","slug":"git-branch","permalink":"https://somatome.github.io/tags/git-branch/"},{"name":"git-remote","slug":"git-remote","permalink":"https://somatome.github.io/tags/git-remote/"}]},{"title":"Gitの最後のコミットを元に戻す方法ってどうやるの？","slug":"how-to-undo-the-last-commits-in-git","date":"2017-09-24T22:42:48.000Z","updated":"2017-09-24T23:12:07.371Z","comments":true,"path":"2017/09/24/how-to-undo-the-last-commits-in-git/","link":"","permalink":"https://somatome.github.io2017/09/24/how-to-undo-the-last-commits-in-git/","excerpt":"質問：間違ったファイルをGitにコミットしたんだけど、まだサーバーへはプッシュしていないんだ。\nこのコミットを元に戻すにはどうすればいいですか？","text":"質問：間違ったファイルをGitにコミットしたんだけど、まだサーバーへはプッシュしていないんだ。 このコミットを元に戻すにはどうすればいいですか？ 回答1:コミットとやり直しを元に戻す$ git commit -m \"クソ間違えた内容\" (1)$ git reset HEAD~ (2)&lt;&lt;必要に応じてファイルを編集する&gt;&gt; (3)$ git add ... (4)$ git commit -c ORIG_HEAD (5) これを元に戻したい これによって、作業ツリー(ディスク上のファイルの状態)は変更されませんが、コミットが取り消され、コミットされていない変更が残される(git statusでは” Changes not staged for commit”になってるのでコミットする前に再度追加する必要あり)。以前のコミットにもっと多くの変更をaddしたい場合や、コミットメッセージ（注）を変更したい場合は git reset HEAD〜のように git reset --soft HEAD〜を使うことができる。 作業ツリーファイルを修正。 新しいコミットに含めるものを git addする。 変更をコミットし、古いコミット・メッセージを再使用する。 reset は古いヘッドを .git/ORIG_HEAD にコピーする。 -c ORIG_HEAD で commit&#39; を実行するとエディタが開く。エディタは最初は古いコミットのログメッセージを含み、編集することができる。メッセージを編集する必要がない場合は、-C` オプションが使えるよ。 注： commitメッセージで間違えただけなら、以前のコミットにリセットする必要はないことに注意。この場合、 (それまでの変更を戻すために)git resetすればいい。そしてgit commit --amendすると、最後のコミットメッセージを含んだデフォルトのエディタが開くはず。 ただし、新しい変更をインデックスに追加した場合は、commit --amendは前のコミットにそれらを追加するよ。 回答2:適宜ファイルを追加/削除する： git rm classdirgit add sourcedir それからコミットを修正： git commit --amend 以前の誤ったコミットは、新しいインデックス状態を反映するために編集されるよ。言い換えれば、それは最初から間違いを犯さなかったようなかんじに。 まだプッシュしていない場合にのみこれを行うべきであることに注意。プッシュしちゃったなら、普通に修正をコミットする必要がある。 By bdonlan | 回答日時： May 29 ‘09 at 18:16 Source: How to undo the last commits in Git?","raw":null,"content":null,"categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://somatome.github.io/tags/git/"},{"name":"git-reset","slug":"git-reset","permalink":"https://somatome.github.io/tags/git-reset/"},{"name":"git-revert","slug":"git-revert","permalink":"https://somatome.github.io/tags/git-revert/"},{"name":"git-rebase","slug":"git-rebase","permalink":"https://somatome.github.io/tags/git-rebase/"},{"name":"git-commit","slug":"git-commit","permalink":"https://somatome.github.io/tags/git-commit/"}]},{"title":"他のウェブページにリダイレクトする方法ってどうやるの？","slug":"how-to-redirect-to-another-webpage","date":"2017-09-24T22:18:43.000Z","updated":"2017-09-24T22:37:46.547Z","comments":true,"path":"2017/09/24/how-to-redirect-to-another-webpage/","link":"","permalink":"https://somatome.github.io2017/09/24/how-to-redirect-to-another-webpage/","excerpt":"質問：jQueryか純粋なJavaScriptを使って、あるページから別のページにユーザーをリダイレクトする方法ってどうやるの？\n By  venkatachalam | 質問日時： Feb 2 ‘09 at 12:54 ","text":"質問：jQueryか純粋なJavaScriptを使って、あるページから別のページにユーザーをリダイレクトする方法ってどうやるの？ By venkatachalam | 質問日時： Feb 2 ‘09 at 12:54 回答1:汝、リダイレクトするためだけにjQueryを使うべからずjQueryは必要ないよ。 window.location.replace(...) は、HTTPリダイレクトをよくシミュレートできるから。 window.location.replace(...)は window.location.hrefを使うよりも優れてる、というのはreplace()は元のページをセッション履歴に残さないから、ユーザーが終わりのないバック・ボタンの失敗に悩まされることはないよ。 もしリンクをクリックするのをシミュレートしたい場合は、 location.href を使うHTTPリダイレクトをシミュレートする場合は、 location.replaceを使う 例えば： // HTTPリダイレクトと同様の動作window.location.replace(\"http://stackoverflow.com\");//リンクをクリックすると同様の動作window.location.href = \"http://stackoverflow.com\"; By Ryan McGeary | 回答日時： Feb 3 ‘09 at 4:24 回答2: 警告：この回答は単に解決策の１つとして提供されているに過だけ。これはjQueryが必要なので、明らかに最善の解決策っていうわけじゃない。代わりに、純粋なJavaScriptでやったほうがいいと思う。 $(location).attr('href', 'http://stackoverflow.com') By Boris Guéry | 回答日時： Oct 28 ‘09 at 16:35 回答3: ページをリダイレクトするための標準的な “素の” JavaScriptでの方法： `window.location.href = ‘newPage.html’; リダイレクト時にHTTPREFERERを失っている_場合は、以下を参考に このセクションは HTTP_REFERERを安全なものの1つとして使用する人のためのもの(あんまりいい保護手段じゃないけど)。Internet Explorer 8またはそれ以前のを使用している場合、JavaScriptのページリダイレクションがどうあっても、これらの変数が失われる(location.hrefなど)。 以下では、HTTP_REFERERを失わないようにIE8より以前での実装をやってみる。それ以外の場合は、ほとんどの場合window.location.hrefでいけるはず。 HTTP_REFERER(URLの貼り付け、セッションなど)に対するテストはリクエストがちゃんとしてるか判断するのに手助けに成るはず。(注：これらのリファラを回避する/偽装する方法ももちろん存在する) 簡単なクロスブラウザテストソリューション(Internet Explorer 9以降および他のすべてのブラウザではwindow.location.hrefを) 使用法： redirect(&#39;anotherpage.aspx&#39;); function redirect (url) &#123; var ua = navigator.userAgent.toLowerCase(), isIE = ua.indexOf('msie') !== -1, version = parseInt(ua.substr(4, 2), 10); // Internet Explorer 8以下 if (isIE &amp;amp;&amp;amp; version &amp;lt; 9) &#123; var link = document.createElement('a'); link.href = url; document.body.appendChild(link); link.click(); &#125; //他のすべてのブラウザは標準のwindow.location.hrefを使用可(Internet Explorer 8以下のようにHTTP_REFERERを失うことはない) else &#123; window.location.href = url; &#125;&#125; By Mark Pieszak | 回答日時： Jul 27 ‘12 at 14:41 回答4:これ使いな： // window.locationwindow.location.replace('http://www.example.com')window.location.assign('http://www.example.com')window.location.href = 'http://www.example.com'document.location.href = '/path'// window.historywindow.history.back()window.history.go(-1)// window.navigate; ONLY for old versions of Internet Explorerwindow.navigate('top.jsp')// たぶんあんまりよくないself.location = 'http://www.example.com';top.location = 'http://www.example.com';// jQuery$(location).attr('href','http://www.example.com')$(window).attr('location','http://www.example.com')$(location).prop('href', 'http://www.example.com') By Govind Singh | 回答日時： Jan 28 ‘14 at 4:28 回答5:これならどのブラウザでも動作するよ： window.location.href = 'your_url'; By Fred | 回答日時： Oct 22 ‘10 at 23:45 Source: How to redirect to another webpage?","raw":null,"content":null,"categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/tags/javascript/"},{"name":"jquery","slug":"jquery","permalink":"https://somatome.github.io/tags/jquery/"},{"name":"redirect","slug":"redirect","permalink":"https://somatome.github.io/tags/redirect/"}]}]}