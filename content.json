{"meta":{"title":"Stack Overflow まとめ","subtitle":null,"description":null,"author":"John Doe","url":"https://somatome.github.io/somatome"},"pages":[],"posts":[{"title":"Python forループのインデックスへのアクセス方法 [Python]","slug":"accessing-the-index-in-python-for-loops","date":"2017-09-25T14:24:08.000Z","updated":"2017-09-25T18:43:37.422Z","comments":true,"path":"2017/09/25/accessing-the-index-in-python-for-loops/","link":"","permalink":"https://somatome.github.io/somatome/2017/09/25/accessing-the-index-in-python-for-loops/","excerpt":"質問：例えばこんなリストがあったとき、このリストのインデックスにアクセスするにはどうしたらいいの？\n1ints = [8, 23, 45, 12, 78]\nこれをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？\n By  Joan Venge | 質問日時： Feb 6 ‘09 at 22:47 ","text":"質問：例えばこんなリストがあったとき、このリストのインデックスにアクセスするにはどうしたらいいの？ 1ints = [8, 23, 45, 12, 78] これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？ By Joan Venge | 質問日時： Feb 6 ‘09 at 22:47 回答1:インデックス変数とかの追加の状態変数を使用するのはあんまりPythonっぽく無いんだ(CとかPHPなどの言語だと普通だけど)。 より良い方法は組み込み関数を使うこと：enumerate()]、Python2と3の両方で利用できるよ： 12for idx, val in enumerate(ints): print(idx, val) 詳しく知りたければPEP 279を参照してみて。 By Mike Hordecki | 回答日時： Feb 6 ‘09 at 22:52 回答2: これをforループで使う時、どうやってこのループインデックス（この場合１から５）にアクセスしたらいいの？ enumerateを使おう： 12for index, item in enumerate(items): print(index, item) あとインデックスはゼロから始まるので、これで0〜4になることに注意。もし、あんたがカウントをしたいっていうのなら、こんな感じに説明するかな。 慣習的じゃないやり方君が求めているのは、以下のPythonicなやり方だろ。これはほとんどの低レベル言語のプログラマーはこのアルゴリズムを使うと思う： 1234index = 0 # Pythonのインデックスはゼロから始まるfor item in items: # Pythonのforループは \"for each\"ループ print(index, item) index += 1 それかfor-eachループを持たない言語だと： 1234index = 0while index &amp;lt; len(items): print(index, items[index]) index += 1 それか、ときどきより一般的に(慣習的じゃない)やり方： 12for index in range(len(items)): print(index, items[index]) 列挙関数enumerateを使うPythonのenumerate関数は、インデックスのための計算処理を隠して、変数をカプセル化することで視覚的にごちゃごちゃしたのを減らす効果がある。こんな感じ： 12for index, item in enumerate(items, start=0): # default is zero print(index, item) このコードサンプルは、Pythonの慣習的な書き方と、そうじゃない書き方の違いを表すかなり典型的な例。慣用的なコードは洗練されている(でもそんな複雑じゃない)Python。この慣用コードは、言語の設計者が意図した書き方、つまり、通常このコードはあんまり読みやすくないけど、より効率的。 カウントするたとえインデックスが必要じゃなくても、iterationsのカウントが１から始まって、最後は自分のカウントする数になってほしい(時にはあった方がいい)時がある。 1234for count, item in enumerate(items, start=1): # default is zero print(item)print('there were &#123;0&#125; items printed'.format(count)) カウントする、っていうのは君が求めているもの以上のもの(インデックスだけじゃなくて)だとおもうけど、念のため。 結論 Pythonのインデックスはゼロから始まる 反復処理中にこれらのインデックスを反復可能コードから取得するには、列挙関数を使用します 列挙型を慣用的な方法で(タプルのアンパックと一緒に)使用すると、読みやすくメンテナンス可能なコードが作れる。 だから、こうすべき： 12for index, item in enumerate(items, start=0): # Pythonのインデックスはゼロから始まる print(index, item) By Aaron Hall♦ | 回答日時： Jan 21 ‘15 at 17:11 回答3:0以外の1から始めるのはかなり簡単： 12for index in enumerate(iterable, start=1): print index 注意インデックスはここではタプル (idx、item)だよ。ちょっとややこしいかもだけど。 By Clayton | 回答日時： May 27 ‘14 at 10:04 回答4:12for i in range(len(ints)): print i, ints[i] By David Hanak | 回答日時： Feb 6 ‘09 at 22:49 Source: Accessing the index in Python ‘for’ loops","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/somatome/tags/python/"},{"name":"list","slug":"list","permalink":"https://somatome.github.io/somatome/tags/list/"},{"name":"loops","slug":"loops","permalink":"https://somatome.github.io/somatome/tags/loops/"}]},{"title":"append vs. extend [Python]","slug":"append-vs-extend","date":"2017-09-25T14:23:42.000Z","updated":"2017-09-25T15:02:13.000Z","comments":true,"path":"2017/09/25/append-vs-extend/","link":"","permalink":"https://somatome.github.io/somatome/2017/09/25/append-vs-extend/","excerpt":"質問：リストメソッドの append()と extend()の違いって何？\n By  Claudiu | 質問日時： Oct 31 ‘08 at 5:55 ","text":"質問：リストメソッドの append()と extend()の違いって何？ By Claudiu | 質問日時： Oct 31 ‘08 at 5:55 回答1:append：最後にオブジェクトを追加する 123x = [1, 2, 3]x.append([4, 5])print (x) は以下を出力 [1、2、3、[4、5]] extend：iterableから要素を追加してリストを拡張 123x = [1, 2, 3]x.extend([4, 5])print (x) は以下を出力 [1、2、3、4、5] By kender | 回答日時： Oct 31 ‘08 at 6:02 回答2:appendは要素をリストに追加する、extendは最初のリストを別のリスト(かリストじゃない別の繰り返し可能なiterable)に連結させる 123456789101112131415&gt;&gt;&gt; li = ['a', 'b', 'mpilgrim', 'z', 'example']&gt;&gt;&gt; li['a', 'b', 'mpilgrim', 'z', 'example']&gt;&gt;&gt; li.append(\"new\") &gt;&gt;&gt; li['a', 'b', 'mpilgrim', 'z', 'example', 'new']&gt;&gt;&gt; li.insert(2, \"new\") &gt;&gt;&gt; li['a', 'b', 'new', 'mpilgrim', 'z', 'example', 'new']&gt;&gt;&gt; li.extend([\"two\", \"elements\"]) &gt;&gt;&gt; li['a', 'b', 'new', 'mpilgrim', 'z', 'example', 'new', 'two', 'elements'] Dive intoPythonより By Harley Holcombe | 回答日時： Oct 31 ‘08 at 5:57 回答3:この文脈だと、文字列も繰り返し可能ってことを覚えておくといいかな 123456&gt;&gt;&gt; a = [1, 2]&gt;&gt;&gt; a[1, 2]&gt;&gt;&gt; a.extend('hey')&gt;&gt;&gt; a[1, 2, 'h', 'e', 'y'] By tatsujin | 回答日時： Nov 4 ‘08 at 15:19 Source: append vs. extend","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/somatome/tags/python/"},{"name":"list","slug":"list","permalink":"https://somatome.github.io/somatome/tags/list/"},{"name":"data-structures","slug":"data-structures","permalink":"https://somatome.github.io/somatome/tags/data-structures/"},{"name":"append","slug":"append","permalink":"https://somatome.github.io/somatome/tags/append/"},{"name":"extend","slug":"extend","permalink":"https://somatome.github.io/somatome/tags/extend/"}]},{"title":"リストが空であるかどうかをチェックする最良の方法って？ [Python]","slug":"best-way-to-check-if-a-list-is-empty","date":"2017-09-25T14:23:37.000Z","updated":"2017-09-25T15:10:40.000Z","comments":true,"path":"2017/09/25/best-way-to-check-if-a-list-is-empty/","link":"","permalink":"https://somatome.github.io/somatome/2017/09/25/best-way-to-check-if-a-list-is-empty/","excerpt":"質問：12345例えばこんなのがあった時、a = []どうやってこの変数がカラだってチェックすればいいの？\n By  Ray Vega | 質問日時： Sep 10 ‘08 at 6:20 ","text":"質問：12345例えばこんなのがあった時、a = []どうやってこの変数がカラだってチェックすればいいの？ By Ray Vega | 質問日時： Sep 10 ‘08 at 6:20 回答1:12if not a: print(\"リストは空\") 空リストの暗黙的なブーリアン性を使うのってとってもPythonic。 By Patrick | 回答日時： Sep 10 ‘08 at 6:28 回答2:それをするためのPythonicな方法は、PEP 8スタイルガイドにあるよ： シーケンス(文字列、リスト、タプル)の場合、空のシーケンスはfalseだってことを使う： 12345&lt;b&gt;Yes:&lt;/b&gt; if not seq: if seq:&lt;b&gt;No:&lt;/b&gt; if len(seq): if not len(seq): By Harley Holcombe | 回答日時： Sep 10 ‘08 at 10:33 回答3:明示的なやり方が好きかな： 12if len(li) == 0: print('the list is empty') この方法だと、liがシーケンス(リスト)で、サイズを調べたいことが100％明確だし。。ここでの問題は if not li:...は、liはブール変数かも、っていう間違った印象を与えかねないこと。 By Jabba | 回答日時： Sep 5 ‘11 at 0:30 Source: Best way to check if a list is empty","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/somatome/tags/python/"},{"name":"list","slug":"list","permalink":"https://somatome.github.io/somatome/tags/list/"}]},{"title":"Pythonで外部コマンドを呼び出す [Python]","slug":"calling-an-external-command-in-python","date":"2017-09-25T14:23:15.000Z","updated":"2017-09-25T15:41:11.000Z","comments":true,"path":"2017/09/25/calling-an-external-command-in-python/","link":"","permalink":"https://somatome.github.io/somatome/2017/09/25/calling-an-external-command-in-python/","excerpt":"質問：Pythonスクリプトから外部コマンド(UNIXシェルとかWindowsのコマンドプロンプトで入力したみたいに)ってどうやって呼び出せるの？\n By  freshWoWer | 質問日時： Sep 18 ‘08 at 1:35 ","text":"質問：Pythonスクリプトから外部コマンド(UNIXシェルとかWindowsのコマンドプロンプトで入力したみたいに)ってどうやって呼び出せるの？ By freshWoWer | 質問日時： Sep 18 ‘08 at 1:35 回答1:標準ライブラリのsubprocess モジュールを参照： 12from subprocess import callcall([\"ls\", \"-l\"]) subprocessはsystemと比較して、より柔軟性があることが利点。（stdout、stderr、 “実際の”ステータスコード、より良いエラー処理、等…)。 公式ドキュメントもsubprocessモジュールを代替のos.system()として推奨してる。 subprocessモジュールは、新しいプロセスを産み出して、その結果を処理するため強力な機能を提供する。このモジュールを使用することは、この関数os.system()]を使うのより望ましい。 subprocessドキュメントの「古い関数をsubprocessモジュールで置き換えるの部分はいろいろ役に立つレシピがあるかも。 subprocessモジュールの公式文書は： Python 2 - subprocess Python 3 - subprocess By David Cournapeau | 回答日時： Sep 18 ‘08 at 1:39 回答2:僕なら普通こう書く、 123456import subprocessp = subprocess.Popen('ls', shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)for line in p.stdout.readlines(): print line,retval = p.wait() パイプ内の stdoutデータは自由に使える。実際には、それらのパラメータ(stdout =、 stderr =)は省略できるけど。その場合はos.system()のように振る舞う。 By EmmEff | 回答日時： Sep 18 ‘08 at 18:20 Source: Calling an external command in Python","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://somatome.github.io/somatome/tags/python/"},{"name":"shell","slug":"shell","permalink":"https://somatome.github.io/somatome/tags/shell/"},{"name":"command","slug":"command","permalink":"https://somatome.github.io/somatome/tags/command/"},{"name":"subprocess","slug":"subprocess","permalink":"https://somatome.github.io/somatome/tags/subprocess/"},{"name":"external","slug":"external","permalink":"https://somatome.github.io/somatome/tags/external/"}]},{"title":"jQueryで要素が非表示になっているかどうかを確認するのってどうすればいい？？","slug":"how-do-i-check-if-an-element-is-hidden-in-jquery","date":"2017-09-25T05:10:14.000Z","updated":"2017-09-25T05:30:11.154Z","comments":true,"path":"2017/09/25/how-do-i-check-if-an-element-is-hidden-in-jquery/","link":"","permalink":"https://somatome.github.io/somatome/2017/09/25/how-do-i-check-if-an-element-is-hidden-in-jquery/","excerpt":"質問：.hide()、 .show()、 .toggle()関数を使えば要素の可視性を切り替えることができるけど、要素が表示されているか隠れているかはどうやってテストすればいいの？\n By  Philip Morton | 質問日時： Oct 7 ‘08 at 13:03 ","text":"質問：.hide()、 .show()、 .toggle()関数を使えば要素の可視性を切り替えることができるけど、要素が表示されているか隠れているかはどうやってテストすればいいの？ By Philip Morton | 質問日時： Oct 7 ‘08 at 13:03 回答1:１つの要素についての質問だから、このコードがいいかな 1$(element).is(\":visible\"); [下の人の提案]と同じだけど、１つの要素についてのもの;そしてこれはjQueryのFAQで推奨されてるアルゴリズムとおんなじ By Tsvetomir Tsonev | 回答日時： Oct 7 ‘08 at 13:30 回答2:hiddenセレクタが使えるよ： 12//非表示になってるのすべての要素とマッチする$('element:hidden') それか、visibleセレクタ： 123// Matches all elements that are visible//表示されているすべての要素とマッチ。$('element:visible') By twernt | 回答日時： Oct 7 ‘08 at 13:16 回答3:1234if ( $(element).css('display') == 'none' )&#123; // element is hidden // 要素は隠されてる&#125; 関数はvisibility属性では機能しないけど。 By Mote | 回答日時： Oct 7 ‘08 at 13:09 回答4:どの答えも、僕が質問だと思ってた（そして僕が探していたもの）のと違う答えしてる、つまり_「visibility: hiddenを持つアイテムをどうやって扱うの？っていう質問。:visibleも:hiddenもここでは使えない、というのはどちらもドキュメントごとの表示を探してるから。僕がわかる限り、CSSの可視性を処理するセレクタってないよね。僕の解決方法を書いてみる(標準のjQueryセレクタでは、もっといい書き方があるかもだけど)。 1234567$(\".item\").each(function() &#123; if ($(this).css(\"visibility\") == \"hidden\") &#123; //非可視状態を処理する &#125; else &#123; //可視状態を処理する &#125;&#125;); By aaronLile | 回答日時： Mar 24 ‘11 at 18:44 回答5: どうやってトグルする要素の状態調べるの？より 要素が折りたたまれているかどうかは、:visibleと:hiddenセレクタ: 12var isVisible = $('#myDiv').is(':visible');var isHidden = $('#myDiv').is(':hidden'); 可視状態に基づいて要素に何かするのであれば、セレクタ式に :visibleや:hiddenを含める。例えば： 1$('#myDiv:visible').animate(&#123;left: '+=200px'&#125;, 'slow'); By user574889 | 回答日時： Jan 13 ‘11 at 21:13 Source: How do I check if an element is hidden in jQuery?","raw":null,"content":null,"categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/somatome/tags/javascript/"},{"name":"jquery","slug":"jquery","permalink":"https://somatome.github.io/somatome/tags/jquery/"},{"name":"dom","slug":"dom","permalink":"https://somatome.github.io/somatome/tags/dom/"},{"name":"visibility","slug":"visibility","permalink":"https://somatome.github.io/somatome/tags/visibility/"}]},{"title":"JavaScriptである文字列に別な文字列（substring）が含まれているかどうかをチェックする方法って？","slug":"how-to-check-whether-a-string-contains-a-substring-in-javascript","date":"2017-09-24T23:46:44.000Z","updated":"2017-09-25T00:02:24.529Z","comments":true,"path":"2017/09/25/how-to-check-whether-a-string-contains-a-substring-in-javascript/","link":"","permalink":"https://somatome.github.io/somatome/2017/09/25/how-to-check-whether-a-string-contains-a-substring-in-javascript/","excerpt":"質問：String.contains()メソッドだと思ったんだけど、ちょっと違うみたい。これをチェックするいい方法ってあるかな？","text":"質問：String.contains()メソッドだと思ったんだけど、ちょっと違うみたい。これをチェックするいい方法ってあるかな？ 回答1:考えられる方法としてはこんな感じ： indexOf123var string = \"foo\", substring = \"oo\";string.indexOf(substring) !== -1; String.prototype.indexOfは、ある文字列の中にある他の文字列の位置を返す。見つからなければ -1を返す。 (ES6) includes - この回答、またはこの回答を参照 123var string = \"foo\", substring = \"oo\";string.includes(substring); search - この回答参照 123var string = \"foo\", expr = /oo/;string.search(expr); lodash includes - この回答参照 123var string = \"foo\", substring = \"oo\";_.includes(string, substring); RegExp - この回答参照 123var string = \"foo\", expr = /oo/; // no quotes hereexpr.test(string); Match - この回答参照 123var string = \"foo\", expr = /oo/;string.match(expr); パフォーマンステスト(http://jsben.ch/#/RVYk7)の結果によればでは、indexOfが最速みたいなので、スピードが重要なポイントになる場合は、最良の選択かも。 By Fabien Ménager | 回答日時： Nov 24 ‘09 at 13:05 回答2:こうやればStringに containsメソッドを簡単に追加できるよ： function(it){このthis.indexOfを返します！ }; }1String.prototype.contains = function(it) &#123; return this.indexOf(it) != -1; &#125;; _Note：これを使うのはいろいろ議論の別れるところだけど、自分自身の判断で使用して。 これ以外だと： 1if (typeof String.prototype.contains === 'undefined') &#123; String.prototype.contains = function(it) &#123; return this.indexOf(it) != -1; &#125;; &#125; By Avi Flax | 回答日時： Dec 30 ‘09 at 4:23 回答3:JavaScriptが大文字と小文字を区別するのに気をつけて。きみのコードだと、 1indexof() でも実際には 1indexOf() これを修正し、うまくいくか確認してみて： 1234if (test.indexOf(\"title\") !=-1) &#123; alert(elm); foundLinks++;&#125; By Victor | 回答日時： Nov 24 ‘09 at 14:17 Source: How to check whether a string contains a substring in JavaScript?","raw":null,"content":null,"categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/somatome/tags/javascript/"},{"name":"string","slug":"string","permalink":"https://somatome.github.io/somatome/tags/string/"},{"name":"substring","slug":"substring","permalink":"https://somatome.github.io/somatome/tags/substring/"},{"name":"contains","slug":"contains","permalink":"https://somatome.github.io/somatome/tags/contains/"},{"name":"string-matching","slug":"string-matching","permalink":"https://somatome.github.io/somatome/tags/string-matching/"}]},{"title":"ローカルとリモートの両方でGitブランチを削除するには？","slug":"how-do-i-delete-a-git-branch-both-locally-and-remotely","date":"2017-09-24T23:05:54.000Z","updated":"2017-09-24T23:33:09.980Z","comments":true,"path":"2017/09/25/how-do-i-delete-a-git-branch-both-locally-and-remotely/","link":"","permalink":"https://somatome.github.io/somatome/2017/09/25/how-do-i-delete-a-git-branch-both-locally-and-remotely/","excerpt":"質問：ローカルと、Github上のフォークした自分のリモートプロジェクトのブランチを削除したいんだけど。\nリモートのブランチを削除するためにこれまで試みた方法（失敗した）：\n12345678910111213141516$ git branch -d remotes/origin/bugfixerror: branch 'remotes/origin/bugfix' not found.$ git branch -d origin/bugfixerror: branch 'origin/bugfix' not found.$ git branch -rd origin/bugfixDeleted remote branch origin/bugfix (was 2a14ef7).$ git pushEverything up-to-date$ git pullFrom github.com:gituser/gitproject* [new branch] bugfix -&amp;gt; origin/bugfixAlready up-to-date.\nremotes/origin/bugfixブランチをローカルとリモート両方で削除するにはほか何をしたらいいの？\n By  Matthew Rankin | 質問日時： Jan 5 ‘10 at 1:12 ","text":"質問：ローカルと、Github上のフォークした自分のリモートプロジェクトのブランチを削除したいんだけど。 リモートのブランチを削除するためにこれまで試みた方法（失敗した）： 12345678910111213141516$ git branch -d remotes/origin/bugfixerror: branch 'remotes/origin/bugfix' not found.$ git branch -d origin/bugfixerror: branch 'origin/bugfix' not found.$ git branch -rd origin/bugfixDeleted remote branch origin/bugfix (was 2a14ef7).$ git pushEverything up-to-date$ git pullFrom github.com:gituser/gitproject* [new branch] bugfix -&amp;gt; origin/bugfixAlready up-to-date. remotes/origin/bugfixブランチをローカルとリモート両方で削除するにはほか何をしたらいいの？ By Matthew Rankin | 質問日時： Jan 5 ‘10 at 1:12 回答1:要旨12$ git push -d origin &lt;ブランチ名&gt;$ gitブランチ-d &lt;ブランチ名&gt; ローカルブランチを削除localブランチを削除するには、次のいずれかを使う。 12$ git branch -d ブランチ名$ git branch -D ブランチ名 注意： -dオプションは、--deleteのエイリアス。このオプションは、ブランチが既に上流ブランチに完全にマージされている場合にのみ削除するよ。あと--Dを使うこともでるけど、これは--delete --forceのエイリアスで、「merged statusに関係なく」ブランチを削除するよ。 [出典： man git-branch] リモートブランチを削除する[2017年9月8日更新]Git v1.7.0では、 remote ブランチを削除するには 1$ git push origin --delete &lt;ブランチ名&gt; こっちの方が覚えやすいかも 1$ git push origin :&lt;ブランチ名&gt; これはGit v1.5.0以降で、「リモートブランチやタグを削除するために」追加されたやつ。 Git v2.8.0以降では、git pushの際、--deleteのエイリアスとして--dオプションつけて使うこともできるよ。 だから、インストールしたGitのバージョンによって、より簡単なシンタックスか難しいシンタックスになるかは変わってくる。 By Matthew Rankin | 回答日時： Jan 5 ‘10 at 1:13 回答2:上のの答えはremoteブランチを削除するのにベストだと思うし、この説明してくれてありがとうって思うけど、この2つのコマンドを簡単な区別するをするために書くと、 ローカルブランチ を削除するには： git branch -d {th​​e_local_branch}(マージされた状態をチェックせずに強制的に削除する場合は-Dを使用） リモートブランチ をサーバーから削除するには： git push origin --delete {the_remote_branch} 参考：https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote By Eric Brotto | 回答日時： Jun 12 ‘12 at 14:51 回答3:リモートブランチを削除するには、次のコマンドを使用してもいいかも。 1git push --delete origin serverfix 以下でも同じ 1git push origin：serverfix こっちのほうが覚えやすいかな？ By pagetribe | 回答日時： Oct 27 ‘11 at 22:22 回答4:ブランチを削除する場合は、最初に削除するブランチ以外のブランチをチェックアウトする 1git checkout &lt;削除する以外のブランチ&gt; ローカルブランチの削除： 1git branch -D &lt;削除するブランチ&gt; リモートブランチの削除： 1git push origin --delete &lt;削除するブランチ&gt; By Praveen Hiremath | 回答日時： Oct 7 ‘14 at 13:52 Source: How do I delete a Git branch both locally and remotely?","raw":null,"content":null,"categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://somatome.github.io/somatome/tags/git/"},{"name":"git-branch","slug":"git-branch","permalink":"https://somatome.github.io/somatome/tags/git-branch/"},{"name":"git-remote","slug":"git-remote","permalink":"https://somatome.github.io/somatome/tags/git-remote/"}]},{"title":"Gitの最後のコミットを元に戻す方法ってどうやるの？","slug":"how-to-undo-the-last-commits-in-git","date":"2017-09-24T22:42:48.000Z","updated":"2017-09-24T23:12:07.371Z","comments":true,"path":"2017/09/24/how-to-undo-the-last-commits-in-git/","link":"","permalink":"https://somatome.github.io/somatome/2017/09/24/how-to-undo-the-last-commits-in-git/","excerpt":"質問：間違ったファイルをGitにコミットしたんだけど、まだサーバーへはプッシュしていないんだ。\nこのコミットを元に戻すにはどうすればいいですか？","text":"質問：間違ったファイルをGitにコミットしたんだけど、まだサーバーへはプッシュしていないんだ。 このコミットを元に戻すにはどうすればいいですか？ 回答1:コミットとやり直しを元に戻す12345$ git commit -m \"クソ間違えた内容\" (1)$ git reset HEAD~ (2)&lt;&lt;必要に応じてファイルを編集する&gt;&gt; (3)$ git add ... (4)$ git commit -c ORIG_HEAD (5) これを元に戻したい これによって、作業ツリー(ディスク上のファイルの状態)は変更されませんが、コミットが取り消され、コミットされていない変更が残される(git statusでは” Changes not staged for commit”になってるのでコミットする前に再度追加する必要あり)。以前のコミットにもっと多くの変更をaddしたい場合や、コミットメッセージ（注）を変更したい場合は git reset HEAD〜のように git reset --soft HEAD〜を使うことができる。 作業ツリーファイルを修正。 新しいコミットに含めるものを git addする。 変更をコミットし、古いコミット・メッセージを再使用する。 reset は古いヘッドを .git/ORIG_HEAD にコピーする。 -c ORIG_HEAD で commit&#39; を実行するとエディタが開く。エディタは最初は古いコミットのログメッセージを含み、編集することができる。メッセージを編集する必要がない場合は、-C` オプションが使えるよ。 注： commitメッセージで間違えただけなら、以前のコミットにリセットする必要はないことに注意。この場合、 (それまでの変更を戻すために)git resetすればいい。そしてgit commit --amendすると、最後のコミットメッセージを含んだデフォルトのエディタが開くはず。 ただし、新しい変更をインデックスに追加した場合は、commit --amendは前のコミットにそれらを追加するよ。 回答2:適宜ファイルを追加/削除する： 12git rm classdirgit add sourcedir それからコミットを修正： 1git commit --amend 以前の誤ったコミットは、新しいインデックス状態を反映するために編集されるよ。言い換えれば、それは最初から間違いを犯さなかったようなかんじに。 まだプッシュしていない場合にのみこれを行うべきであることに注意。プッシュしちゃったなら、普通に修正をコミットする必要がある。 By bdonlan | 回答日時： May 29 ‘09 at 18:16 Source: How to undo the last commits in Git?","raw":null,"content":null,"categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://somatome.github.io/somatome/tags/git/"},{"name":"git-rebase","slug":"git-rebase","permalink":"https://somatome.github.io/somatome/tags/git-rebase/"},{"name":"git-commit","slug":"git-commit","permalink":"https://somatome.github.io/somatome/tags/git-commit/"},{"name":"git-reset","slug":"git-reset","permalink":"https://somatome.github.io/somatome/tags/git-reset/"},{"name":"git-revert","slug":"git-revert","permalink":"https://somatome.github.io/somatome/tags/git-revert/"}]},{"title":"他のウェブページにリダイレクトする方法ってどうやるの？","slug":"how-to-redirect-to-another-webpage","date":"2017-09-24T22:18:43.000Z","updated":"2017-09-24T22:37:46.547Z","comments":true,"path":"2017/09/24/how-to-redirect-to-another-webpage/","link":"","permalink":"https://somatome.github.io/somatome/2017/09/24/how-to-redirect-to-another-webpage/","excerpt":"質問：jQueryか純粋なJavaScriptを使って、あるページから別のページにユーザーをリダイレクトする方法ってどうやるの？\n By  venkatachalam | 質問日時： Feb 2 ‘09 at 12:54 ","text":"質問：jQueryか純粋なJavaScriptを使って、あるページから別のページにユーザーをリダイレクトする方法ってどうやるの？ By venkatachalam | 質問日時： Feb 2 ‘09 at 12:54 回答1:汝、リダイレクトするためだけにjQueryを使うべからずjQueryは必要ないよ。 window.location.replace(...) は、HTTPリダイレクトをよくシミュレートできるから。 window.location.replace(...)は window.location.hrefを使うよりも優れてる、というのはreplace()は元のページをセッション履歴に残さないから、ユーザーが終わりのないバック・ボタンの失敗に悩まされることはないよ。 もしリンクをクリックするのをシミュレートしたい場合は、 location.href を使うHTTPリダイレクトをシミュレートする場合は、 location.replaceを使う 例えば： 12345// HTTPリダイレクトと同様の動作window.location.replace(\"http://stackoverflow.com\");//リンクをクリックすると同様の動作window.location.href = \"http://stackoverflow.com\"; By Ryan McGeary | 回答日時： Feb 3 ‘09 at 4:24 回答2: 警告：この回答は単に解決策の１つとして提供されているに過だけ。これはjQueryが必要なので、明らかに最善の解決策っていうわけじゃない。代わりに、純粋なJavaScriptでやったほうがいいと思う。 1$(location).attr('href', 'http://stackoverflow.com') By Boris Guéry | 回答日時： Oct 28 ‘09 at 16:35 回答3: ページをリダイレクトするための標準的な “素の” JavaScriptでの方法： `window.location.href = ‘newPage.html’; リダイレクト時にHTTPREFERERを失っている_場合は、以下を参考に このセクションは HTTP_REFERERを安全なものの1つとして使用する人のためのもの(あんまりいい保護手段じゃないけど)。Internet Explorer 8またはそれ以前のを使用している場合、JavaScriptのページリダイレクションがどうあっても、これらの変数が失われる(location.hrefなど)。 以下では、HTTP_REFERERを失わないようにIE8より以前での実装をやってみる。それ以外の場合は、ほとんどの場合window.location.hrefでいけるはず。 HTTP_REFERER(URLの貼り付け、セッションなど)に対するテストはリクエストがちゃんとしてるか判断するのに手助けに成るはず。(注：これらのリファラを回避する/偽装する方法ももちろん存在する) 簡単なクロスブラウザテストソリューション(Internet Explorer 9以降および他のすべてのブラウザではwindow.location.hrefを) 使用法： redirect(&#39;anotherpage.aspx&#39;); 123456789101112131415161718function redirect (url) &#123; var ua = navigator.userAgent.toLowerCase(), isIE = ua.indexOf('msie') !== -1, version = parseInt(ua.substr(4, 2), 10); // Internet Explorer 8以下 if (isIE &amp;amp;&amp;amp; version &amp;lt; 9) &#123; var link = document.createElement('a'); link.href = url; document.body.appendChild(link); link.click(); &#125; //他のすべてのブラウザは標準のwindow.location.hrefを使用可(Internet Explorer 8以下のようにHTTP_REFERERを失うことはない) else &#123; window.location.href = url; &#125;&#125; By Mark Pieszak | 回答日時： Jul 27 ‘12 at 14:41 回答4:これ使いな： 12345678910111213141516171819202122// window.locationwindow.location.replace('http://www.example.com')window.location.assign('http://www.example.com')window.location.href = 'http://www.example.com'document.location.href = '/path'// window.historywindow.history.back()window.history.go(-1)// window.navigate; ONLY for old versions of Internet Explorerwindow.navigate('top.jsp')// たぶんあんまりよくないself.location = 'http://www.example.com';top.location = 'http://www.example.com';// jQuery$(location).attr('href','http://www.example.com')$(window).attr('location','http://www.example.com')$(location).prop('href', 'http://www.example.com') By Govind Singh | 回答日時： Jan 28 ‘14 at 4:28 回答5:これならどのブラウザでも動作するよ： 1window.location.href = 'your_url'; By Fred | 回答日時： Oct 22 ‘10 at 23:45 Source: How to redirect to another webpage?","raw":null,"content":null,"categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://somatome.github.io/somatome/tags/javascript/"},{"name":"jquery","slug":"jquery","permalink":"https://somatome.github.io/somatome/tags/jquery/"},{"name":"redirect","slug":"redirect","permalink":"https://somatome.github.io/somatome/tags/redirect/"}]}]}